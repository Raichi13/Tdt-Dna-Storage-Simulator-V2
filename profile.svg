<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="698" onload="init(evt)" viewBox="0 0 1200 698" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="698" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg --subprocesses -- python simulation.py -p sim0.csv</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="687.00"> </text><svg id="frames" x="10" width="1180" total_samples="951804"><g><title>simulate_single (simulation.py:43) (3,337 samples, 0.35%)</title><rect x="0.0860%" y="340" width="0.3506%" height="15" fill="rgb(227,0,7)" fg:x="819" fg:w="3337"/><text x="0.3360%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (3,337 samples, 0.35%)</title><rect x="0.0860%" y="356" width="0.3506%" height="15" fill="rgb(217,0,24)" fg:x="819" fg:w="3337"/><text x="0.3360%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (3,304 samples, 0.35%)</title><rect x="0.0895%" y="372" width="0.3471%" height="15" fill="rgb(221,193,54)" fg:x="852" fg:w="3304"/><text x="0.3395%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,101 samples, 0.12%)</title><rect x="0.6015%" y="484" width="0.1157%" height="15" fill="rgb(248,212,6)" fg:x="5725" fg:w="1101"/><text x="0.8515%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (1,685 samples, 0.18%)</title><rect x="0.7172%" y="484" width="0.1770%" height="15" fill="rgb(208,68,35)" fg:x="6826" fg:w="1685"/><text x="0.9672%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (2,903 samples, 0.30%)</title><rect x="0.5922%" y="452" width="0.3050%" height="15" fill="rgb(232,128,0)" fg:x="5637" fg:w="2903"/><text x="0.8422%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (2,896 samples, 0.30%)</title><rect x="0.5930%" y="468" width="0.3043%" height="15" fill="rgb(207,160,47)" fg:x="5644" fg:w="2896"/><text x="0.8430%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (4,326 samples, 0.45%)</title><rect x="0.5345%" y="436" width="0.4545%" height="15" fill="rgb(228,23,34)" fg:x="5087" fg:w="4326"/><text x="0.7845%" y="446.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,339 samples, 0.25%)</title><rect x="1.0212%" y="548" width="0.2457%" height="15" fill="rgb(218,30,26)" fg:x="9720" fg:w="2339"/><text x="1.2712%" y="558.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (1,833 samples, 0.19%)</title><rect x="1.0744%" y="564" width="0.1926%" height="15" fill="rgb(220,122,19)" fg:x="10226" fg:w="1833"/><text x="1.3244%" y="574.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,354 samples, 0.25%)</title><rect x="1.0200%" y="532" width="0.2473%" height="15" fill="rgb(250,228,42)" fg:x="9708" fg:w="2354"/><text x="1.2700%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,483 samples, 0.26%)</title><rect x="1.0167%" y="516" width="0.2609%" height="15" fill="rgb(240,193,28)" fg:x="9677" fg:w="2483"/><text x="1.2667%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (2,793 samples, 0.29%)</title><rect x="0.9893%" y="484" width="0.2934%" height="15" fill="rgb(216,20,37)" fg:x="9416" fg:w="2793"/><text x="1.2393%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (2,750 samples, 0.29%)</title><rect x="0.9938%" y="500" width="0.2889%" height="15" fill="rgb(206,188,39)" fg:x="9459" fg:w="2750"/><text x="1.2438%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (2,796 samples, 0.29%)</title><rect x="0.9891%" y="468" width="0.2938%" height="15" fill="rgb(217,207,13)" fg:x="9414" fg:w="2796"/><text x="1.2391%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (7,153 samples, 0.75%)</title><rect x="0.5314%" y="388" width="0.7515%" height="15" fill="rgb(231,73,38)" fg:x="5058" fg:w="7153"/><text x="0.7814%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (7,152 samples, 0.75%)</title><rect x="0.5315%" y="404" width="0.7514%" height="15" fill="rgb(225,20,46)" fg:x="5059" fg:w="7152"/><text x="0.7815%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (7,147 samples, 0.75%)</title><rect x="0.5320%" y="420" width="0.7509%" height="15" fill="rgb(210,31,41)" fg:x="5064" fg:w="7147"/><text x="0.7820%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (2,798 samples, 0.29%)</title><rect x="0.9890%" y="436" width="0.2940%" height="15" fill="rgb(221,200,47)" fg:x="9413" fg:w="2798"/><text x="1.2390%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (2,797 samples, 0.29%)</title><rect x="0.9891%" y="452" width="0.2939%" height="15" fill="rgb(226,26,5)" fg:x="9414" fg:w="2797"/><text x="1.2391%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (7,892 samples, 0.83%)</title><rect x="0.4542%" y="356" width="0.8292%" height="15" fill="rgb(249,33,26)" fg:x="4323" fg:w="7892"/><text x="0.7042%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (7,168 samples, 0.75%)</title><rect x="0.5303%" y="372" width="0.7531%" height="15" fill="rgb(235,183,28)" fg:x="5047" fg:w="7168"/><text x="0.7803%" y="382.50"></text></g><g><title>simulate_single (simulation.py:45) (8,116 samples, 0.85%)</title><rect x="0.4366%" y="340" width="0.8527%" height="15" fill="rgb(221,5,38)" fg:x="4156" fg:w="8116"/><text x="0.6866%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (12,271 samples, 1.29%)</title><rect x="0.0624%" y="308" width="1.2892%" height="15" fill="rgb(247,18,42)" fg:x="594" fg:w="12271"/><text x="0.3124%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (12,271 samples, 1.29%)</title><rect x="0.0624%" y="324" width="1.2892%" height="15" fill="rgb(241,131,45)" fg:x="594" fg:w="12271"/><text x="0.3124%" y="334.50"></text></g><g><title>process 29674:&quot;python simulation.py -p sim0.csv&quot; (12,276 samples, 1.29%)</title><rect x="0.0620%" y="84" width="1.2898%" height="15" fill="rgb(249,31,29)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="100" width="1.2898%" height="15" fill="rgb(225,111,53)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="116" width="1.2898%" height="15" fill="rgb(238,160,17)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="132" width="1.2898%" height="15" fill="rgb(214,148,48)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="148" width="1.2898%" height="15" fill="rgb(232,36,49)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="164" width="1.2898%" height="15" fill="rgb(209,103,24)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="180" width="1.2898%" height="15" fill="rgb(229,88,8)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="196" width="1.2898%" height="15" fill="rgb(213,181,19)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="212" width="1.2898%" height="15" fill="rgb(254,191,54)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="228" width="1.2898%" height="15" fill="rgb(241,83,37)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="244" width="1.2898%" height="15" fill="rgb(233,36,39)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="260" width="1.2898%" height="15" fill="rgb(226,3,54)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="276" width="1.2898%" height="15" fill="rgb(245,192,40)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (12,276 samples, 1.29%)</title><rect x="0.0620%" y="292" width="1.2898%" height="15" fill="rgb(238,167,29)" fg:x="590" fg:w="12276"/><text x="0.3120%" y="302.50"></text></g><g><title>extension (tdt.py:36) (1,051 samples, 0.11%)</title><rect x="1.6498%" y="388" width="0.1104%" height="15" fill="rgb(232,182,51)" fg:x="15703" fg:w="1051"/><text x="1.8998%" y="398.50"></text></g><g><title>extension (tdt.py:41) (1,292 samples, 0.14%)</title><rect x="1.7646%" y="388" width="0.1357%" height="15" fill="rgb(231,60,39)" fg:x="16796" fg:w="1292"/><text x="2.0146%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (5,262 samples, 0.55%)</title><rect x="1.3866%" y="340" width="0.5528%" height="15" fill="rgb(208,69,12)" fg:x="13198" fg:w="5262"/><text x="1.6366%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (5,262 samples, 0.55%)</title><rect x="1.3866%" y="356" width="0.5528%" height="15" fill="rgb(235,93,37)" fg:x="13198" fg:w="5262"/><text x="1.6366%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,218 samples, 0.55%)</title><rect x="1.3913%" y="372" width="0.5482%" height="15" fill="rgb(213,116,39)" fg:x="13242" fg:w="5218"/><text x="1.6413%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (966 samples, 0.10%)</title><rect x="1.9663%" y="372" width="0.1015%" height="15" fill="rgb(222,207,29)" fg:x="18715" fg:w="966"/><text x="2.2163%" y="382.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (958 samples, 0.10%)</title><rect x="2.1953%" y="500" width="0.1007%" height="15" fill="rgb(206,96,30)" fg:x="20895" fg:w="958"/><text x="2.4453%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,451 samples, 0.15%)</title><rect x="2.1612%" y="484" width="0.1524%" height="15" fill="rgb(218,138,4)" fg:x="20570" fg:w="1451"/><text x="2.4112%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,189 samples, 0.23%)</title><rect x="2.3136%" y="484" width="0.2300%" height="15" fill="rgb(250,191,14)" fg:x="22021" fg:w="2189"/><text x="2.5636%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,796 samples, 0.40%)</title><rect x="2.1482%" y="452" width="0.3988%" height="15" fill="rgb(239,60,40)" fg:x="20447" fg:w="3796"/><text x="2.3982%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,781 samples, 0.40%)</title><rect x="2.1498%" y="468" width="0.3972%" height="15" fill="rgb(206,27,48)" fg:x="20462" fg:w="3781"/><text x="2.3998%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,553 samples, 0.58%)</title><rect x="2.0722%" y="436" width="0.5834%" height="15" fill="rgb(225,35,8)" fg:x="19723" fg:w="5553"/><text x="2.3222%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (972 samples, 0.10%)</title><rect x="2.5535%" y="452" width="0.1021%" height="15" fill="rgb(250,213,24)" fg:x="24304" fg:w="972"/><text x="2.8035%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (986 samples, 0.10%)</title><rect x="2.7870%" y="596" width="0.1036%" height="15" fill="rgb(247,123,22)" fg:x="26527" fg:w="986"/><text x="3.0370%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,062 samples, 0.11%)</title><rect x="2.7808%" y="580" width="0.1116%" height="15" fill="rgb(231,138,38)" fg:x="26468" fg:w="1062"/><text x="3.0308%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (2,116 samples, 0.22%)</title><rect x="2.7711%" y="564" width="0.2223%" height="15" fill="rgb(231,145,46)" fg:x="26375" fg:w="2116"/><text x="3.0211%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,780 samples, 0.29%)</title><rect x="2.7016%" y="548" width="0.2921%" height="15" fill="rgb(251,118,11)" fg:x="25714" fg:w="2780"/><text x="2.9516%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,802 samples, 0.29%)</title><rect x="2.6995%" y="532" width="0.2944%" height="15" fill="rgb(217,147,25)" fg:x="25694" fg:w="2802"/><text x="2.9495%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (3,001 samples, 0.32%)</title><rect x="2.6920%" y="516" width="0.3153%" height="15" fill="rgb(247,81,37)" fg:x="25623" fg:w="3001"/><text x="2.9420%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,400 samples, 0.36%)</title><rect x="2.6559%" y="484" width="0.3572%" height="15" fill="rgb(209,12,38)" fg:x="25279" fg:w="3400"/><text x="2.9059%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,339 samples, 0.35%)</title><rect x="2.6623%" y="500" width="0.3508%" height="15" fill="rgb(227,1,9)" fg:x="25340" fg:w="3339"/><text x="2.9123%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,402 samples, 0.36%)</title><rect x="2.6558%" y="468" width="0.3574%" height="15" fill="rgb(248,47,43)" fg:x="25278" fg:w="3402"/><text x="2.9058%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (8,989 samples, 0.94%)</title><rect x="2.0689%" y="388" width="0.9444%" height="15" fill="rgb(221,10,30)" fg:x="19692" fg:w="8989"/><text x="2.3189%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (8,987 samples, 0.94%)</title><rect x="2.0691%" y="404" width="0.9442%" height="15" fill="rgb(210,229,1)" fg:x="19694" fg:w="8987"/><text x="2.3191%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (8,985 samples, 0.94%)</title><rect x="2.0693%" y="420" width="0.9440%" height="15" fill="rgb(222,148,37)" fg:x="19696" fg:w="8985"/><text x="2.3193%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,405 samples, 0.36%)</title><rect x="2.6556%" y="436" width="0.3577%" height="15" fill="rgb(234,67,33)" fg:x="25276" fg:w="3405"/><text x="2.9056%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,403 samples, 0.36%)</title><rect x="2.6558%" y="452" width="0.3575%" height="15" fill="rgb(247,98,35)" fg:x="25278" fg:w="3403"/><text x="2.9058%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (9,987 samples, 1.05%)</title><rect x="1.9648%" y="356" width="1.0493%" height="15" fill="rgb(247,138,52)" fg:x="18701" fg:w="9987"/><text x="2.2148%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (9,007 samples, 0.95%)</title><rect x="2.0678%" y="372" width="0.9463%" height="15" fill="rgb(213,79,30)" fg:x="19681" fg:w="9007"/><text x="2.3178%" y="382.50"></text></g><g><title>simulate_single (simulation.py:45) (10,279 samples, 1.08%)</title><rect x="1.9395%" y="340" width="1.0799%" height="15" fill="rgb(246,177,23)" fg:x="18460" fg:w="10279"/><text x="2.1895%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,682 samples, 1.75%)</title><rect x="1.3517%" y="308" width="1.7527%" height="15" fill="rgb(230,62,27)" fg:x="12866" fg:w="16682"/><text x="1.6017%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,682 samples, 1.75%)</title><rect x="1.3517%" y="324" width="1.7527%" height="15" fill="rgb(216,154,8)" fg:x="12866" fg:w="16682"/><text x="1.6017%" y="334.50"></text></g><g><title>process 29675:&quot;python simulation.py -p sim0.csv&quot; (16,683 samples, 1.75%)</title><rect x="1.3517%" y="84" width="1.7528%" height="15" fill="rgb(244,35,45)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="100" width="1.7528%" height="15" fill="rgb(251,115,12)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="116" width="1.7528%" height="15" fill="rgb(240,54,50)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="132" width="1.7528%" height="15" fill="rgb(233,84,52)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="148" width="1.7528%" height="15" fill="rgb(207,117,47)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="164" width="1.7528%" height="15" fill="rgb(249,43,39)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="180" width="1.7528%" height="15" fill="rgb(209,38,44)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="196" width="1.7528%" height="15" fill="rgb(236,212,23)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="212" width="1.7528%" height="15" fill="rgb(242,79,21)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="228" width="1.7528%" height="15" fill="rgb(211,96,35)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="244" width="1.7528%" height="15" fill="rgb(253,215,40)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="260" width="1.7528%" height="15" fill="rgb(211,81,21)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="276" width="1.7528%" height="15" fill="rgb(208,190,38)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,683 samples, 1.75%)</title><rect x="1.3517%" y="292" width="1.7528%" height="15" fill="rgb(235,213,38)" fg:x="12866" fg:w="16683"/><text x="1.6017%" y="302.50"></text></g><g><title>extension (tdt.py:41) (1,004 samples, 0.11%)</title><rect x="3.4492%" y="388" width="0.1055%" height="15" fill="rgb(237,122,38)" fg:x="32830" fg:w="1004"/><text x="3.6992%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (4,289 samples, 0.45%)</title><rect x="3.1351%" y="340" width="0.4506%" height="15" fill="rgb(244,218,35)" fg:x="29840" fg:w="4289"/><text x="3.3851%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (4,289 samples, 0.45%)</title><rect x="3.1351%" y="356" width="0.4506%" height="15" fill="rgb(240,68,47)" fg:x="29840" fg:w="4289"/><text x="3.3851%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (4,253 samples, 0.45%)</title><rect x="3.1389%" y="372" width="0.4468%" height="15" fill="rgb(210,16,53)" fg:x="29876" fg:w="4253"/><text x="3.3889%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,230 samples, 0.13%)</title><rect x="3.7754%" y="484" width="0.1292%" height="15" fill="rgb(235,124,12)" fg:x="35934" fg:w="1230"/><text x="4.0254%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (1,891 samples, 0.20%)</title><rect x="3.9046%" y="484" width="0.1987%" height="15" fill="rgb(224,169,11)" fg:x="37164" fg:w="1891"/><text x="4.1546%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,244 samples, 0.34%)</title><rect x="3.7656%" y="452" width="0.3408%" height="15" fill="rgb(250,166,2)" fg:x="35841" fg:w="3244"/><text x="4.0156%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,230 samples, 0.34%)</title><rect x="3.7671%" y="468" width="0.3394%" height="15" fill="rgb(242,216,29)" fg:x="35855" fg:w="3230"/><text x="4.0171%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (4,801 samples, 0.50%)</title><rect x="3.7010%" y="436" width="0.5044%" height="15" fill="rgb(230,116,27)" fg:x="35226" fg:w="4801"/><text x="3.9510%" y="446.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (1,930 samples, 0.20%)</title><rect x="4.3050%" y="564" width="0.2028%" height="15" fill="rgb(228,99,48)" fg:x="40975" fg:w="1930"/><text x="4.5550%" y="574.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,541 samples, 0.27%)</title><rect x="4.2409%" y="532" width="0.2670%" height="15" fill="rgb(253,11,6)" fg:x="40365" fg:w="2541"/><text x="4.4909%" y="542.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,526 samples, 0.27%)</title><rect x="4.2425%" y="548" width="0.2654%" height="15" fill="rgb(247,143,39)" fg:x="40380" fg:w="2526"/><text x="4.4925%" y="558.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,688 samples, 0.28%)</title><rect x="4.2347%" y="516" width="0.2824%" height="15" fill="rgb(236,97,10)" fg:x="40306" fg:w="2688"/><text x="4.4847%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,013 samples, 0.32%)</title><rect x="4.2058%" y="484" width="0.3166%" height="15" fill="rgb(233,208,19)" fg:x="40031" fg:w="3013"/><text x="4.4558%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (2,970 samples, 0.31%)</title><rect x="4.2103%" y="500" width="0.3120%" height="15" fill="rgb(216,164,2)" fg:x="40074" fg:w="2970"/><text x="4.4603%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,017 samples, 0.32%)</title><rect x="4.2055%" y="468" width="0.3170%" height="15" fill="rgb(220,129,5)" fg:x="40028" fg:w="3017"/><text x="4.4555%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (7,848 samples, 0.82%)</title><rect x="3.6982%" y="388" width="0.8245%" height="15" fill="rgb(242,17,10)" fg:x="35200" fg:w="7848"/><text x="3.9482%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (7,847 samples, 0.82%)</title><rect x="3.6983%" y="404" width="0.8244%" height="15" fill="rgb(242,107,0)" fg:x="35201" fg:w="7847"/><text x="3.9483%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (7,845 samples, 0.82%)</title><rect x="3.6986%" y="420" width="0.8242%" height="15" fill="rgb(251,28,31)" fg:x="35203" fg:w="7845"/><text x="3.9486%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,021 samples, 0.32%)</title><rect x="4.2054%" y="436" width="0.3174%" height="15" fill="rgb(233,223,10)" fg:x="40027" fg:w="3021"/><text x="4.4554%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,020 samples, 0.32%)</title><rect x="4.2055%" y="452" width="0.3173%" height="15" fill="rgb(215,21,27)" fg:x="40028" fg:w="3020"/><text x="4.4555%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (8,728 samples, 0.92%)</title><rect x="3.6064%" y="356" width="0.9170%" height="15" fill="rgb(232,23,21)" fg:x="34326" fg:w="8728"/><text x="3.8564%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (7,862 samples, 0.83%)</title><rect x="3.6974%" y="372" width="0.8260%" height="15" fill="rgb(244,5,23)" fg:x="35192" fg:w="7862"/><text x="3.9474%" y="382.50"></text></g><g><title>simulate_single (simulation.py:45) (8,987 samples, 0.94%)</title><rect x="3.5857%" y="340" width="0.9442%" height="15" fill="rgb(226,81,46)" fg:x="34129" fg:w="8987"/><text x="3.8357%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (14,308 samples, 1.50%)</title><rect x="3.1047%" y="308" width="1.5033%" height="15" fill="rgb(247,70,30)" fg:x="29551" fg:w="14308"/><text x="3.3547%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (14,308 samples, 1.50%)</title><rect x="3.1047%" y="324" width="1.5033%" height="15" fill="rgb(212,68,19)" fg:x="29551" fg:w="14308"/><text x="3.3547%" y="334.50"></text></g><g><title>process 29676:&quot;python simulation.py -p sim0.csv&quot; (14,311 samples, 1.50%)</title><rect x="3.1045%" y="84" width="1.5036%" height="15" fill="rgb(240,187,13)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="100" width="1.5036%" height="15" fill="rgb(223,113,26)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="116" width="1.5036%" height="15" fill="rgb(206,192,2)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="132" width="1.5036%" height="15" fill="rgb(241,108,4)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="148" width="1.5036%" height="15" fill="rgb(247,173,49)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="164" width="1.5036%" height="15" fill="rgb(224,114,35)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="180" width="1.5036%" height="15" fill="rgb(245,159,27)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="196" width="1.5036%" height="15" fill="rgb(245,172,44)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="212" width="1.5036%" height="15" fill="rgb(236,23,11)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="228" width="1.5036%" height="15" fill="rgb(205,117,38)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="244" width="1.5036%" height="15" fill="rgb(237,72,25)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="260" width="1.5036%" height="15" fill="rgb(244,70,9)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="276" width="1.5036%" height="15" fill="rgb(217,125,39)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (14,311 samples, 1.50%)</title><rect x="3.1045%" y="292" width="1.5036%" height="15" fill="rgb(235,36,10)" fg:x="29549" fg:w="14311"/><text x="3.3545%" y="302.50"></text></g><g><title>extension (tdt.py:36) (970 samples, 0.10%)</title><rect x="4.9174%" y="388" width="0.1019%" height="15" fill="rgb(251,123,47)" fg:x="46804" fg:w="970"/><text x="5.1674%" y="398.50"></text></g><g><title>extension (tdt.py:41) (1,294 samples, 0.14%)</title><rect x="5.0250%" y="388" width="0.1360%" height="15" fill="rgb(221,13,13)" fg:x="47828" fg:w="1294"/><text x="5.2750%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (5,298 samples, 0.56%)</title><rect x="4.6423%" y="340" width="0.5566%" height="15" fill="rgb(238,131,9)" fg:x="44186" fg:w="5298"/><text x="4.8923%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (5,298 samples, 0.56%)</title><rect x="4.6423%" y="356" width="0.5566%" height="15" fill="rgb(211,50,8)" fg:x="44186" fg:w="5298"/><text x="4.8923%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,263 samples, 0.55%)</title><rect x="4.6460%" y="372" width="0.5529%" height="15" fill="rgb(245,182,24)" fg:x="44221" fg:w="5263"/><text x="4.8960%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (985 samples, 0.10%)</title><rect x="5.2247%" y="372" width="0.1035%" height="15" fill="rgb(242,14,37)" fg:x="49729" fg:w="985"/><text x="5.4747%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,378 samples, 0.14%)</title><rect x="5.4220%" y="484" width="0.1448%" height="15" fill="rgb(246,228,12)" fg:x="51607" fg:w="1378"/><text x="5.6720%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,145 samples, 0.23%)</title><rect x="5.5668%" y="484" width="0.2254%" height="15" fill="rgb(213,55,15)" fg:x="52985" fg:w="2145"/><text x="5.8168%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,669 samples, 0.39%)</title><rect x="5.4096%" y="452" width="0.3855%" height="15" fill="rgb(209,9,3)" fg:x="51489" fg:w="3669"/><text x="5.6596%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,648 samples, 0.38%)</title><rect x="5.4118%" y="468" width="0.3833%" height="15" fill="rgb(230,59,30)" fg:x="51510" fg:w="3648"/><text x="5.6618%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,452 samples, 0.57%)</title><rect x="5.3330%" y="436" width="0.5728%" height="15" fill="rgb(209,121,21)" fg:x="50760" fg:w="5452"/><text x="5.5830%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (997 samples, 0.10%)</title><rect x="5.8011%" y="452" width="0.1047%" height="15" fill="rgb(220,109,13)" fg:x="55215" fg:w="997"/><text x="6.0511%" y="462.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (964 samples, 0.10%)</title><rect x="6.0295%" y="580" width="0.1013%" height="15" fill="rgb(232,18,1)" fg:x="57389" fg:w="964"/><text x="6.2795%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (1,928 samples, 0.20%)</title><rect x="6.0200%" y="564" width="0.2026%" height="15" fill="rgb(215,41,42)" fg:x="57299" fg:w="1928"/><text x="6.2700%" y="574.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,658 samples, 0.28%)</title><rect x="5.9435%" y="532" width="0.2793%" height="15" fill="rgb(224,123,36)" fg:x="56570" fg:w="2658"/><text x="6.1935%" y="542.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,639 samples, 0.28%)</title><rect x="5.9454%" y="548" width="0.2773%" height="15" fill="rgb(240,125,3)" fg:x="56589" fg:w="2639"/><text x="6.1954%" y="558.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,851 samples, 0.30%)</title><rect x="5.9382%" y="516" width="0.2995%" height="15" fill="rgb(205,98,50)" fg:x="56520" fg:w="2851"/><text x="6.1882%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,216 samples, 0.34%)</title><rect x="5.9062%" y="484" width="0.3379%" height="15" fill="rgb(205,185,37)" fg:x="56215" fg:w="3216"/><text x="6.1562%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,159 samples, 0.33%)</title><rect x="5.9121%" y="500" width="0.3319%" height="15" fill="rgb(238,207,15)" fg:x="56272" fg:w="3159"/><text x="6.1621%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,219 samples, 0.34%)</title><rect x="5.9059%" y="468" width="0.3382%" height="15" fill="rgb(213,199,42)" fg:x="56213" fg:w="3219"/><text x="6.1559%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (8,708 samples, 0.91%)</title><rect x="5.3294%" y="388" width="0.9149%" height="15" fill="rgb(235,201,11)" fg:x="50725" fg:w="8708"/><text x="5.5794%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (8,708 samples, 0.91%)</title><rect x="5.3294%" y="404" width="0.9149%" height="15" fill="rgb(207,46,11)" fg:x="50725" fg:w="8708"/><text x="5.5794%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (8,706 samples, 0.91%)</title><rect x="5.3296%" y="420" width="0.9147%" height="15" fill="rgb(241,35,35)" fg:x="50727" fg:w="8706"/><text x="5.5796%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,221 samples, 0.34%)</title><rect x="5.9058%" y="436" width="0.3384%" height="15" fill="rgb(243,32,47)" fg:x="56212" fg:w="3221"/><text x="6.1558%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,220 samples, 0.34%)</title><rect x="5.9059%" y="452" width="0.3383%" height="15" fill="rgb(247,202,23)" fg:x="56213" fg:w="3220"/><text x="6.1559%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (8,722 samples, 0.92%)</title><rect x="5.3282%" y="372" width="0.9164%" height="15" fill="rgb(219,102,11)" fg:x="50714" fg:w="8722"/><text x="5.5782%" y="382.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (9,727 samples, 1.02%)</title><rect x="5.2229%" y="356" width="1.0220%" height="15" fill="rgb(243,110,44)" fg:x="49712" fg:w="9727"/><text x="5.4729%" y="366.50"></text></g><g><title>simulate_single (simulation.py:45) (10,017 samples, 1.05%)</title><rect x="5.1990%" y="340" width="1.0524%" height="15" fill="rgb(222,74,54)" fg:x="49484" fg:w="10017"/><text x="5.4490%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,440 samples, 1.73%)</title><rect x="4.6081%" y="308" width="1.7272%" height="15" fill="rgb(216,99,12)" fg:x="43860" fg:w="16440"/><text x="4.8581%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,440 samples, 1.73%)</title><rect x="4.6081%" y="324" width="1.7272%" height="15" fill="rgb(226,22,26)" fg:x="43860" fg:w="16440"/><text x="4.8581%" y="334.50"></text></g><g><title>process 29677:&quot;python simulation.py -p sim0.csv&quot; (16,441 samples, 1.73%)</title><rect x="4.6081%" y="84" width="1.7274%" height="15" fill="rgb(217,163,10)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="100" width="1.7274%" height="15" fill="rgb(213,25,53)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="116" width="1.7274%" height="15" fill="rgb(252,105,26)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="132" width="1.7274%" height="15" fill="rgb(220,39,43)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="148" width="1.7274%" height="15" fill="rgb(229,68,48)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="164" width="1.7274%" height="15" fill="rgb(252,8,32)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="180" width="1.7274%" height="15" fill="rgb(223,20,43)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="196" width="1.7274%" height="15" fill="rgb(229,81,49)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="212" width="1.7274%" height="15" fill="rgb(236,28,36)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="228" width="1.7274%" height="15" fill="rgb(249,185,26)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="244" width="1.7274%" height="15" fill="rgb(249,174,33)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="260" width="1.7274%" height="15" fill="rgb(233,201,37)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="276" width="1.7274%" height="15" fill="rgb(221,78,26)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,441 samples, 1.73%)</title><rect x="4.6081%" y="292" width="1.7274%" height="15" fill="rgb(250,127,30)" fg:x="43860" fg:w="16441"/><text x="4.8581%" y="302.50"></text></g><g><title>extension (tdt.py:36) (968 samples, 0.10%)</title><rect x="6.6252%" y="388" width="0.1017%" height="15" fill="rgb(230,49,44)" fg:x="63059" fg:w="968"/><text x="6.8752%" y="398.50"></text></g><g><title>extension (tdt.py:41) (1,228 samples, 0.13%)</title><rect x="6.7332%" y="388" width="0.1290%" height="15" fill="rgb(229,67,23)" fg:x="64087" fg:w="1228"/><text x="6.9832%" y="398.50"></text></g><g><title>synthesis (tdt.py:67) (5,107 samples, 0.54%)</title><rect x="6.3641%" y="356" width="0.5366%" height="15" fill="rgb(249,83,47)" fg:x="60574" fg:w="5107"/><text x="6.6141%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,061 samples, 0.53%)</title><rect x="6.3690%" y="372" width="0.5317%" height="15" fill="rgb(215,43,3)" fg:x="60620" fg:w="5061"/><text x="6.6190%" y="382.50"></text></g><g><title>simulate_single (simulation.py:43) (5,109 samples, 0.54%)</title><rect x="6.3640%" y="340" width="0.5368%" height="15" fill="rgb(238,154,13)" fg:x="60573" fg:w="5109"/><text x="6.6140%" y="350.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (956 samples, 0.10%)</title><rect x="6.9265%" y="372" width="0.1004%" height="15" fill="rgb(219,56,2)" fg:x="65927" fg:w="956"/><text x="7.1765%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,404 samples, 0.15%)</title><rect x="7.1191%" y="484" width="0.1475%" height="15" fill="rgb(233,0,4)" fg:x="67760" fg:w="1404"/><text x="7.3691%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,214 samples, 0.23%)</title><rect x="7.2666%" y="484" width="0.2326%" height="15" fill="rgb(235,30,7)" fg:x="69164" fg:w="2214"/><text x="7.5166%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,762 samples, 0.40%)</title><rect x="7.1064%" y="452" width="0.3952%" height="15" fill="rgb(250,79,13)" fg:x="67639" fg:w="3762"/><text x="7.3564%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,746 samples, 0.39%)</title><rect x="7.1081%" y="468" width="0.3936%" height="15" fill="rgb(211,146,34)" fg:x="67655" fg:w="3746"/><text x="7.3581%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,609 samples, 0.59%)</title><rect x="7.0322%" y="436" width="0.5893%" height="15" fill="rgb(228,22,38)" fg:x="66933" fg:w="5609"/><text x="7.2822%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,099 samples, 0.12%)</title><rect x="7.5061%" y="452" width="0.1155%" height="15" fill="rgb(235,168,5)" fg:x="71443" fg:w="1099"/><text x="7.7561%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (977 samples, 0.10%)</title><rect x="7.7475%" y="596" width="0.1026%" height="15" fill="rgb(221,155,16)" fg:x="73741" fg:w="977"/><text x="7.9975%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,038 samples, 0.11%)</title><rect x="7.7421%" y="580" width="0.1091%" height="15" fill="rgb(215,215,53)" fg:x="73690" fg:w="1038"/><text x="7.9921%" y="590.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (976 samples, 0.10%)</title><rect x="7.8524%" y="580" width="0.1025%" height="15" fill="rgb(223,4,10)" fg:x="74739" fg:w="976"/><text x="8.1024%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (2,124 samples, 0.22%)</title><rect x="7.7325%" y="564" width="0.2232%" height="15" fill="rgb(234,103,6)" fg:x="73598" fg:w="2124"/><text x="7.9825%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,745 samples, 0.29%)</title><rect x="7.6674%" y="548" width="0.2884%" height="15" fill="rgb(227,97,0)" fg:x="72979" fg:w="2745"/><text x="7.9174%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,767 samples, 0.29%)</title><rect x="7.6652%" y="532" width="0.2907%" height="15" fill="rgb(234,150,53)" fg:x="72958" fg:w="2767"/><text x="7.9152%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,957 samples, 0.31%)</title><rect x="7.6580%" y="516" width="0.3107%" height="15" fill="rgb(228,201,54)" fg:x="72889" fg:w="2957"/><text x="7.9080%" y="526.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,387 samples, 0.36%)</title><rect x="7.6219%" y="468" width="0.3559%" height="15" fill="rgb(222,22,37)" fg:x="72546" fg:w="3387"/><text x="7.8719%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,385 samples, 0.36%)</title><rect x="7.6222%" y="484" width="0.3556%" height="15" fill="rgb(237,53,32)" fg:x="72548" fg:w="3385"/><text x="7.8722%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,332 samples, 0.35%)</title><rect x="7.6277%" y="500" width="0.3501%" height="15" fill="rgb(233,25,53)" fg:x="72601" fg:w="3332"/><text x="7.8777%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (9,048 samples, 0.95%)</title><rect x="7.0277%" y="388" width="0.9506%" height="15" fill="rgb(210,40,34)" fg:x="66890" fg:w="9048"/><text x="7.2777%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (9,048 samples, 0.95%)</title><rect x="7.0277%" y="404" width="0.9506%" height="15" fill="rgb(241,220,44)" fg:x="66890" fg:w="9048"/><text x="7.2777%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (9,043 samples, 0.95%)</title><rect x="7.0282%" y="420" width="0.9501%" height="15" fill="rgb(235,28,35)" fg:x="66895" fg:w="9043"/><text x="7.2782%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,396 samples, 0.36%)</title><rect x="7.6215%" y="436" width="0.3568%" height="15" fill="rgb(210,56,17)" fg:x="72542" fg:w="3396"/><text x="7.8715%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,394 samples, 0.36%)</title><rect x="7.6217%" y="452" width="0.3566%" height="15" fill="rgb(224,130,29)" fg:x="72544" fg:w="3394"/><text x="7.8717%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (9,062 samples, 0.95%)</title><rect x="7.0270%" y="372" width="0.9521%" height="15" fill="rgb(235,212,8)" fg:x="66883" fg:w="9062"/><text x="7.2770%" y="382.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (10,034 samples, 1.05%)</title><rect x="6.9251%" y="356" width="1.0542%" height="15" fill="rgb(223,33,50)" fg:x="65913" fg:w="10034"/><text x="7.1751%" y="366.50"></text></g><g><title>simulate_single (simulation.py:45) (10,326 samples, 1.08%)</title><rect x="6.9008%" y="340" width="1.0849%" height="15" fill="rgb(219,149,13)" fg:x="65682" fg:w="10326"/><text x="7.1508%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,371 samples, 1.72%)</title><rect x="6.3354%" y="308" width="1.7200%" height="15" fill="rgb(250,156,29)" fg:x="60301" fg:w="16371"/><text x="6.5854%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,371 samples, 1.72%)</title><rect x="6.3354%" y="324" width="1.7200%" height="15" fill="rgb(216,193,19)" fg:x="60301" fg:w="16371"/><text x="6.5854%" y="334.50"></text></g><g><title>process 29678:&quot;python simulation.py -p sim0.csv&quot; (16,372 samples, 1.72%)</title><rect x="6.3354%" y="84" width="1.7201%" height="15" fill="rgb(216,135,14)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="100" width="1.7201%" height="15" fill="rgb(241,47,5)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="116" width="1.7201%" height="15" fill="rgb(233,42,35)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="132" width="1.7201%" height="15" fill="rgb(231,13,6)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="148" width="1.7201%" height="15" fill="rgb(207,181,40)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="164" width="1.7201%" height="15" fill="rgb(254,173,49)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="180" width="1.7201%" height="15" fill="rgb(221,1,38)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="196" width="1.7201%" height="15" fill="rgb(206,124,46)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="212" width="1.7201%" height="15" fill="rgb(249,21,11)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="228" width="1.7201%" height="15" fill="rgb(222,201,40)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="244" width="1.7201%" height="15" fill="rgb(235,61,29)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="260" width="1.7201%" height="15" fill="rgb(219,207,3)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="276" width="1.7201%" height="15" fill="rgb(222,56,46)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,372 samples, 1.72%)</title><rect x="6.3354%" y="292" width="1.7201%" height="15" fill="rgb(239,76,54)" fg:x="60301" fg:w="16372"/><text x="6.5854%" y="302.50"></text></g><g><title>extension (tdt.py:36) (978 samples, 0.10%)</title><rect x="8.3595%" y="388" width="0.1028%" height="15" fill="rgb(231,124,27)" fg:x="79566" fg:w="978"/><text x="8.6095%" y="398.50"></text></g><g><title>extension (tdt.py:41) (1,281 samples, 0.13%)</title><rect x="8.4680%" y="388" width="0.1346%" height="15" fill="rgb(249,195,6)" fg:x="80599" fg:w="1281"/><text x="8.7180%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (5,260 samples, 0.55%)</title><rect x="8.0858%" y="340" width="0.5526%" height="15" fill="rgb(237,174,47)" fg:x="76961" fg:w="5260"/><text x="8.3358%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (5,259 samples, 0.55%)</title><rect x="8.0859%" y="356" width="0.5525%" height="15" fill="rgb(206,201,31)" fg:x="76962" fg:w="5259"/><text x="8.3359%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,213 samples, 0.55%)</title><rect x="8.0907%" y="372" width="0.5477%" height="15" fill="rgb(231,57,52)" fg:x="77008" fg:w="5213"/><text x="8.3407%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,001 samples, 0.11%)</title><rect x="8.6614%" y="372" width="0.1052%" height="15" fill="rgb(248,177,22)" fg:x="82440" fg:w="1001"/><text x="8.9114%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,386 samples, 0.15%)</title><rect x="8.8657%" y="484" width="0.1456%" height="15" fill="rgb(215,211,37)" fg:x="84384" fg:w="1386"/><text x="9.1157%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,127 samples, 0.22%)</title><rect x="9.0113%" y="484" width="0.2235%" height="15" fill="rgb(241,128,51)" fg:x="85770" fg:w="2127"/><text x="9.2613%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,661 samples, 0.38%)</title><rect x="8.8534%" y="452" width="0.3846%" height="15" fill="rgb(227,165,31)" fg:x="84267" fg:w="3661"/><text x="9.1034%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,640 samples, 0.38%)</title><rect x="8.8556%" y="468" width="0.3824%" height="15" fill="rgb(228,167,24)" fg:x="84288" fg:w="3640"/><text x="9.1056%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,527 samples, 0.58%)</title><rect x="8.7729%" y="436" width="0.5807%" height="15" fill="rgb(228,143,12)" fg:x="83501" fg:w="5527"/><text x="9.0229%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,052 samples, 0.11%)</title><rect x="9.2431%" y="452" width="0.1105%" height="15" fill="rgb(249,149,8)" fg:x="87976" fg:w="1052"/><text x="9.4931%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (974 samples, 0.10%)</title><rect x="9.4791%" y="596" width="0.1023%" height="15" fill="rgb(243,35,44)" fg:x="90222" fg:w="974"/><text x="9.7291%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,035 samples, 0.11%)</title><rect x="9.4742%" y="580" width="0.1087%" height="15" fill="rgb(246,89,9)" fg:x="90176" fg:w="1035"/><text x="9.7242%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (2,048 samples, 0.22%)</title><rect x="9.4640%" y="564" width="0.2152%" height="15" fill="rgb(233,213,13)" fg:x="90079" fg:w="2048"/><text x="9.7140%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,714 samples, 0.29%)</title><rect x="9.3944%" y="548" width="0.2851%" height="15" fill="rgb(233,141,41)" fg:x="89416" fg:w="2714"/><text x="9.6444%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,736 samples, 0.29%)</title><rect x="9.3924%" y="532" width="0.2875%" height="15" fill="rgb(239,167,4)" fg:x="89397" fg:w="2736"/><text x="9.6424%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,920 samples, 0.31%)</title><rect x="9.3863%" y="516" width="0.3068%" height="15" fill="rgb(209,217,16)" fg:x="89339" fg:w="2920"/><text x="9.6363%" y="526.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,286 samples, 0.35%)</title><rect x="9.3537%" y="468" width="0.3452%" height="15" fill="rgb(219,88,35)" fg:x="89029" fg:w="3286"/><text x="9.6037%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,286 samples, 0.35%)</title><rect x="9.3537%" y="484" width="0.3452%" height="15" fill="rgb(220,193,23)" fg:x="89029" fg:w="3286"/><text x="9.6037%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,238 samples, 0.34%)</title><rect x="9.3588%" y="500" width="0.3402%" height="15" fill="rgb(230,90,52)" fg:x="89077" fg:w="3238"/><text x="9.6088%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (8,866 samples, 0.93%)</title><rect x="8.7678%" y="388" width="0.9315%" height="15" fill="rgb(252,106,19)" fg:x="83452" fg:w="8866"/><text x="9.0178%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (8,859 samples, 0.93%)</title><rect x="8.7685%" y="404" width="0.9308%" height="15" fill="rgb(206,74,20)" fg:x="83459" fg:w="8859"/><text x="9.0185%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (8,856 samples, 0.93%)</title><rect x="8.7688%" y="420" width="0.9304%" height="15" fill="rgb(230,138,44)" fg:x="83462" fg:w="8856"/><text x="9.0188%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,290 samples, 0.35%)</title><rect x="9.3536%" y="436" width="0.3457%" height="15" fill="rgb(235,182,43)" fg:x="89028" fg:w="3290"/><text x="9.6036%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,289 samples, 0.35%)</title><rect x="9.3537%" y="452" width="0.3456%" height="15" fill="rgb(242,16,51)" fg:x="89029" fg:w="3289"/><text x="9.6037%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (8,885 samples, 0.93%)</title><rect x="8.7666%" y="372" width="0.9335%" height="15" fill="rgb(248,9,4)" fg:x="83441" fg:w="8885"/><text x="9.0166%" y="382.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (9,901 samples, 1.04%)</title><rect x="8.6600%" y="356" width="1.0402%" height="15" fill="rgb(210,31,22)" fg:x="82426" fg:w="9901"/><text x="8.9100%" y="366.50"></text></g><g><title>simulate_single (simulation.py:45) (10,154 samples, 1.07%)</title><rect x="8.6384%" y="340" width="1.0668%" height="15" fill="rgb(239,54,39)" fg:x="82221" fg:w="10154"/><text x="8.8884%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,388 samples, 1.72%)</title><rect x="8.0555%" y="308" width="1.7218%" height="15" fill="rgb(230,99,41)" fg:x="76673" fg:w="16388"/><text x="8.3055%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,388 samples, 1.72%)</title><rect x="8.0555%" y="324" width="1.7218%" height="15" fill="rgb(253,106,12)" fg:x="76673" fg:w="16388"/><text x="8.3055%" y="334.50"></text></g><g><title>process 29679:&quot;python simulation.py -p sim0.csv&quot; (16,389 samples, 1.72%)</title><rect x="8.0555%" y="84" width="1.7219%" height="15" fill="rgb(213,46,41)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="100" width="1.7219%" height="15" fill="rgb(215,133,35)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="116" width="1.7219%" height="15" fill="rgb(213,28,5)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="132" width="1.7219%" height="15" fill="rgb(215,77,49)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="148" width="1.7219%" height="15" fill="rgb(248,100,22)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="164" width="1.7219%" height="15" fill="rgb(208,67,9)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="180" width="1.7219%" height="15" fill="rgb(219,133,21)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="196" width="1.7219%" height="15" fill="rgb(246,46,29)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="212" width="1.7219%" height="15" fill="rgb(246,185,52)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="228" width="1.7219%" height="15" fill="rgb(252,136,11)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="244" width="1.7219%" height="15" fill="rgb(219,138,53)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="260" width="1.7219%" height="15" fill="rgb(211,51,23)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="276" width="1.7219%" height="15" fill="rgb(247,221,28)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,389 samples, 1.72%)</title><rect x="8.0555%" y="292" width="1.7219%" height="15" fill="rgb(251,222,45)" fg:x="76673" fg:w="16389"/><text x="8.3055%" y="302.50"></text></g><g><title>extension (tdt.py:41) (1,175 samples, 0.12%)</title><rect x="10.1527%" y="388" width="0.1234%" height="15" fill="rgb(217,162,53)" fg:x="96634" fg:w="1175"/><text x="10.4027%" y="398.50"></text></g><g><title>synthesis (tdt.py:67) (4,853 samples, 0.51%)</title><rect x="9.8029%" y="356" width="0.5099%" height="15" fill="rgb(229,93,14)" fg:x="93304" fg:w="4853"/><text x="10.0529%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (4,812 samples, 0.51%)</title><rect x="9.8072%" y="372" width="0.5056%" height="15" fill="rgb(209,67,49)" fg:x="93345" fg:w="4812"/><text x="10.0572%" y="382.50"></text></g><g><title>simulate_single (simulation.py:43) (4,854 samples, 0.51%)</title><rect x="9.8029%" y="340" width="0.5100%" height="15" fill="rgb(213,87,29)" fg:x="93304" fg:w="4854"/><text x="10.0529%" y="350.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,017 samples, 0.11%)</title><rect x="10.3409%" y="372" width="0.1068%" height="15" fill="rgb(205,151,52)" fg:x="98425" fg:w="1017"/><text x="10.5909%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,411 samples, 0.15%)</title><rect x="10.5461%" y="484" width="0.1482%" height="15" fill="rgb(253,215,39)" fg:x="100378" fg:w="1411"/><text x="10.7961%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,240 samples, 0.24%)</title><rect x="10.6943%" y="484" width="0.2353%" height="15" fill="rgb(221,220,41)" fg:x="101789" fg:w="2240"/><text x="10.9443%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,803 samples, 0.40%)</title><rect x="10.5334%" y="452" width="0.3996%" height="15" fill="rgb(218,133,21)" fg:x="100257" fg:w="3803"/><text x="10.7834%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,782 samples, 0.40%)</title><rect x="10.5356%" y="468" width="0.3974%" height="15" fill="rgb(221,193,43)" fg:x="100278" fg:w="3782"/><text x="10.7856%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,706 samples, 0.60%)</title><rect x="10.4526%" y="436" width="0.5995%" height="15" fill="rgb(240,128,52)" fg:x="99488" fg:w="5706"/><text x="10.7026%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,084 samples, 0.11%)</title><rect x="10.9382%" y="452" width="0.1139%" height="15" fill="rgb(253,114,12)" fg:x="104110" fg:w="1084"/><text x="11.1882%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (973 samples, 0.10%)</title><rect x="11.1789%" y="596" width="0.1022%" height="15" fill="rgb(215,223,47)" fg:x="106401" fg:w="973"/><text x="11.4289%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,039 samples, 0.11%)</title><rect x="11.1736%" y="580" width="0.1092%" height="15" fill="rgb(248,225,23)" fg:x="106351" fg:w="1039"/><text x="11.4236%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (2,048 samples, 0.22%)</title><rect x="11.1648%" y="564" width="0.2152%" height="15" fill="rgb(250,108,0)" fg:x="106267" fg:w="2048"/><text x="11.4148%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,728 samples, 0.29%)</title><rect x="11.0935%" y="548" width="0.2866%" height="15" fill="rgb(228,208,7)" fg:x="105588" fg:w="2728"/><text x="11.3435%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,746 samples, 0.29%)</title><rect x="11.0917%" y="532" width="0.2885%" height="15" fill="rgb(244,45,10)" fg:x="105571" fg:w="2746"/><text x="11.3417%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,933 samples, 0.31%)</title><rect x="11.0854%" y="516" width="0.3082%" height="15" fill="rgb(207,125,25)" fg:x="105511" fg:w="2933"/><text x="11.3354%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,288 samples, 0.35%)</title><rect x="11.0526%" y="484" width="0.3454%" height="15" fill="rgb(210,195,18)" fg:x="105199" fg:w="3288"/><text x="11.3026%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,225 samples, 0.34%)</title><rect x="11.0592%" y="500" width="0.3388%" height="15" fill="rgb(249,80,12)" fg:x="105262" fg:w="3225"/><text x="11.3092%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,291 samples, 0.35%)</title><rect x="11.0524%" y="468" width="0.3458%" height="15" fill="rgb(221,65,9)" fg:x="105197" fg:w="3291"/><text x="11.3024%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (9,039 samples, 0.95%)</title><rect x="10.4489%" y="388" width="0.9497%" height="15" fill="rgb(235,49,36)" fg:x="99453" fg:w="9039"/><text x="10.6989%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (9,037 samples, 0.95%)</title><rect x="10.4491%" y="404" width="0.9495%" height="15" fill="rgb(225,32,20)" fg:x="99455" fg:w="9037"/><text x="10.6991%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (9,035 samples, 0.95%)</title><rect x="10.4493%" y="420" width="0.9493%" height="15" fill="rgb(215,141,46)" fg:x="99457" fg:w="9035"/><text x="10.6993%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,298 samples, 0.35%)</title><rect x="11.0521%" y="436" width="0.3465%" height="15" fill="rgb(250,160,47)" fg:x="105194" fg:w="3298"/><text x="11.3021%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,295 samples, 0.35%)</title><rect x="11.0524%" y="452" width="0.3462%" height="15" fill="rgb(216,222,40)" fg:x="105197" fg:w="3295"/><text x="11.3024%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (9,056 samples, 0.95%)</title><rect x="10.4477%" y="372" width="0.9515%" height="15" fill="rgb(234,217,39)" fg:x="99442" fg:w="9056"/><text x="10.6977%" y="382.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (10,093 samples, 1.06%)</title><rect x="10.3389%" y="356" width="1.0604%" height="15" fill="rgb(207,178,40)" fg:x="98406" fg:w="10093"/><text x="10.5889%" y="366.50"></text></g><g><title>simulate_single (simulation.py:45) (10,398 samples, 1.09%)</title><rect x="10.3128%" y="340" width="1.0925%" height="15" fill="rgb(221,136,13)" fg:x="98158" fg:w="10398"/><text x="10.5628%" y="350.50"></text></g><g><title>process 29680:&quot;python simulation.py -p sim0.csv&quot; (16,122 samples, 1.69%)</title><rect x="9.7774%" y="84" width="1.6938%" height="15" fill="rgb(249,199,10)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="100" width="1.6938%" height="15" fill="rgb(249,222,13)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="116" width="1.6938%" height="15" fill="rgb(244,185,38)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="132" width="1.6938%" height="15" fill="rgb(236,202,9)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="148" width="1.6938%" height="15" fill="rgb(250,229,37)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="164" width="1.6938%" height="15" fill="rgb(206,174,23)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="180" width="1.6938%" height="15" fill="rgb(211,33,43)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="196" width="1.6938%" height="15" fill="rgb(245,58,50)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="212" width="1.6938%" height="15" fill="rgb(244,68,36)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="228" width="1.6938%" height="15" fill="rgb(232,229,15)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="244" width="1.6938%" height="15" fill="rgb(254,30,23)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="260" width="1.6938%" height="15" fill="rgb(235,160,14)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="276" width="1.6938%" height="15" fill="rgb(212,155,44)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="292" width="1.6938%" height="15" fill="rgb(226,2,50)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="302.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="308" width="1.6938%" height="15" fill="rgb(234,177,6)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,122 samples, 1.69%)</title><rect x="9.7774%" y="324" width="1.6938%" height="15" fill="rgb(217,24,9)" fg:x="93062" fg:w="16122"/><text x="10.0274%" y="334.50"></text></g><g><title>extension (tdt.py:36) (987 samples, 0.10%)</title><rect x="11.7815%" y="388" width="0.1037%" height="15" fill="rgb(220,13,46)" fg:x="112137" fg:w="987"/><text x="12.0315%" y="398.50"></text></g><g><title>extension (tdt.py:41) (1,184 samples, 0.12%)</title><rect x="11.8885%" y="388" width="0.1244%" height="15" fill="rgb(239,221,27)" fg:x="113155" fg:w="1184"/><text x="12.1385%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (5,240 samples, 0.55%)</title><rect x="11.5025%" y="340" width="0.5505%" height="15" fill="rgb(222,198,25)" fg:x="109481" fg:w="5240"/><text x="11.7525%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (5,239 samples, 0.55%)</title><rect x="11.5026%" y="356" width="0.5504%" height="15" fill="rgb(211,99,13)" fg:x="109482" fg:w="5239"/><text x="11.7526%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,188 samples, 0.55%)</title><rect x="11.5079%" y="372" width="0.5451%" height="15" fill="rgb(232,111,31)" fg:x="109533" fg:w="5188"/><text x="11.7579%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (977 samples, 0.10%)</title><rect x="12.0791%" y="372" width="0.1026%" height="15" fill="rgb(245,82,37)" fg:x="114969" fg:w="977"/><text x="12.3291%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,435 samples, 0.15%)</title><rect x="12.2673%" y="484" width="0.1508%" height="15" fill="rgb(227,149,46)" fg:x="116761" fg:w="1435"/><text x="12.5173%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,097 samples, 0.22%)</title><rect x="12.4181%" y="484" width="0.2203%" height="15" fill="rgb(218,36,50)" fg:x="118196" fg:w="2097"/><text x="12.6681%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,668 samples, 0.39%)</title><rect x="12.2571%" y="452" width="0.3854%" height="15" fill="rgb(226,80,48)" fg:x="116664" fg:w="3668"/><text x="12.5071%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,646 samples, 0.38%)</title><rect x="12.2595%" y="468" width="0.3831%" height="15" fill="rgb(238,224,15)" fg:x="116686" fg:w="3646"/><text x="12.5095%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,405 samples, 0.57%)</title><rect x="12.1872%" y="436" width="0.5679%" height="15" fill="rgb(241,136,10)" fg:x="115998" fg:w="5405"/><text x="12.4372%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,018 samples, 0.11%)</title><rect x="12.6481%" y="452" width="0.1070%" height="15" fill="rgb(208,32,45)" fg:x="120385" fg:w="1018"/><text x="12.8981%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (968 samples, 0.10%)</title><rect x="12.8752%" y="596" width="0.1017%" height="15" fill="rgb(207,135,9)" fg:x="122547" fg:w="968"/><text x="13.1252%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,021 samples, 0.11%)</title><rect x="12.8713%" y="580" width="0.1073%" height="15" fill="rgb(206,86,44)" fg:x="122510" fg:w="1021"/><text x="13.1213%" y="590.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,610 samples, 0.27%)</title><rect x="12.7955%" y="548" width="0.2742%" height="15" fill="rgb(245,177,15)" fg:x="121788" fg:w="2610"/><text x="13.0455%" y="558.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (1,957 samples, 0.21%)</title><rect x="12.8641%" y="564" width="0.2056%" height="15" fill="rgb(206,64,50)" fg:x="122441" fg:w="1957"/><text x="13.1141%" y="574.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,636 samples, 0.28%)</title><rect x="12.7930%" y="532" width="0.2769%" height="15" fill="rgb(234,36,40)" fg:x="121764" fg:w="2636"/><text x="13.0430%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,831 samples, 0.30%)</title><rect x="12.7870%" y="516" width="0.2974%" height="15" fill="rgb(213,64,8)" fg:x="121707" fg:w="2831"/><text x="13.0370%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,219 samples, 0.34%)</title><rect x="12.7551%" y="484" width="0.3382%" height="15" fill="rgb(210,75,36)" fg:x="121404" fg:w="3219"/><text x="13.0051%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,174 samples, 0.33%)</title><rect x="12.7599%" y="500" width="0.3335%" height="15" fill="rgb(229,88,21)" fg:x="121449" fg:w="3174"/><text x="13.0099%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,221 samples, 0.34%)</title><rect x="12.7550%" y="468" width="0.3384%" height="15" fill="rgb(252,204,47)" fg:x="121403" fg:w="3221"/><text x="13.0050%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (8,670 samples, 0.91%)</title><rect x="12.1829%" y="388" width="0.9109%" height="15" fill="rgb(208,77,27)" fg:x="115957" fg:w="8670"/><text x="12.4329%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (8,669 samples, 0.91%)</title><rect x="12.1830%" y="404" width="0.9108%" height="15" fill="rgb(221,76,26)" fg:x="115958" fg:w="8669"/><text x="12.4330%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (8,665 samples, 0.91%)</title><rect x="12.1834%" y="420" width="0.9104%" height="15" fill="rgb(225,139,18)" fg:x="115962" fg:w="8665"/><text x="12.4334%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,224 samples, 0.34%)</title><rect x="12.7550%" y="436" width="0.3387%" height="15" fill="rgb(230,137,11)" fg:x="121403" fg:w="3224"/><text x="13.0050%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,224 samples, 0.34%)</title><rect x="12.7550%" y="452" width="0.3387%" height="15" fill="rgb(212,28,1)" fg:x="121403" fg:w="3224"/><text x="13.0050%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (8,685 samples, 0.91%)</title><rect x="12.1817%" y="372" width="0.9125%" height="15" fill="rgb(248,164,17)" fg:x="115946" fg:w="8685"/><text x="12.4317%" y="382.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (9,674 samples, 1.02%)</title><rect x="12.0781%" y="356" width="1.0164%" height="15" fill="rgb(222,171,42)" fg:x="114960" fg:w="9674"/><text x="12.3281%" y="366.50"></text></g><g><title>simulate_single (simulation.py:45) (9,987 samples, 1.05%)</title><rect x="12.0530%" y="340" width="1.0493%" height="15" fill="rgb(243,84,45)" fg:x="114721" fg:w="9987"/><text x="12.3030%" y="350.50"></text></g><g><title>process 29681:&quot;python simulation.py -p sim0.csv&quot; (16,318 samples, 1.71%)</title><rect x="11.4713%" y="84" width="1.7144%" height="15" fill="rgb(252,49,23)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="100" width="1.7144%" height="15" fill="rgb(215,19,7)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="116" width="1.7144%" height="15" fill="rgb(238,81,41)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="132" width="1.7144%" height="15" fill="rgb(210,199,37)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="148" width="1.7144%" height="15" fill="rgb(244,192,49)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="164" width="1.7144%" height="15" fill="rgb(226,211,11)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="180" width="1.7144%" height="15" fill="rgb(236,162,54)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="196" width="1.7144%" height="15" fill="rgb(220,229,9)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="212" width="1.7144%" height="15" fill="rgb(250,87,22)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="228" width="1.7144%" height="15" fill="rgb(239,43,17)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="244" width="1.7144%" height="15" fill="rgb(231,177,25)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="260" width="1.7144%" height="15" fill="rgb(219,179,1)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="276" width="1.7144%" height="15" fill="rgb(238,219,53)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="292" width="1.7144%" height="15" fill="rgb(232,167,36)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="302.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="308" width="1.7144%" height="15" fill="rgb(244,19,51)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,318 samples, 1.71%)</title><rect x="11.4713%" y="324" width="1.7144%" height="15" fill="rgb(224,6,22)" fg:x="109184" fg:w="16318"/><text x="11.7213%" y="334.50"></text></g><g><title>extension (tdt.py:36) (1,012 samples, 0.11%)</title><rect x="13.4826%" y="388" width="0.1063%" height="15" fill="rgb(224,145,5)" fg:x="128328" fg:w="1012"/><text x="13.7326%" y="398.50"></text></g><g><title>extension (tdt.py:41) (1,282 samples, 0.13%)</title><rect x="13.5921%" y="388" width="0.1347%" height="15" fill="rgb(234,130,49)" fg:x="129370" fg:w="1282"/><text x="13.8421%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (5,242 samples, 0.55%)</title><rect x="13.2137%" y="340" width="0.5507%" height="15" fill="rgb(254,6,2)" fg:x="125769" fg:w="5242"/><text x="13.4637%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (5,241 samples, 0.55%)</title><rect x="13.2139%" y="356" width="0.5506%" height="15" fill="rgb(208,96,46)" fg:x="125770" fg:w="5241"/><text x="13.4639%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,202 samples, 0.55%)</title><rect x="13.2180%" y="372" width="0.5465%" height="15" fill="rgb(239,3,39)" fg:x="125809" fg:w="5202"/><text x="13.4680%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (973 samples, 0.10%)</title><rect x="13.7908%" y="372" width="0.1022%" height="15" fill="rgb(233,210,1)" fg:x="131261" fg:w="973"/><text x="14.0408%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,388 samples, 0.15%)</title><rect x="13.9920%" y="484" width="0.1458%" height="15" fill="rgb(244,137,37)" fg:x="133176" fg:w="1388"/><text x="14.2420%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,244 samples, 0.24%)</title><rect x="14.1378%" y="484" width="0.2358%" height="15" fill="rgb(240,136,2)" fg:x="134564" fg:w="2244"/><text x="14.3878%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,774 samples, 0.40%)</title><rect x="13.9800%" y="452" width="0.3965%" height="15" fill="rgb(239,18,37)" fg:x="133062" fg:w="3774"/><text x="14.2300%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,751 samples, 0.39%)</title><rect x="13.9824%" y="468" width="0.3941%" height="15" fill="rgb(218,185,22)" fg:x="133085" fg:w="3751"/><text x="14.2324%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,618 samples, 0.59%)</title><rect x="13.8975%" y="436" width="0.5902%" height="15" fill="rgb(225,218,4)" fg:x="132277" fg:w="5618"/><text x="14.1475%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,015 samples, 0.11%)</title><rect x="14.3811%" y="452" width="0.1066%" height="15" fill="rgb(230,182,32)" fg:x="136880" fg:w="1015"/><text x="14.6311%" y="462.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (1,793 samples, 0.19%)</title><rect x="14.6049%" y="564" width="0.1884%" height="15" fill="rgb(242,56,43)" fg:x="139010" fg:w="1793"/><text x="14.8549%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,489 samples, 0.26%)</title><rect x="14.5320%" y="548" width="0.2615%" height="15" fill="rgb(233,99,24)" fg:x="138316" fg:w="2489"/><text x="14.7820%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,512 samples, 0.26%)</title><rect x="14.5298%" y="532" width="0.2639%" height="15" fill="rgb(234,209,42)" fg:x="138295" fg:w="2512"/><text x="14.7798%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,690 samples, 0.28%)</title><rect x="14.5233%" y="516" width="0.2826%" height="15" fill="rgb(227,7,12)" fg:x="138233" fg:w="2690"/><text x="14.7733%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,083 samples, 0.32%)</title><rect x="14.4883%" y="484" width="0.3239%" height="15" fill="rgb(245,203,43)" fg:x="137900" fg:w="3083"/><text x="14.7383%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,024 samples, 0.32%)</title><rect x="14.4945%" y="500" width="0.3177%" height="15" fill="rgb(238,205,33)" fg:x="137959" fg:w="3024"/><text x="14.7445%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,084 samples, 0.32%)</title><rect x="14.4883%" y="468" width="0.3240%" height="15" fill="rgb(231,56,7)" fg:x="137900" fg:w="3084"/><text x="14.7383%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (8,742 samples, 0.92%)</title><rect x="13.8939%" y="388" width="0.9185%" height="15" fill="rgb(244,186,29)" fg:x="132243" fg:w="8742"/><text x="14.1439%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (8,740 samples, 0.92%)</title><rect x="13.8941%" y="404" width="0.9183%" height="15" fill="rgb(234,111,31)" fg:x="132245" fg:w="8740"/><text x="14.1441%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (8,736 samples, 0.92%)</title><rect x="13.8946%" y="420" width="0.9178%" height="15" fill="rgb(241,149,10)" fg:x="132249" fg:w="8736"/><text x="14.1446%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,090 samples, 0.32%)</title><rect x="14.4878%" y="436" width="0.3246%" height="15" fill="rgb(249,206,44)" fg:x="137895" fg:w="3090"/><text x="14.7378%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,086 samples, 0.32%)</title><rect x="14.4882%" y="452" width="0.3242%" height="15" fill="rgb(251,153,30)" fg:x="137899" fg:w="3086"/><text x="14.7382%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (9,742 samples, 1.02%)</title><rect x="13.7895%" y="356" width="1.0235%" height="15" fill="rgb(239,152,38)" fg:x="131249" fg:w="9742"/><text x="14.0395%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (8,757 samples, 0.92%)</title><rect x="13.8930%" y="372" width="0.9200%" height="15" fill="rgb(249,139,47)" fg:x="132234" fg:w="8757"/><text x="14.1430%" y="382.50"></text></g><g><title>simulate_single (simulation.py:45) (10,037 samples, 1.05%)</title><rect x="13.7645%" y="340" width="1.0545%" height="15" fill="rgb(244,64,35)" fg:x="131011" fg:w="10037"/><text x="14.0145%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,208 samples, 1.70%)</title><rect x="13.1857%" y="308" width="1.7029%" height="15" fill="rgb(216,46,15)" fg:x="125502" fg:w="16208"/><text x="13.4357%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,208 samples, 1.70%)</title><rect x="13.1857%" y="324" width="1.7029%" height="15" fill="rgb(250,74,19)" fg:x="125502" fg:w="16208"/><text x="13.4357%" y="334.50"></text></g><g><title>process 29682:&quot;python simulation.py -p sim0.csv&quot; (16,209 samples, 1.70%)</title><rect x="13.1857%" y="84" width="1.7030%" height="15" fill="rgb(249,42,33)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="100" width="1.7030%" height="15" fill="rgb(242,149,17)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="116" width="1.7030%" height="15" fill="rgb(244,29,21)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="132" width="1.7030%" height="15" fill="rgb(220,130,37)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="148" width="1.7030%" height="15" fill="rgb(211,67,2)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="164" width="1.7030%" height="15" fill="rgb(235,68,52)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="180" width="1.7030%" height="15" fill="rgb(246,142,3)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="196" width="1.7030%" height="15" fill="rgb(241,25,7)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="212" width="1.7030%" height="15" fill="rgb(242,119,39)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="228" width="1.7030%" height="15" fill="rgb(241,98,45)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="244" width="1.7030%" height="15" fill="rgb(254,28,30)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="260" width="1.7030%" height="15" fill="rgb(241,142,54)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="276" width="1.7030%" height="15" fill="rgb(222,85,15)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,209 samples, 1.70%)</title><rect x="13.1857%" y="292" width="1.7030%" height="15" fill="rgb(210,85,47)" fg:x="125502" fg:w="16209"/><text x="13.4357%" y="302.50"></text></g><g><title>extension (tdt.py:41) (1,286 samples, 0.14%)</title><rect x="15.2927%" y="388" width="0.1351%" height="15" fill="rgb(224,206,25)" fg:x="145557" fg:w="1286"/><text x="15.5427%" y="398.50"></text></g><g><title>synthesis (tdt.py:67) (5,232 samples, 0.55%)</title><rect x="14.9173%" y="356" width="0.5497%" height="15" fill="rgb(243,201,19)" fg:x="141983" fg:w="5232"/><text x="15.1673%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,187 samples, 0.54%)</title><rect x="14.9220%" y="372" width="0.5450%" height="15" fill="rgb(236,59,4)" fg:x="142028" fg:w="5187"/><text x="15.1720%" y="382.50"></text></g><g><title>simulate_single (simulation.py:43) (5,233 samples, 0.55%)</title><rect x="14.9173%" y="340" width="0.5498%" height="15" fill="rgb(254,179,45)" fg:x="141983" fg:w="5233"/><text x="15.1673%" y="350.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (990 samples, 0.10%)</title><rect x="15.4901%" y="372" width="0.1040%" height="15" fill="rgb(226,14,10)" fg:x="147435" fg:w="990"/><text x="15.7401%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,384 samples, 0.15%)</title><rect x="15.6824%" y="484" width="0.1454%" height="15" fill="rgb(244,27,41)" fg:x="149266" fg:w="1384"/><text x="15.9324%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,096 samples, 0.22%)</title><rect x="15.8278%" y="484" width="0.2202%" height="15" fill="rgb(235,35,32)" fg:x="150650" fg:w="2096"/><text x="16.0778%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,612 samples, 0.38%)</title><rect x="15.6715%" y="452" width="0.3795%" height="15" fill="rgb(218,68,31)" fg:x="149162" fg:w="3612"/><text x="15.9215%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,591 samples, 0.38%)</title><rect x="15.6737%" y="468" width="0.3773%" height="15" fill="rgb(207,120,37)" fg:x="149183" fg:w="3591"/><text x="15.9237%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,484 samples, 0.58%)</title><rect x="15.5988%" y="436" width="0.5762%" height="15" fill="rgb(227,98,0)" fg:x="148470" fg:w="5484"/><text x="15.8488%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,132 samples, 0.12%)</title><rect x="16.0560%" y="452" width="0.1189%" height="15" fill="rgb(207,7,3)" fg:x="152822" fg:w="1132"/><text x="16.3060%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (987 samples, 0.10%)</title><rect x="16.2981%" y="596" width="0.1037%" height="15" fill="rgb(206,98,19)" fg:x="155126" fg:w="987"/><text x="16.5481%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,049 samples, 0.11%)</title><rect x="16.2934%" y="580" width="0.1102%" height="15" fill="rgb(217,5,26)" fg:x="155081" fg:w="1049"/><text x="16.5434%" y="590.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (962 samples, 0.10%)</title><rect x="16.4043%" y="580" width="0.1011%" height="15" fill="rgb(235,190,38)" fg:x="156137" fg:w="962"/><text x="16.6543%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (2,117 samples, 0.22%)</title><rect x="16.2835%" y="564" width="0.2224%" height="15" fill="rgb(247,86,24)" fg:x="154987" fg:w="2117"/><text x="16.5335%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,769 samples, 0.29%)</title><rect x="16.2154%" y="548" width="0.2909%" height="15" fill="rgb(205,101,16)" fg:x="154339" fg:w="2769"/><text x="16.4654%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,797 samples, 0.29%)</title><rect x="16.2127%" y="532" width="0.2939%" height="15" fill="rgb(246,168,33)" fg:x="154313" fg:w="2797"/><text x="16.4627%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,956 samples, 0.31%)</title><rect x="16.2064%" y="516" width="0.3106%" height="15" fill="rgb(231,114,1)" fg:x="154253" fg:w="2956"/><text x="16.4564%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,326 samples, 0.35%)</title><rect x="16.1753%" y="484" width="0.3494%" height="15" fill="rgb(207,184,53)" fg:x="153957" fg:w="3326"/><text x="16.4253%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,265 samples, 0.34%)</title><rect x="16.1817%" y="500" width="0.3430%" height="15" fill="rgb(224,95,51)" fg:x="154018" fg:w="3265"/><text x="16.4317%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,328 samples, 0.35%)</title><rect x="16.1752%" y="468" width="0.3497%" height="15" fill="rgb(212,188,45)" fg:x="153956" fg:w="3328"/><text x="16.4252%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (8,850 samples, 0.93%)</title><rect x="15.5952%" y="388" width="0.9298%" height="15" fill="rgb(223,154,38)" fg:x="148436" fg:w="8850"/><text x="15.8452%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (8,848 samples, 0.93%)</title><rect x="15.5954%" y="404" width="0.9296%" height="15" fill="rgb(251,22,52)" fg:x="148438" fg:w="8848"/><text x="15.8454%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (8,844 samples, 0.93%)</title><rect x="15.5959%" y="420" width="0.9292%" height="15" fill="rgb(229,209,22)" fg:x="148442" fg:w="8844"/><text x="15.8459%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,332 samples, 0.35%)</title><rect x="16.1750%" y="436" width="0.3501%" height="15" fill="rgb(234,138,34)" fg:x="153954" fg:w="3332"/><text x="16.4250%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,330 samples, 0.35%)</title><rect x="16.1752%" y="452" width="0.3499%" height="15" fill="rgb(212,95,11)" fg:x="153956" fg:w="3330"/><text x="16.4252%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (8,866 samples, 0.93%)</title><rect x="15.5941%" y="372" width="0.9315%" height="15" fill="rgb(240,179,47)" fg:x="148425" fg:w="8866"/><text x="15.8441%" y="382.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (9,883 samples, 1.04%)</title><rect x="15.4873%" y="356" width="1.0383%" height="15" fill="rgb(240,163,11)" fg:x="147409" fg:w="9883"/><text x="15.7373%" y="366.50"></text></g><g><title>simulate_single (simulation.py:45) (10,150 samples, 1.07%)</title><rect x="15.4670%" y="340" width="1.0664%" height="15" fill="rgb(236,37,12)" fg:x="147216" fg:w="10150"/><text x="15.7170%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,361 samples, 1.72%)</title><rect x="14.8888%" y="308" width="1.7189%" height="15" fill="rgb(232,164,16)" fg:x="141712" fg:w="16361"/><text x="15.1388%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,361 samples, 1.72%)</title><rect x="14.8888%" y="324" width="1.7189%" height="15" fill="rgb(244,205,15)" fg:x="141712" fg:w="16361"/><text x="15.1388%" y="334.50"></text></g><g><title>process 29683:&quot;python simulation.py -p sim0.csv&quot; (16,363 samples, 1.72%)</title><rect x="14.8887%" y="84" width="1.7192%" height="15" fill="rgb(223,117,47)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="100" width="1.7192%" height="15" fill="rgb(244,107,35)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="116" width="1.7192%" height="15" fill="rgb(205,140,8)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="132" width="1.7192%" height="15" fill="rgb(228,84,46)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="148" width="1.7192%" height="15" fill="rgb(254,188,9)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="164" width="1.7192%" height="15" fill="rgb(206,112,54)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="180" width="1.7192%" height="15" fill="rgb(216,84,49)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="196" width="1.7192%" height="15" fill="rgb(214,194,35)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="212" width="1.7192%" height="15" fill="rgb(249,28,3)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="228" width="1.7192%" height="15" fill="rgb(222,56,52)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="244" width="1.7192%" height="15" fill="rgb(245,217,50)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="260" width="1.7192%" height="15" fill="rgb(213,201,24)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="276" width="1.7192%" height="15" fill="rgb(248,116,28)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,363 samples, 1.72%)</title><rect x="14.8887%" y="292" width="1.7192%" height="15" fill="rgb(219,72,43)" fg:x="141711" fg:w="16363"/><text x="15.1387%" y="302.50"></text></g><g><title>extension (tdt.py:41) (1,254 samples, 0.13%)</title><rect x="16.9934%" y="388" width="0.1317%" height="15" fill="rgb(209,138,14)" fg:x="161744" fg:w="1254"/><text x="17.2434%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (4,934 samples, 0.52%)</title><rect x="16.6439%" y="340" width="0.5184%" height="15" fill="rgb(222,18,33)" fg:x="158417" fg:w="4934"/><text x="16.8939%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (4,933 samples, 0.52%)</title><rect x="16.6440%" y="356" width="0.5183%" height="15" fill="rgb(213,199,7)" fg:x="158418" fg:w="4933"/><text x="16.8940%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (4,893 samples, 0.51%)</title><rect x="16.6482%" y="372" width="0.5141%" height="15" fill="rgb(250,110,10)" fg:x="158458" fg:w="4893"/><text x="16.8982%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,019 samples, 0.11%)</title><rect x="17.1872%" y="372" width="0.1071%" height="15" fill="rgb(248,123,6)" fg:x="163588" fg:w="1019"/><text x="17.4372%" y="382.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (960 samples, 0.10%)</title><rect x="17.4265%" y="500" width="0.1009%" height="15" fill="rgb(206,91,31)" fg:x="165866" fg:w="960"/><text x="17.6765%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,462 samples, 0.15%)</title><rect x="17.3894%" y="484" width="0.1536%" height="15" fill="rgb(211,154,13)" fg:x="165513" fg:w="1462"/><text x="17.6394%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,283 samples, 0.24%)</title><rect x="17.5430%" y="484" width="0.2399%" height="15" fill="rgb(225,148,7)" fg:x="166975" fg:w="2283"/><text x="17.7930%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,885 samples, 0.41%)</title><rect x="17.3777%" y="452" width="0.4082%" height="15" fill="rgb(220,160,43)" fg:x="165402" fg:w="3885"/><text x="17.6277%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,857 samples, 0.41%)</title><rect x="17.3807%" y="468" width="0.4052%" height="15" fill="rgb(213,52,39)" fg:x="165430" fg:w="3857"/><text x="17.6307%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,712 samples, 0.60%)</title><rect x="17.2990%" y="436" width="0.6001%" height="15" fill="rgb(243,137,7)" fg:x="164653" fg:w="5712"/><text x="17.5490%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,038 samples, 0.11%)</title><rect x="17.7901%" y="452" width="0.1091%" height="15" fill="rgb(230,79,13)" fg:x="169327" fg:w="1038"/><text x="18.0401%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (1,000 samples, 0.11%)</title><rect x="18.0321%" y="596" width="0.1051%" height="15" fill="rgb(247,105,23)" fg:x="171630" fg:w="1000"/><text x="18.2821%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,055 samples, 0.11%)</title><rect x="18.0276%" y="580" width="0.1108%" height="15" fill="rgb(223,179,41)" fg:x="171587" fg:w="1055"/><text x="18.2776%" y="590.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,774 samples, 0.29%)</title><rect x="17.9472%" y="548" width="0.2914%" height="15" fill="rgb(218,9,34)" fg:x="170822" fg:w="2774"/><text x="18.1972%" y="558.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (2,091 samples, 0.22%)</title><rect x="18.0189%" y="564" width="0.2197%" height="15" fill="rgb(222,106,8)" fg:x="171505" fg:w="2091"/><text x="18.2689%" y="574.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,799 samples, 0.29%)</title><rect x="17.9448%" y="532" width="0.2941%" height="15" fill="rgb(211,220,0)" fg:x="170799" fg:w="2799"/><text x="18.1948%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,991 samples, 0.31%)</title><rect x="17.9377%" y="516" width="0.3142%" height="15" fill="rgb(229,52,16)" fg:x="170732" fg:w="2991"/><text x="18.1877%" y="526.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,420 samples, 0.36%)</title><rect x="17.8996%" y="468" width="0.3593%" height="15" fill="rgb(212,155,18)" fg:x="170369" fg:w="3420"/><text x="18.1496%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,419 samples, 0.36%)</title><rect x="17.8997%" y="484" width="0.3592%" height="15" fill="rgb(242,21,14)" fg:x="170370" fg:w="3419"/><text x="18.1497%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,357 samples, 0.35%)</title><rect x="17.9062%" y="500" width="0.3527%" height="15" fill="rgb(222,19,48)" fg:x="170432" fg:w="3357"/><text x="18.1562%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (9,172 samples, 0.96%)</title><rect x="17.2957%" y="388" width="0.9636%" height="15" fill="rgb(232,45,27)" fg:x="164621" fg:w="9172"/><text x="17.5457%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (9,171 samples, 0.96%)</title><rect x="17.2958%" y="404" width="0.9635%" height="15" fill="rgb(249,103,42)" fg:x="164622" fg:w="9171"/><text x="17.5458%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (9,164 samples, 0.96%)</title><rect x="17.2965%" y="420" width="0.9628%" height="15" fill="rgb(246,81,33)" fg:x="164629" fg:w="9164"/><text x="17.5465%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,428 samples, 0.36%)</title><rect x="17.8992%" y="436" width="0.3602%" height="15" fill="rgb(252,33,42)" fg:x="170365" fg:w="3428"/><text x="18.1492%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,425 samples, 0.36%)</title><rect x="17.8995%" y="452" width="0.3598%" height="15" fill="rgb(209,212,41)" fg:x="170368" fg:w="3425"/><text x="18.1495%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (10,233 samples, 1.08%)</title><rect x="17.1848%" y="356" width="1.0751%" height="15" fill="rgb(207,154,6)" fg:x="163566" fg:w="10233"/><text x="17.4348%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (9,192 samples, 0.97%)</title><rect x="17.2942%" y="372" width="0.9657%" height="15" fill="rgb(223,64,47)" fg:x="164607" fg:w="9192"/><text x="17.5442%" y="382.50"></text></g><g><title>simulate_single (simulation.py:45) (10,514 samples, 1.10%)</title><rect x="17.1623%" y="340" width="1.1046%" height="15" fill="rgb(211,161,38)" fg:x="163351" fg:w="10514"/><text x="17.4123%" y="350.50"></text></g><g><title>process 29684:&quot;python simulation.py -p sim0.csv&quot; (16,639 samples, 1.75%)</title><rect x="16.6078%" y="84" width="1.7482%" height="15" fill="rgb(219,138,40)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="100" width="1.7482%" height="15" fill="rgb(241,228,46)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="116" width="1.7482%" height="15" fill="rgb(223,209,38)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="132" width="1.7482%" height="15" fill="rgb(236,164,45)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="148" width="1.7482%" height="15" fill="rgb(231,15,5)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="164" width="1.7482%" height="15" fill="rgb(252,35,15)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="180" width="1.7482%" height="15" fill="rgb(248,181,18)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="196" width="1.7482%" height="15" fill="rgb(233,39,42)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="212" width="1.7482%" height="15" fill="rgb(238,110,33)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="228" width="1.7482%" height="15" fill="rgb(233,195,10)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="244" width="1.7482%" height="15" fill="rgb(254,105,3)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="260" width="1.7482%" height="15" fill="rgb(221,225,9)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="276" width="1.7482%" height="15" fill="rgb(224,227,45)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="292" width="1.7482%" height="15" fill="rgb(229,198,43)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="302.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="308" width="1.7482%" height="15" fill="rgb(206,209,35)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,639 samples, 1.75%)</title><rect x="16.6078%" y="324" width="1.7482%" height="15" fill="rgb(245,195,53)" fg:x="158074" fg:w="16639"/><text x="16.8578%" y="334.50"></text></g><g><title>extension (tdt.py:36) (985 samples, 0.10%)</title><rect x="18.6634%" y="388" width="0.1035%" height="15" fill="rgb(240,92,26)" fg:x="177639" fg:w="985"/><text x="18.9134%" y="398.50"></text></g><g><title>extension (tdt.py:41) (1,346 samples, 0.14%)</title><rect x="18.7698%" y="388" width="0.1414%" height="15" fill="rgb(207,40,23)" fg:x="178652" fg:w="1346"/><text x="19.0198%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (5,338 samples, 0.56%)</title><rect x="18.3866%" y="340" width="0.5608%" height="15" fill="rgb(223,111,35)" fg:x="175004" fg:w="5338"/><text x="18.6366%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (5,338 samples, 0.56%)</title><rect x="18.3866%" y="356" width="0.5608%" height="15" fill="rgb(229,147,28)" fg:x="175004" fg:w="5338"/><text x="18.6366%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,305 samples, 0.56%)</title><rect x="18.3900%" y="372" width="0.5574%" height="15" fill="rgb(211,29,28)" fg:x="175037" fg:w="5305"/><text x="18.6400%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (986 samples, 0.10%)</title><rect x="18.9732%" y="372" width="0.1036%" height="15" fill="rgb(228,72,33)" fg:x="180588" fg:w="986"/><text x="19.2232%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,420 samples, 0.15%)</title><rect x="19.1719%" y="484" width="0.1492%" height="15" fill="rgb(205,214,31)" fg:x="182479" fg:w="1420"/><text x="19.4219%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,181 samples, 0.23%)</title><rect x="19.3211%" y="484" width="0.2291%" height="15" fill="rgb(224,111,15)" fg:x="183899" fg:w="2181"/><text x="19.5711%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,733 samples, 0.39%)</title><rect x="19.1615%" y="452" width="0.3922%" height="15" fill="rgb(253,21,26)" fg:x="182380" fg:w="3733"/><text x="19.4115%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,716 samples, 0.39%)</title><rect x="19.1633%" y="468" width="0.3904%" height="15" fill="rgb(245,139,43)" fg:x="182397" fg:w="3716"/><text x="19.4133%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,543 samples, 0.58%)</title><rect x="19.0825%" y="436" width="0.5824%" height="15" fill="rgb(252,170,7)" fg:x="181628" fg:w="5543"/><text x="19.3325%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,024 samples, 0.11%)</title><rect x="19.5573%" y="452" width="0.1076%" height="15" fill="rgb(231,118,14)" fg:x="186147" fg:w="1024"/><text x="19.8073%" y="462.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (968 samples, 0.10%)</title><rect x="19.7854%" y="580" width="0.1017%" height="15" fill="rgb(238,83,0)" fg:x="188318" fg:w="968"/><text x="20.0354%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (1,965 samples, 0.21%)</title><rect x="19.7774%" y="564" width="0.2065%" height="15" fill="rgb(221,39,39)" fg:x="188242" fg:w="1965"/><text x="20.0274%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,665 samples, 0.28%)</title><rect x="19.7040%" y="548" width="0.2800%" height="15" fill="rgb(222,119,46)" fg:x="187543" fg:w="2665"/><text x="19.9540%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,684 samples, 0.28%)</title><rect x="19.7021%" y="532" width="0.2820%" height="15" fill="rgb(222,165,49)" fg:x="187525" fg:w="2684"/><text x="19.9521%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,866 samples, 0.30%)</title><rect x="19.6963%" y="516" width="0.3011%" height="15" fill="rgb(219,113,52)" fg:x="187470" fg:w="2866"/><text x="19.9463%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,238 samples, 0.34%)</title><rect x="19.6653%" y="484" width="0.3402%" height="15" fill="rgb(214,7,15)" fg:x="187175" fg:w="3238"/><text x="19.9153%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,184 samples, 0.33%)</title><rect x="19.6710%" y="500" width="0.3345%" height="15" fill="rgb(235,32,4)" fg:x="187229" fg:w="3184"/><text x="19.9210%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (8,825 samples, 0.93%)</title><rect x="19.0785%" y="388" width="0.9272%" height="15" fill="rgb(238,90,54)" fg:x="181590" fg:w="8825"/><text x="19.3285%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (8,822 samples, 0.93%)</title><rect x="19.0788%" y="404" width="0.9269%" height="15" fill="rgb(213,208,19)" fg:x="181593" fg:w="8822"/><text x="19.3288%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (8,819 samples, 0.93%)</title><rect x="19.0791%" y="420" width="0.9266%" height="15" fill="rgb(233,156,4)" fg:x="181596" fg:w="8819"/><text x="19.3291%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,244 samples, 0.34%)</title><rect x="19.6649%" y="436" width="0.3408%" height="15" fill="rgb(207,194,5)" fg:x="187171" fg:w="3244"/><text x="19.9149%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,243 samples, 0.34%)</title><rect x="19.6650%" y="452" width="0.3407%" height="15" fill="rgb(206,111,30)" fg:x="187172" fg:w="3243"/><text x="19.9150%" y="462.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,243 samples, 0.34%)</title><rect x="19.6650%" y="468" width="0.3407%" height="15" fill="rgb(243,70,54)" fg:x="187172" fg:w="3243"/><text x="19.9150%" y="478.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (8,848 samples, 0.93%)</title><rect x="19.0768%" y="372" width="0.9296%" height="15" fill="rgb(242,28,8)" fg:x="181574" fg:w="8848"/><text x="19.3268%" y="382.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (9,853 samples, 1.04%)</title><rect x="18.9713%" y="356" width="1.0352%" height="15" fill="rgb(219,106,18)" fg:x="180570" fg:w="9853"/><text x="19.2213%" y="366.50"></text></g><g><title>simulate_single (simulation.py:45) (10,147 samples, 1.07%)</title><rect x="18.9474%" y="340" width="1.0661%" height="15" fill="rgb(244,222,10)" fg:x="180342" fg:w="10147"/><text x="19.1974%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,558 samples, 1.74%)</title><rect x="18.3560%" y="308" width="1.7396%" height="15" fill="rgb(236,179,52)" fg:x="174713" fg:w="16558"/><text x="18.6060%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,558 samples, 1.74%)</title><rect x="18.3560%" y="324" width="1.7396%" height="15" fill="rgb(213,23,39)" fg:x="174713" fg:w="16558"/><text x="18.6060%" y="334.50"></text></g><g><title>process 29685:&quot;python simulation.py -p sim0.csv&quot; (16,559 samples, 1.74%)</title><rect x="18.3560%" y="84" width="1.7397%" height="15" fill="rgb(238,48,10)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="100" width="1.7397%" height="15" fill="rgb(251,196,23)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="116" width="1.7397%" height="15" fill="rgb(250,152,24)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="132" width="1.7397%" height="15" fill="rgb(209,150,17)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="148" width="1.7397%" height="15" fill="rgb(234,202,34)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="164" width="1.7397%" height="15" fill="rgb(253,148,53)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="180" width="1.7397%" height="15" fill="rgb(218,129,16)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="196" width="1.7397%" height="15" fill="rgb(216,85,19)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="212" width="1.7397%" height="15" fill="rgb(235,228,7)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="228" width="1.7397%" height="15" fill="rgb(245,175,0)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="244" width="1.7397%" height="15" fill="rgb(208,168,36)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="260" width="1.7397%" height="15" fill="rgb(246,171,24)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="276" width="1.7397%" height="15" fill="rgb(215,142,24)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,559 samples, 1.74%)</title><rect x="18.3560%" y="292" width="1.7397%" height="15" fill="rgb(250,187,7)" fg:x="174713" fg:w="16559"/><text x="18.6060%" y="302.50"></text></g><g><title>extension (tdt.py:41) (1,253 samples, 0.13%)</title><rect x="20.5039%" y="388" width="0.1316%" height="15" fill="rgb(228,66,33)" fg:x="195157" fg:w="1253"/><text x="20.7539%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (5,209 samples, 0.55%)</title><rect x="20.1244%" y="340" width="0.5473%" height="15" fill="rgb(234,215,21)" fg:x="191545" fg:w="5209"/><text x="20.3744%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (5,209 samples, 0.55%)</title><rect x="20.1244%" y="356" width="0.5473%" height="15" fill="rgb(222,191,20)" fg:x="191545" fg:w="5209"/><text x="20.3744%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,161 samples, 0.54%)</title><rect x="20.1295%" y="372" width="0.5422%" height="15" fill="rgb(245,79,54)" fg:x="191593" fg:w="5161"/><text x="20.3795%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,014 samples, 0.11%)</title><rect x="20.6952%" y="372" width="0.1065%" height="15" fill="rgb(240,10,37)" fg:x="196978" fg:w="1014"/><text x="20.9452%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,376 samples, 0.14%)</title><rect x="20.8951%" y="484" width="0.1446%" height="15" fill="rgb(214,192,32)" fg:x="198880" fg:w="1376"/><text x="21.1451%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,216 samples, 0.23%)</title><rect x="21.0396%" y="484" width="0.2328%" height="15" fill="rgb(209,36,54)" fg:x="200256" fg:w="2216"/><text x="21.2896%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,748 samples, 0.39%)</title><rect x="20.8825%" y="452" width="0.3938%" height="15" fill="rgb(220,10,11)" fg:x="198760" fg:w="3748"/><text x="21.1325%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,722 samples, 0.39%)</title><rect x="20.8852%" y="468" width="0.3910%" height="15" fill="rgb(221,106,17)" fg:x="198786" fg:w="3722"/><text x="21.1352%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,475 samples, 0.58%)</title><rect x="20.8062%" y="436" width="0.5752%" height="15" fill="rgb(251,142,44)" fg:x="198034" fg:w="5475"/><text x="21.0562%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (959 samples, 0.10%)</title><rect x="21.2806%" y="452" width="0.1008%" height="15" fill="rgb(238,13,15)" fg:x="202550" fg:w="959"/><text x="21.5306%" y="462.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,003 samples, 0.11%)</title><rect x="21.5039%" y="580" width="0.1054%" height="15" fill="rgb(208,107,27)" fg:x="204675" fg:w="1003"/><text x="21.7539%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (1,948 samples, 0.20%)</title><rect x="21.4957%" y="564" width="0.2047%" height="15" fill="rgb(205,136,37)" fg:x="204597" fg:w="1948"/><text x="21.7457%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,628 samples, 0.28%)</title><rect x="21.4245%" y="548" width="0.2761%" height="15" fill="rgb(250,205,27)" fg:x="203919" fg:w="2628"/><text x="21.6745%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,656 samples, 0.28%)</title><rect x="21.4216%" y="532" width="0.2790%" height="15" fill="rgb(210,80,43)" fg:x="203892" fg:w="2656"/><text x="21.6716%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,850 samples, 0.30%)</title><rect x="21.4153%" y="516" width="0.2994%" height="15" fill="rgb(247,160,36)" fg:x="203832" fg:w="2850"/><text x="21.6653%" y="526.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,247 samples, 0.34%)</title><rect x="21.3815%" y="468" width="0.3411%" height="15" fill="rgb(234,13,49)" fg:x="203510" fg:w="3247"/><text x="21.6315%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,246 samples, 0.34%)</title><rect x="21.3816%" y="484" width="0.3410%" height="15" fill="rgb(234,122,0)" fg:x="203511" fg:w="3246"/><text x="21.6316%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,195 samples, 0.34%)</title><rect x="21.3870%" y="500" width="0.3357%" height="15" fill="rgb(207,146,38)" fg:x="203562" fg:w="3195"/><text x="21.6370%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (8,752 samples, 0.92%)</title><rect x="20.8032%" y="388" width="0.9195%" height="15" fill="rgb(207,177,25)" fg:x="198006" fg:w="8752"/><text x="21.0532%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (8,749 samples, 0.92%)</title><rect x="20.8035%" y="404" width="0.9192%" height="15" fill="rgb(211,178,42)" fg:x="198009" fg:w="8749"/><text x="21.0535%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (8,743 samples, 0.92%)</title><rect x="20.8042%" y="420" width="0.9186%" height="15" fill="rgb(230,69,54)" fg:x="198015" fg:w="8743"/><text x="21.0542%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,249 samples, 0.34%)</title><rect x="21.3814%" y="436" width="0.3414%" height="15" fill="rgb(214,135,41)" fg:x="203509" fg:w="3249"/><text x="21.6314%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,248 samples, 0.34%)</title><rect x="21.3815%" y="452" width="0.3412%" height="15" fill="rgb(237,67,25)" fg:x="203510" fg:w="3248"/><text x="21.6315%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (9,801 samples, 1.03%)</title><rect x="20.6937%" y="356" width="1.0297%" height="15" fill="rgb(222,189,50)" fg:x="196963" fg:w="9801"/><text x="20.9437%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (8,772 samples, 0.92%)</title><rect x="20.8018%" y="372" width="0.9216%" height="15" fill="rgb(245,148,34)" fg:x="197992" fg:w="8772"/><text x="21.0518%" y="382.50"></text></g><g><title>simulate_single (simulation.py:45) (10,079 samples, 1.06%)</title><rect x="20.6717%" y="340" width="1.0589%" height="15" fill="rgb(222,29,6)" fg:x="196754" fg:w="10079"/><text x="20.9217%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,262 samples, 1.71%)</title><rect x="20.0957%" y="308" width="1.7085%" height="15" fill="rgb(221,189,43)" fg:x="191272" fg:w="16262"/><text x="20.3457%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,262 samples, 1.71%)</title><rect x="20.0957%" y="324" width="1.7085%" height="15" fill="rgb(207,36,27)" fg:x="191272" fg:w="16262"/><text x="20.3457%" y="334.50"></text></g><g><title>process 29686:&quot;python simulation.py -p sim0.csv&quot; (16,263 samples, 1.71%)</title><rect x="20.0957%" y="84" width="1.7087%" height="15" fill="rgb(217,90,24)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="100" width="1.7087%" height="15" fill="rgb(224,66,35)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="116" width="1.7087%" height="15" fill="rgb(221,13,50)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="132" width="1.7087%" height="15" fill="rgb(236,68,49)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="148" width="1.7087%" height="15" fill="rgb(229,146,28)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="164" width="1.7087%" height="15" fill="rgb(225,31,38)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="180" width="1.7087%" height="15" fill="rgb(250,208,3)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="196" width="1.7087%" height="15" fill="rgb(246,54,23)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="212" width="1.7087%" height="15" fill="rgb(243,76,11)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="228" width="1.7087%" height="15" fill="rgb(245,21,50)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="244" width="1.7087%" height="15" fill="rgb(228,9,43)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="260" width="1.7087%" height="15" fill="rgb(208,100,47)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="276" width="1.7087%" height="15" fill="rgb(232,26,8)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,263 samples, 1.71%)</title><rect x="20.0957%" y="292" width="1.7087%" height="15" fill="rgb(216,166,38)" fg:x="191272" fg:w="16263"/><text x="20.3457%" y="302.50"></text></g><g><title>extension (tdt.py:41) (1,184 samples, 0.12%)</title><rect x="22.2106%" y="388" width="0.1244%" height="15" fill="rgb(251,202,51)" fg:x="211401" fg:w="1184"/><text x="22.4606%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (5,037 samples, 0.53%)</title><rect x="21.8413%" y="340" width="0.5292%" height="15" fill="rgb(254,216,34)" fg:x="207886" fg:w="5037"/><text x="22.0913%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (5,037 samples, 0.53%)</title><rect x="21.8413%" y="356" width="0.5292%" height="15" fill="rgb(251,32,27)" fg:x="207886" fg:w="5037"/><text x="22.0913%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (4,993 samples, 0.52%)</title><rect x="21.8459%" y="372" width="0.5246%" height="15" fill="rgb(208,127,28)" fg:x="207930" fg:w="4993"/><text x="22.0959%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,391 samples, 0.15%)</title><rect x="22.5903%" y="484" width="0.1461%" height="15" fill="rgb(224,137,22)" fg:x="215015" fg:w="1391"/><text x="22.8403%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,216 samples, 0.23%)</title><rect x="22.7364%" y="484" width="0.2328%" height="15" fill="rgb(254,70,32)" fg:x="216406" fg:w="2216"/><text x="22.9864%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,777 samples, 0.40%)</title><rect x="22.5759%" y="452" width="0.3968%" height="15" fill="rgb(229,75,37)" fg:x="214878" fg:w="3777"/><text x="22.8259%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,752 samples, 0.39%)</title><rect x="22.5785%" y="468" width="0.3942%" height="15" fill="rgb(252,64,23)" fg:x="214903" fg:w="3752"/><text x="22.8285%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,659 samples, 0.59%)</title><rect x="22.4941%" y="436" width="0.5946%" height="15" fill="rgb(232,162,48)" fg:x="214100" fg:w="5659"/><text x="22.7441%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,044 samples, 0.11%)</title><rect x="22.9790%" y="452" width="0.1097%" height="15" fill="rgb(246,160,12)" fg:x="218715" fg:w="1044"/><text x="23.2290%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (1,051 samples, 0.11%)</title><rect x="23.2138%" y="596" width="0.1104%" height="15" fill="rgb(247,166,0)" fg:x="220950" fg:w="1051"/><text x="23.4638%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,110 samples, 0.12%)</title><rect x="23.2087%" y="580" width="0.1166%" height="15" fill="rgb(249,219,21)" fg:x="220901" fg:w="1110"/><text x="23.4587%" y="590.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (1,020 samples, 0.11%)</title><rect x="23.3264%" y="580" width="0.1072%" height="15" fill="rgb(205,209,3)" fg:x="222022" fg:w="1020"/><text x="23.5764%" y="590.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,892 samples, 0.30%)</title><rect x="23.1308%" y="548" width="0.3038%" height="15" fill="rgb(243,44,1)" fg:x="220160" fg:w="2892"/><text x="23.3808%" y="558.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (2,240 samples, 0.24%)</title><rect x="23.1993%" y="564" width="0.2353%" height="15" fill="rgb(206,159,16)" fg:x="220812" fg:w="2240"/><text x="23.4493%" y="574.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,912 samples, 0.31%)</title><rect x="23.1289%" y="532" width="0.3059%" height="15" fill="rgb(244,77,30)" fg:x="220142" fg:w="2912"/><text x="23.3789%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (3,114 samples, 0.33%)</title><rect x="23.1227%" y="516" width="0.3272%" height="15" fill="rgb(218,69,12)" fg:x="220083" fg:w="3114"/><text x="23.3727%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,507 samples, 0.37%)</title><rect x="23.0889%" y="484" width="0.3685%" height="15" fill="rgb(212,87,7)" fg:x="219761" fg:w="3507"/><text x="23.3389%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,449 samples, 0.36%)</title><rect x="23.0950%" y="500" width="0.3624%" height="15" fill="rgb(245,114,25)" fg:x="219819" fg:w="3449"/><text x="23.3450%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (9,201 samples, 0.97%)</title><rect x="22.4908%" y="388" width="0.9667%" height="15" fill="rgb(210,61,42)" fg:x="214068" fg:w="9201"/><text x="22.7408%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (9,200 samples, 0.97%)</title><rect x="22.4909%" y="404" width="0.9666%" height="15" fill="rgb(211,52,33)" fg:x="214069" fg:w="9200"/><text x="22.7409%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (9,198 samples, 0.97%)</title><rect x="22.4911%" y="420" width="0.9664%" height="15" fill="rgb(234,58,33)" fg:x="214071" fg:w="9198"/><text x="22.7411%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,510 samples, 0.37%)</title><rect x="23.0887%" y="436" width="0.3688%" height="15" fill="rgb(220,115,36)" fg:x="219759" fg:w="3510"/><text x="23.3387%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,508 samples, 0.37%)</title><rect x="23.0889%" y="452" width="0.3686%" height="15" fill="rgb(243,153,54)" fg:x="219761" fg:w="3508"/><text x="23.3389%" y="462.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,508 samples, 0.37%)</title><rect x="23.0889%" y="468" width="0.3686%" height="15" fill="rgb(251,47,18)" fg:x="219761" fg:w="3508"/><text x="23.3389%" y="478.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (10,148 samples, 1.07%)</title><rect x="22.3923%" y="356" width="1.0662%" height="15" fill="rgb(242,102,42)" fg:x="213131" fg:w="10148"/><text x="22.6423%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (9,222 samples, 0.97%)</title><rect x="22.4896%" y="372" width="0.9689%" height="15" fill="rgb(234,31,38)" fg:x="214057" fg:w="9222"/><text x="22.7396%" y="382.50"></text></g><g><title>simulate_single (simulation.py:45) (10,429 samples, 1.10%)</title><rect x="22.3705%" y="340" width="1.0957%" height="15" fill="rgb(221,117,51)" fg:x="212923" fg:w="10429"/><text x="22.6205%" y="350.50"></text></g><g><title>process 29687:&quot;python simulation.py -p sim0.csv&quot; (16,721 samples, 1.76%)</title><rect x="21.8044%" y="84" width="1.7568%" height="15" fill="rgb(212,20,18)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="100" width="1.7568%" height="15" fill="rgb(245,133,36)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="116" width="1.7568%" height="15" fill="rgb(212,6,19)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="132" width="1.7568%" height="15" fill="rgb(218,1,36)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="148" width="1.7568%" height="15" fill="rgb(246,84,54)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="164" width="1.7568%" height="15" fill="rgb(242,110,6)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="180" width="1.7568%" height="15" fill="rgb(214,47,5)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="196" width="1.7568%" height="15" fill="rgb(218,159,25)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="212" width="1.7568%" height="15" fill="rgb(215,211,28)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="228" width="1.7568%" height="15" fill="rgb(238,59,32)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="244" width="1.7568%" height="15" fill="rgb(226,82,3)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="260" width="1.7568%" height="15" fill="rgb(240,164,32)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="276" width="1.7568%" height="15" fill="rgb(232,46,7)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,721 samples, 1.76%)</title><rect x="21.8044%" y="292" width="1.7568%" height="15" fill="rgb(229,129,53)" fg:x="207535" fg:w="16721"/><text x="22.0544%" y="302.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,719 samples, 1.76%)</title><rect x="21.8046%" y="308" width="1.7566%" height="15" fill="rgb(234,188,29)" fg:x="207537" fg:w="16719"/><text x="22.0546%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,719 samples, 1.76%)</title><rect x="21.8046%" y="324" width="1.7566%" height="15" fill="rgb(246,141,4)" fg:x="207537" fg:w="16719"/><text x="22.0546%" y="334.50"></text></g><g><title>extension (tdt.py:41) (1,300 samples, 0.14%)</title><rect x="23.9694%" y="388" width="0.1366%" height="15" fill="rgb(229,23,39)" fg:x="228142" fg:w="1300"/><text x="24.2194%" y="398.50"></text></g><g><title>synthesis (tdt.py:67) (5,285 samples, 0.56%)</title><rect x="23.5910%" y="356" width="0.5553%" height="15" fill="rgb(206,12,3)" fg:x="224540" fg:w="5285"/><text x="23.8410%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,240 samples, 0.55%)</title><rect x="23.5957%" y="372" width="0.5505%" height="15" fill="rgb(252,226,20)" fg:x="224585" fg:w="5240"/><text x="23.8457%" y="382.50"></text></g><g><title>simulate_single (simulation.py:43) (5,287 samples, 0.56%)</title><rect x="23.5909%" y="340" width="0.5555%" height="15" fill="rgb(216,123,35)" fg:x="224539" fg:w="5287"/><text x="23.8409%" y="350.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,398 samples, 0.15%)</title><rect x="24.3669%" y="484" width="0.1469%" height="15" fill="rgb(212,68,40)" fg:x="231925" fg:w="1398"/><text x="24.6169%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,166 samples, 0.23%)</title><rect x="24.5138%" y="484" width="0.2276%" height="15" fill="rgb(254,125,32)" fg:x="233323" fg:w="2166"/><text x="24.7638%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,727 samples, 0.39%)</title><rect x="24.3532%" y="452" width="0.3916%" height="15" fill="rgb(253,97,22)" fg:x="231795" fg:w="3727"/><text x="24.6032%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,703 samples, 0.39%)</title><rect x="24.3557%" y="468" width="0.3891%" height="15" fill="rgb(241,101,14)" fg:x="231819" fg:w="3703"/><text x="24.6057%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,601 samples, 0.59%)</title><rect x="24.2738%" y="436" width="0.5885%" height="15" fill="rgb(238,103,29)" fg:x="231039" fg:w="5601"/><text x="24.5238%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,075 samples, 0.11%)</title><rect x="24.7493%" y="452" width="0.1129%" height="15" fill="rgb(233,195,47)" fg:x="235565" fg:w="1075"/><text x="24.9993%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (1,018 samples, 0.11%)</title><rect x="24.9781%" y="596" width="0.1070%" height="15" fill="rgb(246,218,30)" fg:x="237743" fg:w="1018"/><text x="25.2281%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,067 samples, 0.11%)</title><rect x="24.9746%" y="580" width="0.1121%" height="15" fill="rgb(219,145,47)" fg:x="237709" fg:w="1067"/><text x="25.2246%" y="590.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (977 samples, 0.10%)</title><rect x="25.0881%" y="580" width="0.1026%" height="15" fill="rgb(243,12,26)" fg:x="238790" fg:w="977"/><text x="25.3381%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (2,148 samples, 0.23%)</title><rect x="24.9653%" y="564" width="0.2257%" height="15" fill="rgb(214,87,16)" fg:x="237621" fg:w="2148"/><text x="25.2153%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,749 samples, 0.29%)</title><rect x="24.9023%" y="548" width="0.2888%" height="15" fill="rgb(208,99,42)" fg:x="237021" fg:w="2749"/><text x="25.1523%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,767 samples, 0.29%)</title><rect x="24.9005%" y="532" width="0.2907%" height="15" fill="rgb(253,99,2)" fg:x="237004" fg:w="2767"/><text x="25.1505%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (2,917 samples, 0.31%)</title><rect x="24.8949%" y="516" width="0.3065%" height="15" fill="rgb(220,168,23)" fg:x="236951" fg:w="2917"/><text x="25.1449%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,275 samples, 0.34%)</title><rect x="24.8629%" y="484" width="0.3441%" height="15" fill="rgb(242,38,24)" fg:x="236646" fg:w="3275"/><text x="25.1129%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,230 samples, 0.34%)</title><rect x="24.8676%" y="500" width="0.3394%" height="15" fill="rgb(225,182,9)" fg:x="236691" fg:w="3230"/><text x="25.1176%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,280 samples, 0.34%)</title><rect x="24.8626%" y="468" width="0.3446%" height="15" fill="rgb(243,178,37)" fg:x="236643" fg:w="3280"/><text x="25.1126%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (8,918 samples, 0.94%)</title><rect x="24.2705%" y="388" width="0.9370%" height="15" fill="rgb(232,139,19)" fg:x="231008" fg:w="8918"/><text x="24.5205%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (8,915 samples, 0.94%)</title><rect x="24.2709%" y="404" width="0.9366%" height="15" fill="rgb(225,201,24)" fg:x="231011" fg:w="8915"/><text x="24.5209%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (8,912 samples, 0.94%)</title><rect x="24.2712%" y="420" width="0.9363%" height="15" fill="rgb(221,47,46)" fg:x="231014" fg:w="8912"/><text x="24.5212%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,286 samples, 0.35%)</title><rect x="24.8623%" y="436" width="0.3452%" height="15" fill="rgb(249,23,13)" fg:x="236640" fg:w="3286"/><text x="25.1123%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,285 samples, 0.35%)</title><rect x="24.8624%" y="452" width="0.3451%" height="15" fill="rgb(219,9,5)" fg:x="236641" fg:w="3285"/><text x="25.1124%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (8,935 samples, 0.94%)</title><rect x="24.2694%" y="372" width="0.9387%" height="15" fill="rgb(254,171,16)" fg:x="230997" fg:w="8935"/><text x="24.5194%" y="382.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (9,891 samples, 1.04%)</title><rect x="24.1692%" y="356" width="1.0392%" height="15" fill="rgb(230,171,20)" fg:x="230043" fg:w="9891"/><text x="24.4192%" y="366.50"></text></g><g><title>simulate_single (simulation.py:45) (10,167 samples, 1.07%)</title><rect x="24.1464%" y="340" width="1.0682%" height="15" fill="rgb(210,71,41)" fg:x="229826" fg:w="10167"/><text x="24.3964%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,501 samples, 1.73%)</title><rect x="23.5612%" y="308" width="1.7337%" height="15" fill="rgb(206,173,20)" fg:x="224256" fg:w="16501"/><text x="23.8112%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,501 samples, 1.73%)</title><rect x="23.5612%" y="324" width="1.7337%" height="15" fill="rgb(233,88,34)" fg:x="224256" fg:w="16501"/><text x="23.8112%" y="334.50"></text></g><g><title>process 29688:&quot;python simulation.py -p sim0.csv&quot; (16,502 samples, 1.73%)</title><rect x="23.5612%" y="84" width="1.7338%" height="15" fill="rgb(223,209,46)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="100" width="1.7338%" height="15" fill="rgb(250,43,18)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="116" width="1.7338%" height="15" fill="rgb(208,13,10)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="132" width="1.7338%" height="15" fill="rgb(212,200,36)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="148" width="1.7338%" height="15" fill="rgb(225,90,30)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="164" width="1.7338%" height="15" fill="rgb(236,182,39)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="180" width="1.7338%" height="15" fill="rgb(212,144,35)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="196" width="1.7338%" height="15" fill="rgb(228,63,44)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="212" width="1.7338%" height="15" fill="rgb(228,109,6)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="228" width="1.7338%" height="15" fill="rgb(238,117,24)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="244" width="1.7338%" height="15" fill="rgb(242,26,26)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="260" width="1.7338%" height="15" fill="rgb(221,92,48)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="276" width="1.7338%" height="15" fill="rgb(209,209,32)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,502 samples, 1.73%)</title><rect x="23.5612%" y="292" width="1.7338%" height="15" fill="rgb(221,70,22)" fg:x="224256" fg:w="16502"/><text x="23.8112%" y="302.50"></text></g><g><title>extension (tdt.py:36) (973 samples, 0.10%)</title><rect x="25.5823%" y="388" width="0.1022%" height="15" fill="rgb(248,145,5)" fg:x="243493" fg:w="973"/><text x="25.8323%" y="398.50"></text></g><g><title>extension (tdt.py:41) (1,209 samples, 0.13%)</title><rect x="25.6890%" y="388" width="0.1270%" height="15" fill="rgb(226,116,26)" fg:x="244509" fg:w="1209"/><text x="25.9390%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (5,032 samples, 0.53%)</title><rect x="25.3263%" y="340" width="0.5287%" height="15" fill="rgb(244,5,17)" fg:x="241057" fg:w="5032"/><text x="25.5763%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (5,032 samples, 0.53%)</title><rect x="25.3263%" y="356" width="0.5287%" height="15" fill="rgb(252,159,33)" fg:x="241057" fg:w="5032"/><text x="25.5763%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (5,000 samples, 0.53%)</title><rect x="25.3297%" y="372" width="0.5253%" height="15" fill="rgb(206,71,0)" fg:x="241089" fg:w="5000"/><text x="25.5797%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,078 samples, 0.11%)</title><rect x="25.8813%" y="372" width="0.1133%" height="15" fill="rgb(233,118,54)" fg:x="246339" fg:w="1078"/><text x="26.1313%" y="382.50"></text></g><g><title>mode (pandas/core/series.py:2122) (1,385 samples, 0.15%)</title><rect x="26.0853%" y="484" width="0.1455%" height="15" fill="rgb(234,83,48)" fg:x="248281" fg:w="1385"/><text x="26.3353%" y="494.50"></text></g><g><title>mode (pandas/core/series.py:2127) (2,266 samples, 0.24%)</title><rect x="26.2308%" y="484" width="0.2381%" height="15" fill="rgb(228,3,54)" fg:x="249666" fg:w="2266"/><text x="26.4808%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (3,800 samples, 0.40%)</title><rect x="26.0729%" y="452" width="0.3992%" height="15" fill="rgb(226,155,13)" fg:x="248163" fg:w="3800"/><text x="26.3229%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (3,777 samples, 0.40%)</title><rect x="26.0753%" y="468" width="0.3968%" height="15" fill="rgb(241,28,37)" fg:x="248186" fg:w="3777"/><text x="26.3253%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (5,576 samples, 0.59%)</title><rect x="25.9986%" y="436" width="0.5858%" height="15" fill="rgb(233,93,10)" fg:x="247456" fg:w="5576"/><text x="26.2486%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,020 samples, 0.11%)</title><rect x="26.4773%" y="452" width="0.1072%" height="15" fill="rgb(225,113,19)" fg:x="252012" fg:w="1020"/><text x="26.7273%" y="462.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (1,060 samples, 0.11%)</title><rect x="26.7141%" y="596" width="0.1114%" height="15" fill="rgb(241,2,18)" fg:x="254266" fg:w="1060"/><text x="26.9641%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (1,122 samples, 0.12%)</title><rect x="26.7093%" y="580" width="0.1179%" height="15" fill="rgb(228,207,21)" fg:x="254220" fg:w="1122"/><text x="26.9593%" y="590.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (1,024 samples, 0.11%)</title><rect x="26.8282%" y="580" width="0.1076%" height="15" fill="rgb(213,211,35)" fg:x="255352" fg:w="1024"/><text x="27.0782%" y="590.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (2,268 samples, 0.24%)</title><rect x="26.6987%" y="564" width="0.2383%" height="15" fill="rgb(209,83,10)" fg:x="254119" fg:w="2268"/><text x="26.9487%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (2,969 samples, 0.31%)</title><rect x="26.6251%" y="548" width="0.3119%" height="15" fill="rgb(209,164,1)" fg:x="253419" fg:w="2969"/><text x="26.8751%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (2,990 samples, 0.31%)</title><rect x="26.6230%" y="532" width="0.3141%" height="15" fill="rgb(213,184,43)" fg:x="253399" fg:w="2990"/><text x="26.8730%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (3,185 samples, 0.33%)</title><rect x="26.6175%" y="516" width="0.3346%" height="15" fill="rgb(231,61,34)" fg:x="253346" fg:w="3185"/><text x="26.8675%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (3,559 samples, 0.37%)</title><rect x="26.5852%" y="484" width="0.3739%" height="15" fill="rgb(235,75,3)" fg:x="253039" fg:w="3559"/><text x="26.8352%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (3,506 samples, 0.37%)</title><rect x="26.5908%" y="500" width="0.3684%" height="15" fill="rgb(220,106,47)" fg:x="253092" fg:w="3506"/><text x="26.8408%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (3,563 samples, 0.37%)</title><rect x="26.5850%" y="468" width="0.3743%" height="15" fill="rgb(210,196,33)" fg:x="253037" fg:w="3563"/><text x="26.8350%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (9,176 samples, 0.96%)</title><rect x="25.9957%" y="388" width="0.9641%" height="15" fill="rgb(229,154,42)" fg:x="247428" fg:w="9176"/><text x="26.2457%" y="398.50"></text></g><g><title>apply (pandas/core/frame.py:9423) (9,173 samples, 0.96%)</title><rect x="25.9960%" y="404" width="0.9637%" height="15" fill="rgb(228,114,26)" fg:x="247431" fg:w="9173"/><text x="26.2460%" y="414.50"></text></g><g><title>apply (pandas/core/apply.py:678) (9,171 samples, 0.96%)</title><rect x="25.9962%" y="420" width="0.9635%" height="15" fill="rgb(208,144,1)" fg:x="247433" fg:w="9171"/><text x="26.2462%" y="430.50"></text></g><g><title>apply_standard (pandas/core/apply.py:801) (3,572 samples, 0.38%)</title><rect x="26.5845%" y="436" width="0.3753%" height="15" fill="rgb(239,112,37)" fg:x="253032" fg:w="3572"/><text x="26.8345%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (3,567 samples, 0.37%)</title><rect x="26.5850%" y="452" width="0.3748%" height="15" fill="rgb(210,96,50)" fg:x="253037" fg:w="3567"/><text x="26.8350%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (10,287 samples, 1.08%)</title><rect x="25.8795%" y="356" width="1.0808%" height="15" fill="rgb(222,178,2)" fg:x="246322" fg:w="10287"/><text x="26.1295%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (9,192 samples, 0.97%)</title><rect x="25.9945%" y="372" width="0.9657%" height="15" fill="rgb(226,74,18)" fg:x="247417" fg:w="9192"/><text x="26.2445%" y="382.50"></text></g><g><title>simulate_single (simulation.py:45) (10,591 samples, 1.11%)</title><rect x="25.8550%" y="340" width="1.1127%" height="15" fill="rgb(225,67,54)" fg:x="246089" fg:w="10591"/><text x="26.1050%" y="350.50"></text></g><g><title>worker (multiprocessing/pool.py:125) (16,811 samples, 1.77%)</title><rect x="25.2949%" y="308" width="1.7662%" height="15" fill="rgb(251,92,32)" fg:x="240758" fg:w="16811"/><text x="25.5449%" y="318.50"></text></g><g><title>mapstar (multiprocessing/pool.py:48) (16,811 samples, 1.77%)</title><rect x="25.2949%" y="324" width="1.7662%" height="15" fill="rgb(228,149,22)" fg:x="240758" fg:w="16811"/><text x="25.5449%" y="334.50"></text></g><g><title>process 29689:&quot;python simulation.py -p sim0.csv&quot; (16,812 samples, 1.77%)</title><rect x="25.2949%" y="84" width="1.7663%" height="15" fill="rgb(243,54,13)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="94.50"></text></g><g><title>&lt;module&gt; (simulation.py:121) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="100" width="1.7663%" height="15" fill="rgb(243,180,28)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="110.50"></text></g><g><title>simtest (simulation.py:94) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="116" width="1.7663%" height="15" fill="rgb(208,167,24)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="126.50"></text></g><g><title>simulate (simulation.py:59) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="132" width="1.7663%" height="15" fill="rgb(245,73,45)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="142.50"></text></g><g><title>Pool (multiprocessing/context.py:119) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="148" width="1.7663%" height="15" fill="rgb(237,203,48)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="158.50"></text></g><g><title>__init__ (multiprocessing/pool.py:212) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="164" width="1.7663%" height="15" fill="rgb(211,197,16)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="174.50"></text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="180" width="1.7663%" height="15" fill="rgb(243,99,51)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="190.50"></text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="196" width="1.7663%" height="15" fill="rgb(215,123,29)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="206.50"></text></g><g><title>start (multiprocessing/process.py:121) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="212" width="1.7663%" height="15" fill="rgb(239,186,37)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="222.50"></text></g><g><title>_Popen (multiprocessing/context.py:277) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="228" width="1.7663%" height="15" fill="rgb(252,136,39)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="238.50"></text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="244" width="1.7663%" height="15" fill="rgb(223,213,32)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="254.50"></text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="260" width="1.7663%" height="15" fill="rgb(233,115,5)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="270.50"></text></g><g><title>_bootstrap (multiprocessing/process.py:315) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="276" width="1.7663%" height="15" fill="rgb(207,226,44)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="286.50"></text></g><g><title>run (multiprocessing/process.py:108) (16,812 samples, 1.77%)</title><rect x="25.2949%" y="292" width="1.7663%" height="15" fill="rgb(208,126,0)" fg:x="240758" fg:w="16812"/><text x="25.5449%" y="302.50"></text></g><g><title>extension (tdt.py:36) (2,242 samples, 0.24%)</title><rect x="28.0872%" y="388" width="0.2356%" height="15" fill="rgb(244,66,21)" fg:x="267335" fg:w="2242"/><text x="28.3372%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,180 samples, 0.12%)</title><rect x="28.1988%" y="404" width="0.1240%" height="15" fill="rgb(222,97,12)" fg:x="268397" fg:w="1180"/><text x="28.4488%" y="414.50"></text></g><g><title>extension (tdt.py:41) (2,891 samples, 0.30%)</title><rect x="28.3342%" y="388" width="0.3037%" height="15" fill="rgb(219,213,19)" fg:x="269686" fg:w="2891"/><text x="28.5842%" y="398.50"></text></g><g><title>__synthesis (tdt.py:59) (14,607 samples, 1.53%)</title><rect x="27.1971%" y="372" width="1.5347%" height="15" fill="rgb(252,169,30)" fg:x="258863" fg:w="14607"/><text x="27.4471%" y="382.50"></text></g><g><title>simulate_single (simulation.py:43) (14,730 samples, 1.55%)</title><rect x="27.1843%" y="340" width="1.5476%" height="15" fill="rgb(206,32,51)" fg:x="258741" fg:w="14730"/><text x="27.4343%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (14,730 samples, 1.55%)</title><rect x="27.1843%" y="356" width="1.5476%" height="15" fill="rgb(250,172,42)" fg:x="258741" fg:w="14730"/><text x="27.4343%" y="366.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (990 samples, 0.10%)</title><rect x="28.7872%" y="404" width="0.1040%" height="15" fill="rgb(209,34,43)" fg:x="273998" fg:w="990"/><text x="29.0372%" y="414.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:840) (967 samples, 0.10%)</title><rect x="28.7896%" y="420" width="0.1016%" height="15" fill="rgb(223,11,35)" fg:x="274021" fg:w="967"/><text x="29.0396%" y="430.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:940) (952 samples, 0.10%)</title><rect x="28.7912%" y="436" width="0.1000%" height="15" fill="rgb(251,219,26)" fg:x="274036" fg:w="952"/><text x="29.0412%" y="446.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (992 samples, 0.10%)</title><rect x="28.7872%" y="388" width="0.1042%" height="15" fill="rgb(231,119,3)" fg:x="273998" fg:w="992"/><text x="29.0372%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,918 samples, 0.20%)</title><rect x="28.7857%" y="372" width="0.2015%" height="15" fill="rgb(216,97,11)" fg:x="273983" fg:w="1918"/><text x="29.0357%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,560 samples, 0.16%)</title><rect x="28.9967%" y="452" width="0.1639%" height="15" fill="rgb(223,59,9)" fg:x="275992" fg:w="1560"/><text x="29.2467%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,448 samples, 0.15%)</title><rect x="29.0085%" y="468" width="0.1521%" height="15" fill="rgb(233,93,31)" fg:x="276104" fg:w="1448"/><text x="29.2585%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,958 samples, 0.21%)</title><rect x="29.2567%" y="500" width="0.2057%" height="15" fill="rgb(239,81,33)" fg:x="278466" fg:w="1958"/><text x="29.5067%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,953 samples, 0.31%)</title><rect x="29.1854%" y="484" width="0.3103%" height="15" fill="rgb(213,120,34)" fg:x="277788" fg:w="2953"/><text x="29.4354%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (988 samples, 0.10%)</title><rect x="29.6386%" y="532" width="0.1038%" height="15" fill="rgb(243,49,53)" fg:x="282101" fg:w="988"/><text x="29.8886%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,155 samples, 0.12%)</title><rect x="29.6334%" y="516" width="0.1213%" height="15" fill="rgb(247,216,33)" fg:x="282052" fg:w="1155"/><text x="29.8834%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,644 samples, 0.17%)</title><rect x="29.6043%" y="500" width="0.1727%" height="15" fill="rgb(226,26,14)" fg:x="281775" fg:w="1644"/><text x="29.8543%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,566 samples, 0.48%)</title><rect x="29.4957%" y="484" width="0.4797%" height="15" fill="rgb(215,49,53)" fg:x="280741" fg:w="4566"/><text x="29.7457%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,830 samples, 0.82%)</title><rect x="29.1606%" y="452" width="0.8226%" height="15" fill="rgb(245,162,40)" fg:x="277552" fg:w="7830"/><text x="29.4106%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,791 samples, 0.82%)</title><rect x="29.1647%" y="468" width="0.8186%" height="15" fill="rgb(229,68,17)" fg:x="277591" fg:w="7791"/><text x="29.4147%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,734 samples, 1.23%)</title><rect x="28.9962%" y="436" width="1.2328%" height="15" fill="rgb(213,182,10)" fg:x="275987" fg:w="11734"/><text x="29.2462%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,235 samples, 0.23%)</title><rect x="29.9942%" y="452" width="0.2348%" height="15" fill="rgb(245,125,30)" fg:x="285486" fg:w="2235"/><text x="30.2442%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,413 samples, 0.15%)</title><rect x="30.0806%" y="468" width="0.1485%" height="15" fill="rgb(232,202,2)" fg:x="286308" fg:w="1413"/><text x="30.3306%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,650 samples, 0.49%)</title><rect x="30.4736%" y="596" width="0.4885%" height="15" fill="rgb(237,140,51)" fg:x="290049" fg:w="4650"/><text x="30.7236%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,389 samples, 0.25%)</title><rect x="30.7112%" y="612" width="0.2510%" height="15" fill="rgb(236,157,25)" fg:x="292310" fg:w="2389"/><text x="30.9612%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,938 samples, 0.52%)</title><rect x="30.4511%" y="580" width="0.5188%" height="15" fill="rgb(219,209,0)" fg:x="289835" fg:w="4938"/><text x="30.7011%" y="590.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (1,021 samples, 0.11%)</title><rect x="31.1494%" y="660" width="0.1073%" height="15" fill="rgb(240,116,54)" fg:x="296481" fg:w="1021"/><text x="31.3994%" y="670.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,138 samples, 0.12%)</title><rect x="31.1433%" y="644" width="0.1196%" height="15" fill="rgb(216,10,36)" fg:x="296423" fg:w="1138"/><text x="31.3933%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,471 samples, 0.15%)</title><rect x="31.1378%" y="628" width="0.1545%" height="15" fill="rgb(222,72,44)" fg:x="296371" fg:w="1471"/><text x="31.3878%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,540 samples, 0.27%)</title><rect x="31.0256%" y="612" width="0.2669%" height="15" fill="rgb(232,159,9)" fg:x="295303" fg:w="2540"/><text x="31.2756%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,913 samples, 0.31%)</title><rect x="31.0063%" y="596" width="0.3061%" height="15" fill="rgb(210,39,32)" fg:x="295119" fg:w="2913"/><text x="31.2563%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,554 samples, 0.48%)</title><rect x="30.9764%" y="580" width="0.4785%" height="15" fill="rgb(216,194,45)" fg:x="294835" fg:w="4554"/><text x="31.2264%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,307 samples, 0.14%)</title><rect x="31.3176%" y="596" width="0.1373%" height="15" fill="rgb(218,18,35)" fg:x="298082" fg:w="1307"/><text x="31.5676%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,974 samples, 1.05%)</title><rect x="30.4091%" y="564" width="1.0479%" height="15" fill="rgb(207,83,51)" fg:x="289435" fg:w="9974"/><text x="30.6591%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,717 samples, 1.13%)</title><rect x="30.3318%" y="548" width="1.1260%" height="15" fill="rgb(225,63,43)" fg:x="288699" fg:w="10717"/><text x="30.5818%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,780 samples, 1.13%)</title><rect x="30.3257%" y="532" width="1.1326%" height="15" fill="rgb(207,57,36)" fg:x="288641" fg:w="10780"/><text x="30.5757%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (11,266 samples, 1.18%)</title><rect x="30.3105%" y="516" width="1.1836%" height="15" fill="rgb(216,99,33)" fg:x="288497" fg:w="11266"/><text x="30.5605%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (12,138 samples, 1.28%)</title><rect x="30.2294%" y="484" width="1.2753%" height="15" fill="rgb(225,42,16)" fg:x="287725" fg:w="12138"/><text x="30.4794%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (12,047 samples, 1.27%)</title><rect x="30.2390%" y="500" width="1.2657%" height="15" fill="rgb(220,201,45)" fg:x="287816" fg:w="12047"/><text x="30.4890%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (12,142 samples, 1.28%)</title><rect x="30.2293%" y="468" width="1.2757%" height="15" fill="rgb(225,33,4)" fg:x="287724" fg:w="12142"/><text x="30.4793%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,955 samples, 2.52%)</title><rect x="28.9886%" y="388" width="2.5168%" height="15" fill="rgb(224,33,50)" fg:x="275915" fg:w="23955"/><text x="29.2386%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,954 samples, 2.52%)</title><rect x="28.9887%" y="404" width="2.5167%" height="15" fill="rgb(246,198,51)" fg:x="275916" fg:w="23954"/><text x="29.2387%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,950 samples, 2.52%)</title><rect x="28.9892%" y="420" width="2.5163%" height="15" fill="rgb(205,22,4)" fg:x="275920" fg:w="23950"/><text x="29.2392%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (12,149 samples, 1.28%)</title><rect x="30.2290%" y="436" width="1.2764%" height="15" fill="rgb(206,3,8)" fg:x="287721" fg:w="12149"/><text x="30.4790%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (12,146 samples, 1.28%)</title><rect x="30.2293%" y="452" width="1.2761%" height="15" fill="rgb(251,23,15)" fg:x="287724" fg:w="12146"/><text x="30.4793%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,982 samples, 2.52%)</title><rect x="28.9872%" y="372" width="2.5196%" height="15" fill="rgb(252,88,28)" fg:x="275901" fg:w="23982"/><text x="29.2372%" y="382.50">__..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,919 samples, 2.72%)</title><rect x="28.7838%" y="356" width="2.7231%" height="15" fill="rgb(212,127,14)" fg:x="273965" fg:w="25919"/><text x="29.0338%" y="366.50">de..</text></g><g><title>simulate_single (simulation.py:45) (26,548 samples, 2.79%)</title><rect x="28.7319%" y="340" width="2.7892%" height="15" fill="rgb(247,145,37)" fg:x="273471" fg:w="26548"/><text x="28.9819%" y="350.50">si..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,723 samples, 4.70%)</title><rect x="27.0612%" y="308" width="4.6988%" height="15" fill="rgb(209,117,53)" fg:x="257570" fg:w="44723"/><text x="27.3112%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,723 samples, 4.70%)</title><rect x="27.0612%" y="324" width="4.6988%" height="15" fill="rgb(212,90,42)" fg:x="257570" fg:w="44723"/><text x="27.3112%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,737 samples, 0.18%)</title><rect x="31.5775%" y="340" width="0.1825%" height="15" fill="rgb(218,164,37)" fg:x="300556" fg:w="1737"/><text x="31.8275%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,737 samples, 0.18%)</title><rect x="31.5775%" y="356" width="0.1825%" height="15" fill="rgb(246,65,34)" fg:x="300556" fg:w="1737"/><text x="31.8275%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,737 samples, 0.18%)</title><rect x="31.5775%" y="372" width="0.1825%" height="15" fill="rgb(231,100,33)" fg:x="300556" fg:w="1737"/><text x="31.8275%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,736 samples, 0.18%)</title><rect x="31.5776%" y="388" width="0.1824%" height="15" fill="rgb(228,126,14)" fg:x="300557" fg:w="1736"/><text x="31.8276%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,736 samples, 0.18%)</title><rect x="31.5776%" y="404" width="0.1824%" height="15" fill="rgb(215,173,21)" fg:x="300557" fg:w="1736"/><text x="31.8276%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,735 samples, 0.18%)</title><rect x="31.5777%" y="420" width="0.1823%" height="15" fill="rgb(210,6,40)" fg:x="300558" fg:w="1735"/><text x="31.8277%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,559 samples, 0.16%)</title><rect x="31.5962%" y="436" width="0.1638%" height="15" fill="rgb(212,48,18)" fg:x="300734" fg:w="1559"/><text x="31.8462%" y="446.50"></text></g><g><title>process 30252:&quot;python simulation.py -p sim0.csv&quot; (44,724 samples, 4.70%)</title><rect x="27.0612%" y="84" width="4.6989%" height="15" fill="rgb(230,214,11)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="100" width="4.6989%" height="15" fill="rgb(254,105,39)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="116" width="4.6989%" height="15" fill="rgb(245,158,5)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="132" width="4.6989%" height="15" fill="rgb(249,208,11)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="148" width="4.6989%" height="15" fill="rgb(210,39,28)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="164" width="4.6989%" height="15" fill="rgb(211,56,53)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="180" width="4.6989%" height="15" fill="rgb(226,201,30)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="196" width="4.6989%" height="15" fill="rgb(239,101,34)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="212" width="4.6989%" height="15" fill="rgb(226,209,5)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="228" width="4.6989%" height="15" fill="rgb(250,105,47)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="244" width="4.6989%" height="15" fill="rgb(230,72,3)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="260" width="4.6989%" height="15" fill="rgb(232,218,39)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="276" width="4.6989%" height="15" fill="rgb(248,166,6)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,724 samples, 4.70%)</title><rect x="27.0612%" y="292" width="4.6989%" height="15" fill="rgb(247,89,20)" fg:x="257570" fg:w="44724"/><text x="27.3112%" y="302.50">run (..</text></g><g><title>extension (tdt.py:36) (2,424 samples, 0.25%)</title><rect x="32.8436%" y="388" width="0.2547%" height="15" fill="rgb(248,130,54)" fg:x="312607" fg:w="2424"/><text x="33.0936%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,252 samples, 0.13%)</title><rect x="32.9668%" y="404" width="0.1315%" height="15" fill="rgb(234,196,4)" fg:x="313779" fg:w="1252"/><text x="33.2168%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,103 samples, 0.33%)</title><rect x="33.1100%" y="388" width="0.3260%" height="15" fill="rgb(250,143,31)" fg:x="315142" fg:w="3103"/><text x="33.3600%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (15,903 samples, 1.67%)</title><rect x="31.8529%" y="340" width="1.6708%" height="15" fill="rgb(211,110,34)" fg:x="303177" fg:w="15903"/><text x="32.1029%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,903 samples, 1.67%)</title><rect x="31.8529%" y="356" width="1.6708%" height="15" fill="rgb(215,124,48)" fg:x="303177" fg:w="15903"/><text x="32.1029%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,778 samples, 1.66%)</title><rect x="31.8660%" y="372" width="1.6577%" height="15" fill="rgb(216,46,13)" fg:x="303302" fg:w="15778"/><text x="32.1160%" y="382.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (965 samples, 0.10%)</title><rect x="33.5811%" y="404" width="0.1014%" height="15" fill="rgb(205,184,25)" fg:x="319626" fg:w="965"/><text x="33.8311%" y="414.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (967 samples, 0.10%)</title><rect x="33.5811%" y="388" width="0.1016%" height="15" fill="rgb(228,1,10)" fg:x="319626" fg:w="967"/><text x="33.8311%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,895 samples, 0.20%)</title><rect x="33.5790%" y="372" width="0.1991%" height="15" fill="rgb(213,116,27)" fg:x="319606" fg:w="1895"/><text x="33.8290%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,560 samples, 0.16%)</title><rect x="33.7868%" y="452" width="0.1639%" height="15" fill="rgb(241,95,50)" fg:x="321584" fg:w="1560"/><text x="34.0368%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,456 samples, 0.15%)</title><rect x="33.7977%" y="468" width="0.1530%" height="15" fill="rgb(238,48,32)" fg:x="321688" fg:w="1456"/><text x="34.0477%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,927 samples, 0.20%)</title><rect x="34.0452%" y="500" width="0.2025%" height="15" fill="rgb(235,113,49)" fg:x="324044" fg:w="1927"/><text x="34.2952%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,914 samples, 0.31%)</title><rect x="33.9746%" y="484" width="0.3062%" height="15" fill="rgb(205,127,43)" fg:x="323372" fg:w="2914"/><text x="34.2246%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (967 samples, 0.10%)</title><rect x="34.4298%" y="532" width="0.1016%" height="15" fill="rgb(250,162,2)" fg:x="327704" fg:w="967"/><text x="34.6798%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,105 samples, 0.12%)</title><rect x="34.4240%" y="516" width="0.1161%" height="15" fill="rgb(220,13,41)" fg:x="327649" fg:w="1105"/><text x="34.6740%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,624 samples, 0.17%)</title><rect x="34.3932%" y="500" width="0.1706%" height="15" fill="rgb(249,221,25)" fg:x="327356" fg:w="1624"/><text x="34.6432%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,599 samples, 0.48%)</title><rect x="34.2808%" y="484" width="0.4832%" height="15" fill="rgb(215,208,19)" fg:x="326286" fg:w="4599"/><text x="34.5308%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,786 samples, 0.82%)</title><rect x="33.9507%" y="452" width="0.8180%" height="15" fill="rgb(236,175,2)" fg:x="323144" fg:w="7786"/><text x="34.2007%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,751 samples, 0.81%)</title><rect x="33.9544%" y="468" width="0.8143%" height="15" fill="rgb(241,52,2)" fg:x="323179" fg:w="7751"/><text x="34.2044%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,649 samples, 1.22%)</title><rect x="33.7861%" y="436" width="1.2239%" height="15" fill="rgb(248,140,14)" fg:x="321577" fg:w="11649"/><text x="34.0361%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,194 samples, 0.23%)</title><rect x="34.7794%" y="452" width="0.2305%" height="15" fill="rgb(253,22,42)" fg:x="331032" fg:w="2194"/><text x="35.0294%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,401 samples, 0.15%)</title><rect x="34.8627%" y="468" width="0.1472%" height="15" fill="rgb(234,61,47)" fg:x="331825" fg:w="1401"/><text x="35.1127%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,497 samples, 0.47%)</title><rect x="35.2402%" y="596" width="0.4725%" height="15" fill="rgb(208,226,15)" fg:x="335418" fg:w="4497"/><text x="35.4902%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,253 samples, 0.24%)</title><rect x="35.4760%" y="612" width="0.2367%" height="15" fill="rgb(217,221,4)" fg:x="337662" fg:w="2253"/><text x="35.7260%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,752 samples, 0.50%)</title><rect x="35.2216%" y="580" width="0.4993%" height="15" fill="rgb(212,174,34)" fg:x="335241" fg:w="4752"/><text x="35.4716%" y="590.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,049 samples, 0.11%)</title><rect x="35.8740%" y="644" width="0.1102%" height="15" fill="rgb(253,83,4)" fg:x="341450" fg:w="1049"/><text x="36.1240%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,370 samples, 0.14%)</title><rect x="35.8690%" y="628" width="0.1439%" height="15" fill="rgb(250,195,49)" fg:x="341403" fg:w="1370"/><text x="36.1190%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,357 samples, 0.25%)</title><rect x="35.7655%" y="612" width="0.2476%" height="15" fill="rgb(241,192,25)" fg:x="340417" fg:w="2357"/><text x="36.0155%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,665 samples, 0.28%)</title><rect x="35.7497%" y="596" width="0.2800%" height="15" fill="rgb(208,124,10)" fg:x="340267" fg:w="2665"/><text x="35.9997%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,247 samples, 0.45%)</title><rect x="35.7265%" y="580" width="0.4462%" height="15" fill="rgb(222,33,0)" fg:x="340046" fg:w="4247"/><text x="35.9765%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,294 samples, 0.14%)</title><rect x="36.0367%" y="596" width="0.1360%" height="15" fill="rgb(234,209,28)" fg:x="342999" fg:w="1294"/><text x="36.2867%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,448 samples, 0.99%)</title><rect x="35.1820%" y="564" width="0.9926%" height="15" fill="rgb(224,11,23)" fg:x="334864" fg:w="9448"/><text x="35.4320%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,156 samples, 1.07%)</title><rect x="35.1081%" y="548" width="1.0670%" height="15" fill="rgb(232,99,1)" fg:x="334160" fg:w="10156"/><text x="35.3581%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,211 samples, 1.07%)</title><rect x="35.1024%" y="532" width="1.0728%" height="15" fill="rgb(237,95,45)" fg:x="334106" fg:w="10211"/><text x="35.3524%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,674 samples, 1.12%)</title><rect x="35.0861%" y="516" width="1.1214%" height="15" fill="rgb(208,109,11)" fg:x="333951" fg:w="10674"/><text x="35.3361%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,489 samples, 1.21%)</title><rect x="35.0106%" y="484" width="1.2071%" height="15" fill="rgb(216,190,48)" fg:x="333232" fg:w="11489"/><text x="35.2606%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,390 samples, 1.20%)</title><rect x="35.0210%" y="500" width="1.1967%" height="15" fill="rgb(251,171,36)" fg:x="333331" fg:w="11390"/><text x="35.2710%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,491 samples, 1.21%)</title><rect x="35.0105%" y="468" width="1.2073%" height="15" fill="rgb(230,62,22)" fg:x="333231" fg:w="11491"/><text x="35.2605%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,213 samples, 2.44%)</title><rect x="33.7792%" y="388" width="2.4388%" height="15" fill="rgb(225,114,35)" fg:x="321512" fg:w="23213"/><text x="34.0292%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,210 samples, 2.44%)</title><rect x="33.7795%" y="404" width="2.4385%" height="15" fill="rgb(215,118,42)" fg:x="321515" fg:w="23210"/><text x="34.0295%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,207 samples, 2.44%)</title><rect x="33.7799%" y="420" width="2.4382%" height="15" fill="rgb(243,119,21)" fg:x="321518" fg:w="23207"/><text x="34.0299%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,499 samples, 1.21%)</title><rect x="35.0099%" y="436" width="1.2081%" height="15" fill="rgb(252,177,53)" fg:x="333226" fg:w="11499"/><text x="35.2599%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,494 samples, 1.21%)</title><rect x="35.0105%" y="452" width="1.2076%" height="15" fill="rgb(237,209,29)" fg:x="333231" fg:w="11494"/><text x="35.2605%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,235 samples, 2.44%)</title><rect x="33.7781%" y="372" width="2.4412%" height="15" fill="rgb(212,65,23)" fg:x="321501" fg:w="23235"/><text x="34.0281%" y="382.50">__..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,164 samples, 2.64%)</title><rect x="33.5756%" y="356" width="2.6438%" height="15" fill="rgb(230,222,46)" fg:x="319574" fg:w="25164"/><text x="33.8256%" y="366.50">de..</text></g><g><title>simulate_single (simulation.py:45) (25,776 samples, 2.71%)</title><rect x="33.5237%" y="340" width="2.7081%" height="15" fill="rgb(215,135,32)" fg:x="319080" fg:w="25776"/><text x="33.7737%" y="350.50">si..</text></g><g><title>process 30253:&quot;python simulation.py -p sim0.csv&quot; (44,332 samples, 4.66%)</title><rect x="31.7601%" y="84" width="4.6577%" height="15" fill="rgb(246,101,22)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="100" width="4.6577%" height="15" fill="rgb(206,107,13)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="116" width="4.6577%" height="15" fill="rgb(250,100,44)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="132" width="4.6577%" height="15" fill="rgb(231,147,38)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="148" width="4.6577%" height="15" fill="rgb(229,8,40)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="164" width="4.6577%" height="15" fill="rgb(221,135,30)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="180" width="4.6577%" height="15" fill="rgb(249,193,18)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="196" width="4.6577%" height="15" fill="rgb(209,133,39)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="212" width="4.6577%" height="15" fill="rgb(232,100,14)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="228" width="4.6577%" height="15" fill="rgb(224,185,1)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="244" width="4.6577%" height="15" fill="rgb(223,139,8)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="260" width="4.6577%" height="15" fill="rgb(232,213,38)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="276" width="4.6577%" height="15" fill="rgb(207,94,22)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="292" width="4.6577%" height="15" fill="rgb(219,183,54)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="302.50">run (..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="308" width="4.6577%" height="15" fill="rgb(216,185,54)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,332 samples, 4.66%)</title><rect x="31.7601%" y="324" width="4.6577%" height="15" fill="rgb(254,217,39)" fg:x="302294" fg:w="44332"/><text x="32.0101%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,356 samples, 0.14%)</title><rect x="36.2753%" y="340" width="0.1425%" height="15" fill="rgb(240,178,23)" fg:x="345270" fg:w="1356"/><text x="36.5253%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,356 samples, 0.14%)</title><rect x="36.2753%" y="356" width="0.1425%" height="15" fill="rgb(218,11,47)" fg:x="345270" fg:w="1356"/><text x="36.5253%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,356 samples, 0.14%)</title><rect x="36.2753%" y="372" width="0.1425%" height="15" fill="rgb(218,51,51)" fg:x="345270" fg:w="1356"/><text x="36.5253%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,356 samples, 0.14%)</title><rect x="36.2753%" y="388" width="0.1425%" height="15" fill="rgb(238,126,27)" fg:x="345270" fg:w="1356"/><text x="36.5253%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,354 samples, 0.14%)</title><rect x="36.2755%" y="404" width="0.1423%" height="15" fill="rgb(249,202,22)" fg:x="345272" fg:w="1354"/><text x="36.5255%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,352 samples, 0.14%)</title><rect x="36.2757%" y="420" width="0.1420%" height="15" fill="rgb(254,195,49)" fg:x="345274" fg:w="1352"/><text x="36.5257%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,200 samples, 0.13%)</title><rect x="36.2917%" y="436" width="0.1261%" height="15" fill="rgb(208,123,14)" fg:x="345426" fg:w="1200"/><text x="36.5417%" y="446.50"></text></g><g><title>extension (tdt.py:34) (964 samples, 0.10%)</title><rect x="37.3925%" y="388" width="0.1013%" height="15" fill="rgb(224,200,8)" fg:x="355903" fg:w="964"/><text x="37.6425%" y="398.50"></text></g><g><title>extension (tdt.py:36) (2,369 samples, 0.25%)</title><rect x="37.5024%" y="388" width="0.2489%" height="15" fill="rgb(217,61,36)" fg:x="356949" fg:w="2369"/><text x="37.7524%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,285 samples, 0.14%)</title><rect x="37.6163%" y="404" width="0.1350%" height="15" fill="rgb(206,35,45)" fg:x="358033" fg:w="1285"/><text x="37.8663%" y="414.50"></text></g><g><title>extension (tdt.py:41) (2,955 samples, 0.31%)</title><rect x="37.7624%" y="388" width="0.3105%" height="15" fill="rgb(217,65,33)" fg:x="359424" fg:w="2955"/><text x="38.0124%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (15,580 samples, 1.64%)</title><rect x="36.5307%" y="340" width="1.6369%" height="15" fill="rgb(222,158,48)" fg:x="347701" fg:w="15580"/><text x="36.7807%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,577 samples, 1.64%)</title><rect x="36.5311%" y="356" width="1.6366%" height="15" fill="rgb(254,2,54)" fg:x="347704" fg:w="15577"/><text x="36.7811%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,469 samples, 1.63%)</title><rect x="36.5424%" y="372" width="1.6252%" height="15" fill="rgb(250,143,38)" fg:x="347812" fg:w="15469"/><text x="36.7924%" y="382.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (1,003 samples, 0.11%)</title><rect x="38.2186%" y="404" width="0.1054%" height="15" fill="rgb(248,25,0)" fg:x="363766" fg:w="1003"/><text x="38.4686%" y="414.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:840) (980 samples, 0.10%)</title><rect x="38.2210%" y="420" width="0.1030%" height="15" fill="rgb(206,152,27)" fg:x="363789" fg:w="980"/><text x="38.4710%" y="430.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:940) (967 samples, 0.10%)</title><rect x="38.2224%" y="436" width="0.1016%" height="15" fill="rgb(240,77,30)" fg:x="363802" fg:w="967"/><text x="38.4724%" y="446.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1067) (967 samples, 0.10%)</title><rect x="38.2224%" y="452" width="0.1016%" height="15" fill="rgb(231,5,3)" fg:x="363802" fg:w="967"/><text x="38.4724%" y="462.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/construction.py:1067) (967 samples, 0.10%)</title><rect x="38.2224%" y="468" width="0.1016%" height="15" fill="rgb(207,226,32)" fg:x="363802" fg:w="967"/><text x="38.4724%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (1,007 samples, 0.11%)</title><rect x="38.2186%" y="388" width="0.1058%" height="15" fill="rgb(222,207,47)" fg:x="363766" fg:w="1007"/><text x="38.4686%" y="398.50"></text></g><g><title>__init__ (pandas/core/frame.py:790) (954 samples, 0.10%)</title><rect x="38.3244%" y="388" width="0.1002%" height="15" fill="rgb(229,115,45)" fg:x="364773" fg:w="954"/><text x="38.5744%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,976 samples, 0.21%)</title><rect x="38.2172%" y="372" width="0.2076%" height="15" fill="rgb(224,191,6)" fg:x="363753" fg:w="1976"/><text x="38.4672%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,526 samples, 0.16%)</title><rect x="38.4338%" y="452" width="0.1603%" height="15" fill="rgb(230,227,24)" fg:x="365814" fg:w="1526"/><text x="38.6838%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,426 samples, 0.15%)</title><rect x="38.4443%" y="468" width="0.1498%" height="15" fill="rgb(228,80,19)" fg:x="365914" fg:w="1426"/><text x="38.6943%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,856 samples, 0.19%)</title><rect x="38.6940%" y="500" width="0.1950%" height="15" fill="rgb(247,229,0)" fg:x="368291" fg:w="1856"/><text x="38.9440%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,934 samples, 0.31%)</title><rect x="38.6174%" y="484" width="0.3083%" height="15" fill="rgb(237,194,15)" fg:x="367562" fg:w="2934"/><text x="38.8674%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (974 samples, 0.10%)</title><rect x="39.0770%" y="532" width="0.1023%" height="15" fill="rgb(219,203,20)" fg:x="371936" fg:w="974"/><text x="39.3270%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,136 samples, 0.12%)</title><rect x="39.0696%" y="516" width="0.1194%" height="15" fill="rgb(234,128,8)" fg:x="371866" fg:w="1136"/><text x="39.3196%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,620 samples, 0.17%)</title><rect x="39.0404%" y="500" width="0.1702%" height="15" fill="rgb(248,202,8)" fg:x="371588" fg:w="1620"/><text x="39.2904%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,597 samples, 0.48%)</title><rect x="38.9257%" y="484" width="0.4830%" height="15" fill="rgb(206,104,37)" fg:x="370496" fg:w="4597"/><text x="39.1757%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,813 samples, 0.82%)</title><rect x="38.5941%" y="452" width="0.8209%" height="15" fill="rgb(223,8,27)" fg:x="367340" fg:w="7813"/><text x="38.8441%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,772 samples, 0.82%)</title><rect x="38.5984%" y="468" width="0.8166%" height="15" fill="rgb(216,217,28)" fg:x="367381" fg:w="7772"/><text x="38.8484%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,605 samples, 1.22%)</title><rect x="38.4330%" y="436" width="1.2193%" height="15" fill="rgb(249,199,1)" fg:x="365807" fg:w="11605"/><text x="38.6830%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,153 samples, 0.23%)</title><rect x="39.4261%" y="452" width="0.2262%" height="15" fill="rgb(240,85,17)" fg:x="375259" fg:w="2153"/><text x="39.6761%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,335 samples, 0.14%)</title><rect x="39.5120%" y="468" width="0.1403%" height="15" fill="rgb(206,108,45)" fg:x="376077" fg:w="1335"/><text x="39.7620%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,649 samples, 0.49%)</title><rect x="39.8890%" y="596" width="0.4884%" height="15" fill="rgb(245,210,41)" fg:x="379665" fg:w="4649"/><text x="40.1390%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,380 samples, 0.25%)</title><rect x="40.1274%" y="612" width="0.2501%" height="15" fill="rgb(206,13,37)" fg:x="381934" fg:w="2380"/><text x="40.3774%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,921 samples, 0.52%)</title><rect x="39.8676%" y="580" width="0.5170%" height="15" fill="rgb(250,61,18)" fg:x="379461" fg:w="4921"/><text x="40.1176%" y="590.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (974 samples, 0.10%)</title><rect x="40.5448%" y="660" width="0.1023%" height="15" fill="rgb(235,172,48)" fg:x="385907" fg:w="974"/><text x="40.7948%" y="670.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,071 samples, 0.11%)</title><rect x="40.5404%" y="644" width="0.1125%" height="15" fill="rgb(249,201,17)" fg:x="385865" fg:w="1071"/><text x="40.7904%" y="654.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,394 samples, 0.25%)</title><rect x="40.4313%" y="612" width="0.2515%" height="15" fill="rgb(219,208,6)" fg:x="384827" fg:w="2394"/><text x="40.6813%" y="622.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,417 samples, 0.15%)</title><rect x="40.5340%" y="628" width="0.1489%" height="15" fill="rgb(248,31,23)" fg:x="385804" fg:w="1417"/><text x="40.7840%" y="638.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,731 samples, 0.29%)</title><rect x="40.4139%" y="596" width="0.2869%" height="15" fill="rgb(245,15,42)" fg:x="384661" fg:w="2731"/><text x="40.6639%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,310 samples, 0.45%)</title><rect x="40.3898%" y="580" width="0.4528%" height="15" fill="rgb(222,217,39)" fg:x="384432" fg:w="4310"/><text x="40.6398%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,284 samples, 0.13%)</title><rect x="40.7078%" y="596" width="0.1349%" height="15" fill="rgb(210,219,27)" fg:x="387458" fg:w="1284"/><text x="40.9578%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,678 samples, 1.02%)</title><rect x="39.8283%" y="564" width="1.0168%" height="15" fill="rgb(252,166,36)" fg:x="379087" fg:w="9678"/><text x="40.0783%" y="574.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,493 samples, 1.10%)</title><rect x="39.7432%" y="532" width="1.1024%" height="15" fill="rgb(245,132,34)" fg:x="378277" fg:w="10493"/><text x="39.9932%" y="542.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,430 samples, 1.10%)</title><rect x="39.7498%" y="548" width="1.0958%" height="15" fill="rgb(236,54,3)" fg:x="378340" fg:w="10430"/><text x="39.9998%" y="558.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,961 samples, 1.15%)</title><rect x="39.7294%" y="516" width="1.1516%" height="15" fill="rgb(241,173,43)" fg:x="378146" fg:w="10961"/><text x="39.9794%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,801 samples, 1.24%)</title><rect x="39.6526%" y="484" width="1.2399%" height="15" fill="rgb(215,190,9)" fg:x="377415" fg:w="11801"/><text x="39.9026%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,700 samples, 1.23%)</title><rect x="39.6632%" y="500" width="1.2292%" height="15" fill="rgb(242,101,16)" fg:x="377516" fg:w="11700"/><text x="39.9132%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,804 samples, 1.24%)</title><rect x="39.6525%" y="468" width="1.2402%" height="15" fill="rgb(223,190,21)" fg:x="377414" fg:w="11804"/><text x="39.9025%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,479 samples, 2.47%)</title><rect x="38.4262%" y="388" width="2.4668%" height="15" fill="rgb(215,228,25)" fg:x="365742" fg:w="23479"/><text x="38.6762%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,477 samples, 2.47%)</title><rect x="38.4264%" y="404" width="2.4666%" height="15" fill="rgb(225,36,22)" fg:x="365744" fg:w="23477"/><text x="38.6764%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,476 samples, 2.47%)</title><rect x="38.4265%" y="420" width="2.4665%" height="15" fill="rgb(251,106,46)" fg:x="365745" fg:w="23476"/><text x="38.6765%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,809 samples, 1.24%)</title><rect x="39.6523%" y="436" width="1.2407%" height="15" fill="rgb(208,90,1)" fg:x="377412" fg:w="11809"/><text x="39.9023%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,807 samples, 1.24%)</title><rect x="39.6525%" y="452" width="1.2405%" height="15" fill="rgb(243,10,4)" fg:x="377414" fg:w="11807"/><text x="39.9025%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,506 samples, 2.68%)</title><rect x="38.2146%" y="356" width="2.6798%" height="15" fill="rgb(212,137,27)" fg:x="363728" fg:w="25506"/><text x="38.4646%" y="366.50">de..</text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,505 samples, 2.47%)</title><rect x="38.4248%" y="372" width="2.4695%" height="15" fill="rgb(231,220,49)" fg:x="365729" fg:w="23505"/><text x="38.6748%" y="382.50">__..</text></g><g><title>simulate_single (simulation.py:45) (26,060 samples, 2.74%)</title><rect x="38.1676%" y="340" width="2.7380%" height="15" fill="rgb(237,96,20)" fg:x="363281" fg:w="26060"/><text x="38.4176%" y="350.50">si..</text></g><g><title>process 30254:&quot;python simulation.py -p sim0.csv&quot; (44,776 samples, 4.70%)</title><rect x="36.4178%" y="84" width="4.7043%" height="15" fill="rgb(239,229,30)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="100" width="4.7043%" height="15" fill="rgb(219,65,33)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="116" width="4.7043%" height="15" fill="rgb(243,134,7)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="132" width="4.7043%" height="15" fill="rgb(216,177,54)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="148" width="4.7043%" height="15" fill="rgb(211,160,20)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="164" width="4.7043%" height="15" fill="rgb(239,85,39)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="180" width="4.7043%" height="15" fill="rgb(232,125,22)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="196" width="4.7043%" height="15" fill="rgb(244,57,34)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="212" width="4.7043%" height="15" fill="rgb(214,203,32)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="228" width="4.7043%" height="15" fill="rgb(207,58,43)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="244" width="4.7043%" height="15" fill="rgb(215,193,15)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="260" width="4.7043%" height="15" fill="rgb(232,15,44)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="276" width="4.7043%" height="15" fill="rgb(212,3,48)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="292" width="4.7043%" height="15" fill="rgb(218,128,7)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="302.50">run (..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="308" width="4.7043%" height="15" fill="rgb(226,216,39)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,776 samples, 4.70%)</title><rect x="36.4178%" y="324" width="4.7043%" height="15" fill="rgb(243,47,51)" fg:x="346626" fg:w="44776"/><text x="36.6678%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,566 samples, 0.16%)</title><rect x="40.9576%" y="340" width="0.1645%" height="15" fill="rgb(241,183,40)" fg:x="389836" fg:w="1566"/><text x="41.2076%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,566 samples, 0.16%)</title><rect x="40.9576%" y="356" width="0.1645%" height="15" fill="rgb(231,217,32)" fg:x="389836" fg:w="1566"/><text x="41.2076%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,566 samples, 0.16%)</title><rect x="40.9576%" y="372" width="0.1645%" height="15" fill="rgb(229,61,38)" fg:x="389836" fg:w="1566"/><text x="41.2076%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,565 samples, 0.16%)</title><rect x="40.9577%" y="388" width="0.1644%" height="15" fill="rgb(225,210,5)" fg:x="389837" fg:w="1565"/><text x="41.2077%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,565 samples, 0.16%)</title><rect x="40.9577%" y="404" width="0.1644%" height="15" fill="rgb(231,79,45)" fg:x="389837" fg:w="1565"/><text x="41.2077%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,565 samples, 0.16%)</title><rect x="40.9577%" y="420" width="0.1644%" height="15" fill="rgb(224,100,7)" fg:x="389837" fg:w="1565"/><text x="41.2077%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,380 samples, 0.14%)</title><rect x="40.9771%" y="436" width="0.1450%" height="15" fill="rgb(241,198,18)" fg:x="390022" fg:w="1380"/><text x="41.2271%" y="446.50"></text></g><g><title>extension (tdt.py:34) (1,025 samples, 0.11%)</title><rect x="42.0728%" y="388" width="0.1077%" height="15" fill="rgb(252,97,53)" fg:x="400451" fg:w="1025"/><text x="42.3228%" y="398.50"></text></g><g><title>extension (tdt.py:36) (2,291 samples, 0.24%)</title><rect x="42.1898%" y="388" width="0.2407%" height="15" fill="rgb(220,88,7)" fg:x="401564" fg:w="2291"/><text x="42.4398%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,222 samples, 0.13%)</title><rect x="42.3021%" y="404" width="0.1284%" height="15" fill="rgb(213,176,14)" fg:x="402633" fg:w="1222"/><text x="42.5521%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,015 samples, 0.32%)</title><rect x="42.4422%" y="388" width="0.3168%" height="15" fill="rgb(246,73,7)" fg:x="403967" fg:w="3015"/><text x="42.6922%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (15,581 samples, 1.64%)</title><rect x="41.2156%" y="340" width="1.6370%" height="15" fill="rgb(245,64,36)" fg:x="392292" fg:w="15581"/><text x="41.4656%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,579 samples, 1.64%)</title><rect x="41.2158%" y="356" width="1.6368%" height="15" fill="rgb(245,80,10)" fg:x="392294" fg:w="15579"/><text x="41.4658%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,487 samples, 1.63%)</title><rect x="41.2255%" y="372" width="1.6271%" height="15" fill="rgb(232,107,50)" fg:x="392386" fg:w="15487"/><text x="41.4755%" y="382.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (1,066 samples, 0.11%)</title><rect x="42.9067%" y="404" width="0.1120%" height="15" fill="rgb(253,3,0)" fg:x="408388" fg:w="1066"/><text x="43.1567%" y="414.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:840) (1,041 samples, 0.11%)</title><rect x="42.9094%" y="420" width="0.1094%" height="15" fill="rgb(212,99,53)" fg:x="408413" fg:w="1041"/><text x="43.1594%" y="430.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:940) (1,026 samples, 0.11%)</title><rect x="42.9109%" y="436" width="0.1078%" height="15" fill="rgb(249,111,54)" fg:x="408428" fg:w="1026"/><text x="43.1609%" y="446.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1067) (1,026 samples, 0.11%)</title><rect x="42.9109%" y="452" width="0.1078%" height="15" fill="rgb(249,55,30)" fg:x="408428" fg:w="1026"/><text x="43.1609%" y="462.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/construction.py:1067) (1,026 samples, 0.11%)</title><rect x="42.9109%" y="468" width="0.1078%" height="15" fill="rgb(237,47,42)" fg:x="408428" fg:w="1026"/><text x="43.1609%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (1,068 samples, 0.11%)</title><rect x="42.9067%" y="388" width="0.1122%" height="15" fill="rgb(211,20,18)" fg:x="408388" fg:w="1068"/><text x="43.1567%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (2,006 samples, 0.21%)</title><rect x="42.9047%" y="372" width="0.2108%" height="15" fill="rgb(231,203,46)" fg:x="408369" fg:w="2006"/><text x="43.1547%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,515 samples, 0.16%)</title><rect x="43.1257%" y="452" width="0.1592%" height="15" fill="rgb(237,142,3)" fg:x="410472" fg:w="1515"/><text x="43.3757%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,425 samples, 0.15%)</title><rect x="43.1351%" y="468" width="0.1497%" height="15" fill="rgb(241,107,1)" fg:x="410562" fg:w="1425"/><text x="43.3851%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,863 samples, 0.20%)</title><rect x="43.3894%" y="500" width="0.1957%" height="15" fill="rgb(229,83,13)" fg:x="412982" fg:w="1863"/><text x="43.6394%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,930 samples, 0.31%)</title><rect x="43.3101%" y="484" width="0.3078%" height="15" fill="rgb(241,91,40)" fg:x="412227" fg:w="2930"/><text x="43.5601%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (971 samples, 0.10%)</title><rect x="43.7638%" y="532" width="0.1020%" height="15" fill="rgb(225,3,45)" fg:x="416546" fg:w="971"/><text x="44.0138%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,139 samples, 0.12%)</title><rect x="43.7562%" y="516" width="0.1197%" height="15" fill="rgb(244,223,14)" fg:x="416473" fg:w="1139"/><text x="44.0062%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,612 samples, 0.17%)</title><rect x="43.7273%" y="500" width="0.1694%" height="15" fill="rgb(224,124,37)" fg:x="416198" fg:w="1612"/><text x="43.9773%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,546 samples, 0.48%)</title><rect x="43.6179%" y="484" width="0.4776%" height="15" fill="rgb(251,171,30)" fg:x="415157" fg:w="4546"/><text x="43.8679%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,782 samples, 0.82%)</title><rect x="43.2849%" y="452" width="0.8176%" height="15" fill="rgb(236,46,54)" fg:x="411987" fg:w="7782"/><text x="43.5349%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,733 samples, 0.81%)</title><rect x="43.2900%" y="468" width="0.8125%" height="15" fill="rgb(245,213,5)" fg:x="412036" fg:w="7733"/><text x="43.5400%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,683 samples, 1.23%)</title><rect x="43.1250%" y="436" width="1.2275%" height="15" fill="rgb(230,144,27)" fg:x="410465" fg:w="11683"/><text x="43.3750%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,279 samples, 0.24%)</title><rect x="44.1130%" y="452" width="0.2394%" height="15" fill="rgb(220,86,6)" fg:x="419869" fg:w="2279"/><text x="44.3630%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,507 samples, 0.16%)</title><rect x="44.1941%" y="468" width="0.1583%" height="15" fill="rgb(240,20,13)" fg:x="420641" fg:w="1507"/><text x="44.4441%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,380 samples, 0.46%)</title><rect x="44.6021%" y="596" width="0.4602%" height="15" fill="rgb(217,89,34)" fg:x="424525" fg:w="4380"/><text x="44.8521%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,251 samples, 0.24%)</title><rect x="44.8258%" y="612" width="0.2365%" height="15" fill="rgb(229,13,5)" fg:x="426654" fg:w="2251"/><text x="45.0758%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,651 samples, 0.49%)</title><rect x="44.5806%" y="580" width="0.4887%" height="15" fill="rgb(244,67,35)" fg:x="424320" fg:w="4651"/><text x="44.8306%" y="590.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (954 samples, 0.10%)</title><rect x="45.2426%" y="660" width="0.1002%" height="15" fill="rgb(221,40,2)" fg:x="430621" fg:w="954"/><text x="45.4926%" y="670.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,056 samples, 0.11%)</title><rect x="45.2367%" y="644" width="0.1109%" height="15" fill="rgb(237,157,21)" fg:x="430565" fg:w="1056"/><text x="45.4867%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,417 samples, 0.15%)</title><rect x="45.2302%" y="628" width="0.1489%" height="15" fill="rgb(222,94,11)" fg:x="430503" fg:w="1417"/><text x="45.4802%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,449 samples, 0.26%)</title><rect x="45.1219%" y="612" width="0.2573%" height="15" fill="rgb(249,113,6)" fg:x="429472" fg:w="2449"/><text x="45.3719%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,813 samples, 0.30%)</title><rect x="45.1025%" y="596" width="0.2955%" height="15" fill="rgb(238,137,36)" fg:x="429287" fg:w="2813"/><text x="45.3525%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,377 samples, 0.46%)</title><rect x="45.0742%" y="580" width="0.4599%" height="15" fill="rgb(210,102,26)" fg:x="429018" fg:w="4377"/><text x="45.3242%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,243 samples, 0.13%)</title><rect x="45.4035%" y="596" width="0.1306%" height="15" fill="rgb(218,30,30)" fg:x="432152" fg:w="1243"/><text x="45.6535%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,484 samples, 1.00%)</title><rect x="44.5417%" y="564" width="0.9964%" height="15" fill="rgb(214,67,26)" fg:x="423950" fg:w="9484"/><text x="44.7917%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,341 samples, 1.09%)</title><rect x="44.4525%" y="548" width="1.0865%" height="15" fill="rgb(251,9,53)" fg:x="423101" fg:w="10341"/><text x="44.7025%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,397 samples, 1.09%)</title><rect x="44.4473%" y="532" width="1.0923%" height="15" fill="rgb(228,204,25)" fg:x="423051" fg:w="10397"/><text x="44.6973%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,867 samples, 1.14%)</title><rect x="44.4306%" y="516" width="1.1417%" height="15" fill="rgb(207,153,8)" fg:x="422892" fg:w="10867"/><text x="44.6806%" y="526.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,695 samples, 1.23%)</title><rect x="44.3527%" y="468" width="1.2287%" height="15" fill="rgb(242,9,16)" fg:x="422151" fg:w="11695"/><text x="44.6027%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,694 samples, 1.23%)</title><rect x="44.3528%" y="484" width="1.2286%" height="15" fill="rgb(217,211,10)" fg:x="422152" fg:w="11694"/><text x="44.6028%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,599 samples, 1.22%)</title><rect x="44.3628%" y="500" width="1.2186%" height="15" fill="rgb(219,228,52)" fg:x="422247" fg:w="11599"/><text x="44.6128%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,456 samples, 2.46%)</title><rect x="43.1174%" y="388" width="2.4644%" height="15" fill="rgb(231,92,29)" fg:x="410393" fg:w="23456"/><text x="43.3674%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,449 samples, 2.46%)</title><rect x="43.1181%" y="404" width="2.4636%" height="15" fill="rgb(232,8,23)" fg:x="410400" fg:w="23449"/><text x="43.3681%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,448 samples, 2.46%)</title><rect x="43.1182%" y="420" width="2.4635%" height="15" fill="rgb(216,211,34)" fg:x="410401" fg:w="23448"/><text x="43.3682%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,701 samples, 1.23%)</title><rect x="44.3524%" y="436" width="1.2293%" height="15" fill="rgb(236,151,0)" fg:x="422148" fg:w="11701"/><text x="44.6024%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,701 samples, 1.23%)</title><rect x="44.3524%" y="452" width="1.2293%" height="15" fill="rgb(209,168,3)" fg:x="422148" fg:w="11701"/><text x="44.6024%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,488 samples, 2.47%)</title><rect x="43.1155%" y="372" width="2.4677%" height="15" fill="rgb(208,129,28)" fg:x="410375" fg:w="23488"/><text x="43.3655%" y="382.50">__..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,512 samples, 2.68%)</title><rect x="42.9030%" y="356" width="2.6804%" height="15" fill="rgb(229,78,22)" fg:x="408352" fg:w="25512"/><text x="43.1530%" y="366.50">de..</text></g><g><title>simulate_single (simulation.py:45) (26,112 samples, 2.74%)</title><rect x="42.8526%" y="340" width="2.7434%" height="15" fill="rgb(228,187,13)" fg:x="407873" fg:w="26112"/><text x="43.1026%" y="350.50">si..</text></g><g><title>process 30255:&quot;python simulation.py -p sim0.csv&quot; (44,221 samples, 4.65%)</title><rect x="41.1221%" y="84" width="4.6460%" height="15" fill="rgb(240,119,24)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="100" width="4.6460%" height="15" fill="rgb(209,194,42)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="116" width="4.6460%" height="15" fill="rgb(247,200,46)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="132" width="4.6460%" height="15" fill="rgb(218,76,16)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="148" width="4.6460%" height="15" fill="rgb(225,21,48)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="164" width="4.6460%" height="15" fill="rgb(239,223,50)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="180" width="4.6460%" height="15" fill="rgb(244,45,21)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="196" width="4.6460%" height="15" fill="rgb(232,33,43)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="212" width="4.6460%" height="15" fill="rgb(209,8,3)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="228" width="4.6460%" height="15" fill="rgb(214,25,53)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="244" width="4.6460%" height="15" fill="rgb(254,186,54)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="260" width="4.6460%" height="15" fill="rgb(208,174,49)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="276" width="4.6460%" height="15" fill="rgb(233,191,51)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="292" width="4.6460%" height="15" fill="rgb(222,134,10)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="302.50">run (..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="308" width="4.6460%" height="15" fill="rgb(230,226,20)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,221 samples, 4.65%)</title><rect x="41.1221%" y="324" width="4.6460%" height="15" fill="rgb(251,111,25)" fg:x="391402" fg:w="44221"/><text x="41.3721%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,239 samples, 0.13%)</title><rect x="45.6380%" y="340" width="0.1302%" height="15" fill="rgb(224,40,46)" fg:x="434384" fg:w="1239"/><text x="45.8880%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,239 samples, 0.13%)</title><rect x="45.6380%" y="356" width="0.1302%" height="15" fill="rgb(236,108,47)" fg:x="434384" fg:w="1239"/><text x="45.8880%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,239 samples, 0.13%)</title><rect x="45.6380%" y="372" width="0.1302%" height="15" fill="rgb(234,93,0)" fg:x="434384" fg:w="1239"/><text x="45.8880%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,239 samples, 0.13%)</title><rect x="45.6380%" y="388" width="0.1302%" height="15" fill="rgb(224,213,32)" fg:x="434384" fg:w="1239"/><text x="45.8880%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,239 samples, 0.13%)</title><rect x="45.6380%" y="404" width="0.1302%" height="15" fill="rgb(251,11,48)" fg:x="434384" fg:w="1239"/><text x="45.8880%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,236 samples, 0.13%)</title><rect x="45.6383%" y="420" width="0.1299%" height="15" fill="rgb(236,173,5)" fg:x="434387" fg:w="1236"/><text x="45.8883%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,098 samples, 0.12%)</title><rect x="45.6528%" y="436" width="0.1154%" height="15" fill="rgb(230,95,12)" fg:x="434525" fg:w="1098"/><text x="45.9028%" y="446.50"></text></g><g><title>extension (tdt.py:34) (1,027 samples, 0.11%)</title><rect x="46.7262%" y="388" width="0.1079%" height="15" fill="rgb(232,209,1)" fg:x="444742" fg:w="1027"/><text x="46.9762%" y="398.50"></text></g><g><title>extension (tdt.py:36) (2,377 samples, 0.25%)</title><rect x="46.8437%" y="388" width="0.2497%" height="15" fill="rgb(232,6,1)" fg:x="445860" fg:w="2377"/><text x="47.0937%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,306 samples, 0.14%)</title><rect x="46.9562%" y="404" width="0.1372%" height="15" fill="rgb(210,224,50)" fg:x="446931" fg:w="1306"/><text x="47.2062%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,061 samples, 0.32%)</title><rect x="47.1036%" y="388" width="0.3216%" height="15" fill="rgb(228,127,35)" fg:x="448334" fg:w="3061"/><text x="47.3536%" y="398.50"></text></g><g><title>synthesis (tdt.py:67) (15,779 samples, 1.66%)</title><rect x="45.8688%" y="356" width="1.6578%" height="15" fill="rgb(245,102,45)" fg:x="436581" fg:w="15779"/><text x="46.1188%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,657 samples, 1.64%)</title><rect x="45.8816%" y="372" width="1.6450%" height="15" fill="rgb(214,1,49)" fg:x="436703" fg:w="15657"/><text x="46.1316%" y="382.50"></text></g><g><title>simulate_single (simulation.py:43) (15,780 samples, 1.66%)</title><rect x="45.8688%" y="340" width="1.6579%" height="15" fill="rgb(226,163,40)" fg:x="436581" fg:w="15780"/><text x="46.1188%" y="350.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (964 samples, 0.10%)</title><rect x="47.5767%" y="404" width="0.1013%" height="15" fill="rgb(239,212,28)" fg:x="452837" fg:w="964"/><text x="47.8267%" y="414.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (965 samples, 0.10%)</title><rect x="47.5767%" y="388" width="0.1014%" height="15" fill="rgb(220,20,13)" fg:x="452837" fg:w="965"/><text x="47.8267%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,932 samples, 0.20%)</title><rect x="47.5752%" y="372" width="0.2030%" height="15" fill="rgb(210,164,35)" fg:x="452823" fg:w="1932"/><text x="47.8252%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,561 samples, 0.16%)</title><rect x="47.7857%" y="452" width="0.1640%" height="15" fill="rgb(248,109,41)" fg:x="454826" fg:w="1561"/><text x="48.0357%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,446 samples, 0.15%)</title><rect x="47.7978%" y="468" width="0.1519%" height="15" fill="rgb(238,23,50)" fg:x="454941" fg:w="1446"/><text x="48.0478%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,855 samples, 0.19%)</title><rect x="48.0408%" y="500" width="0.1949%" height="15" fill="rgb(211,48,49)" fg:x="457254" fg:w="1855"/><text x="48.2908%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,841 samples, 0.30%)</title><rect x="47.9740%" y="484" width="0.2985%" height="15" fill="rgb(223,36,21)" fg:x="456618" fg:w="2841"/><text x="48.2240%" y="494.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,058 samples, 0.11%)</title><rect x="48.4091%" y="516" width="0.1112%" height="15" fill="rgb(207,123,46)" fg:x="460760" fg:w="1058"/><text x="48.6591%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,538 samples, 0.16%)</title><rect x="48.3789%" y="500" width="0.1616%" height="15" fill="rgb(240,218,32)" fg:x="460472" fg:w="1538"/><text x="48.6289%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,433 samples, 0.47%)</title><rect x="48.2724%" y="484" width="0.4657%" height="15" fill="rgb(252,5,43)" fg:x="459459" fg:w="4433"/><text x="48.5224%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,562 samples, 0.79%)</title><rect x="47.9497%" y="452" width="0.7945%" height="15" fill="rgb(252,84,19)" fg:x="456387" fg:w="7562"/><text x="48.1997%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,521 samples, 0.79%)</title><rect x="47.9540%" y="468" width="0.7902%" height="15" fill="rgb(243,152,39)" fg:x="456428" fg:w="7521"/><text x="48.2040%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,397 samples, 1.20%)</title><rect x="47.7845%" y="436" width="1.1974%" height="15" fill="rgb(234,160,15)" fg:x="454815" fg:w="11397"/><text x="48.0345%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,168 samples, 0.23%)</title><rect x="48.7542%" y="452" width="0.2278%" height="15" fill="rgb(237,34,20)" fg:x="464044" fg:w="2168"/><text x="49.0042%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,357 samples, 0.14%)</title><rect x="48.8394%" y="468" width="0.1426%" height="15" fill="rgb(229,97,13)" fg:x="464855" fg:w="1357"/><text x="49.0894%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,568 samples, 0.48%)</title><rect x="49.2217%" y="596" width="0.4799%" height="15" fill="rgb(234,71,50)" fg:x="468494" fg:w="4568"/><text x="49.4717%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,345 samples, 0.25%)</title><rect x="49.4552%" y="612" width="0.2464%" height="15" fill="rgb(253,155,4)" fg:x="470717" fg:w="2345"/><text x="49.7052%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,844 samples, 0.51%)</title><rect x="49.1991%" y="580" width="0.5089%" height="15" fill="rgb(222,185,37)" fg:x="468279" fg:w="4844"/><text x="49.4491%" y="590.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (958 samples, 0.10%)</title><rect x="49.8794%" y="660" width="0.1007%" height="15" fill="rgb(251,177,13)" fg:x="474754" fg:w="958"/><text x="50.1294%" y="670.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,063 samples, 0.11%)</title><rect x="49.8739%" y="644" width="0.1117%" height="15" fill="rgb(250,179,40)" fg:x="474702" fg:w="1063"/><text x="50.1239%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,395 samples, 0.15%)</title><rect x="49.8692%" y="628" width="0.1466%" height="15" fill="rgb(242,44,2)" fg:x="474657" fg:w="1395"/><text x="50.1192%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,439 samples, 0.26%)</title><rect x="49.7597%" y="612" width="0.2563%" height="15" fill="rgb(216,177,13)" fg:x="473615" fg:w="2439"/><text x="50.0097%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,788 samples, 0.29%)</title><rect x="49.7411%" y="596" width="0.2929%" height="15" fill="rgb(216,106,43)" fg:x="473438" fg:w="2788"/><text x="49.9911%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,411 samples, 0.46%)</title><rect x="49.7139%" y="580" width="0.4634%" height="15" fill="rgb(216,183,2)" fg:x="473179" fg:w="4411"/><text x="49.9639%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,306 samples, 0.14%)</title><rect x="50.0401%" y="596" width="0.1372%" height="15" fill="rgb(249,75,3)" fg:x="476284" fg:w="1306"/><text x="50.2901%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,743 samples, 1.02%)</title><rect x="49.1554%" y="564" width="1.0236%" height="15" fill="rgb(219,67,39)" fg:x="467863" fg:w="9743"/><text x="49.4054%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,469 samples, 1.10%)</title><rect x="49.0796%" y="548" width="1.0999%" height="15" fill="rgb(253,228,2)" fg:x="467142" fg:w="10469"/><text x="49.3296%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,532 samples, 1.11%)</title><rect x="49.0732%" y="532" width="1.1065%" height="15" fill="rgb(235,138,27)" fg:x="467081" fg:w="10532"/><text x="49.3232%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (11,000 samples, 1.16%)</title><rect x="49.0559%" y="516" width="1.1557%" height="15" fill="rgb(236,97,51)" fg:x="466916" fg:w="11000"/><text x="49.3059%" y="526.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,222 samples, 2.44%)</title><rect x="47.7792%" y="388" width="2.4398%" height="15" fill="rgb(240,80,30)" fg:x="454764" fg:w="23222"/><text x="48.0292%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,220 samples, 2.44%)</title><rect x="47.7794%" y="404" width="2.4396%" height="15" fill="rgb(230,178,19)" fg:x="454766" fg:w="23220"/><text x="48.0294%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,219 samples, 2.44%)</title><rect x="47.7795%" y="420" width="2.4395%" height="15" fill="rgb(210,190,27)" fg:x="454767" fg:w="23219"/><text x="48.0295%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,774 samples, 1.24%)</title><rect x="48.9819%" y="436" width="1.2370%" height="15" fill="rgb(222,107,31)" fg:x="466212" fg:w="11774"/><text x="49.2319%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,772 samples, 1.24%)</title><rect x="48.9821%" y="452" width="1.2368%" height="15" fill="rgb(216,127,34)" fg:x="466214" fg:w="11772"/><text x="49.2321%" y="462.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,772 samples, 1.24%)</title><rect x="48.9821%" y="468" width="1.2368%" height="15" fill="rgb(234,116,52)" fg:x="466214" fg:w="11772"/><text x="49.2321%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,772 samples, 1.24%)</title><rect x="48.9821%" y="484" width="1.2368%" height="15" fill="rgb(222,124,15)" fg:x="466214" fg:w="11772"/><text x="49.2321%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,664 samples, 1.23%)</title><rect x="48.9935%" y="500" width="1.2255%" height="15" fill="rgb(231,179,28)" fg:x="466322" fg:w="11664"/><text x="49.2435%" y="510.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,188 samples, 2.65%)</title><rect x="47.5738%" y="356" width="2.6463%" height="15" fill="rgb(226,93,45)" fg:x="452809" fg:w="25188"/><text x="47.8238%" y="366.50">de..</text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,242 samples, 2.44%)</title><rect x="47.7782%" y="372" width="2.4419%" height="15" fill="rgb(215,8,51)" fg:x="454755" fg:w="23242"/><text x="48.0282%" y="382.50">__..</text></g><g><title>simulate_single (simulation.py:45) (25,767 samples, 2.71%)</title><rect x="47.5267%" y="340" width="2.7072%" height="15" fill="rgb(223,106,5)" fg:x="452361" fg:w="25767"/><text x="47.7767%" y="350.50">si..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,255 samples, 4.65%)</title><rect x="45.7681%" y="308" width="4.6496%" height="15" fill="rgb(250,191,5)" fg:x="435623" fg:w="44255"/><text x="46.0181%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,255 samples, 4.65%)</title><rect x="45.7681%" y="324" width="4.6496%" height="15" fill="rgb(242,132,44)" fg:x="435623" fg:w="44255"/><text x="46.0181%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,358 samples, 0.14%)</title><rect x="50.2751%" y="340" width="0.1427%" height="15" fill="rgb(251,152,29)" fg:x="478520" fg:w="1358"/><text x="50.5251%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,358 samples, 0.14%)</title><rect x="50.2751%" y="356" width="0.1427%" height="15" fill="rgb(218,179,5)" fg:x="478520" fg:w="1358"/><text x="50.5251%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,358 samples, 0.14%)</title><rect x="50.2751%" y="372" width="0.1427%" height="15" fill="rgb(227,67,19)" fg:x="478520" fg:w="1358"/><text x="50.5251%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,358 samples, 0.14%)</title><rect x="50.2751%" y="388" width="0.1427%" height="15" fill="rgb(233,119,31)" fg:x="478520" fg:w="1358"/><text x="50.5251%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,357 samples, 0.14%)</title><rect x="50.2752%" y="404" width="0.1426%" height="15" fill="rgb(241,120,22)" fg:x="478521" fg:w="1357"/><text x="50.5252%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,354 samples, 0.14%)</title><rect x="50.2755%" y="420" width="0.1423%" height="15" fill="rgb(224,102,30)" fg:x="478524" fg:w="1354"/><text x="50.5255%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,189 samples, 0.12%)</title><rect x="50.2928%" y="436" width="0.1249%" height="15" fill="rgb(210,164,37)" fg:x="478689" fg:w="1189"/><text x="50.5428%" y="446.50"></text></g><g><title>process 30256:&quot;python simulation.py -p sim0.csv&quot; (44,256 samples, 4.65%)</title><rect x="45.7681%" y="84" width="4.6497%" height="15" fill="rgb(226,191,16)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="100" width="4.6497%" height="15" fill="rgb(214,40,45)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="116" width="4.6497%" height="15" fill="rgb(244,29,26)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="132" width="4.6497%" height="15" fill="rgb(216,16,5)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="148" width="4.6497%" height="15" fill="rgb(249,76,35)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="164" width="4.6497%" height="15" fill="rgb(207,11,44)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="180" width="4.6497%" height="15" fill="rgb(228,190,49)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="196" width="4.6497%" height="15" fill="rgb(214,173,12)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="212" width="4.6497%" height="15" fill="rgb(218,26,35)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="228" width="4.6497%" height="15" fill="rgb(220,200,19)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="244" width="4.6497%" height="15" fill="rgb(239,95,49)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="260" width="4.6497%" height="15" fill="rgb(235,85,53)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="276" width="4.6497%" height="15" fill="rgb(233,133,31)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,256 samples, 4.65%)</title><rect x="45.7681%" y="292" width="4.6497%" height="15" fill="rgb(218,25,20)" fg:x="435623" fg:w="44256"/><text x="46.0181%" y="302.50">run (..</text></g><g><title>extension (tdt.py:36) (2,042 samples, 0.21%)</title><rect x="51.3295%" y="388" width="0.2145%" height="15" fill="rgb(252,210,38)" fg:x="488556" fg:w="2042"/><text x="51.5795%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,083 samples, 0.11%)</title><rect x="51.4302%" y="404" width="0.1138%" height="15" fill="rgb(242,134,21)" fg:x="489515" fg:w="1083"/><text x="51.6802%" y="414.50"></text></g><g><title>extension (tdt.py:41) (2,663 samples, 0.28%)</title><rect x="51.5556%" y="388" width="0.2798%" height="15" fill="rgb(213,28,48)" fg:x="490708" fg:w="2663"/><text x="51.8056%" y="398.50"></text></g><g><title>__synthesis (tdt.py:59) (13,201 samples, 1.39%)</title><rect x="50.5274%" y="372" width="1.3869%" height="15" fill="rgb(250,196,2)" fg:x="480922" fg:w="13201"/><text x="50.7774%" y="382.50"></text></g><g><title>simulate_single (simulation.py:43) (13,311 samples, 1.40%)</title><rect x="50.5160%" y="340" width="1.3985%" height="15" fill="rgb(227,5,17)" fg:x="480813" fg:w="13311"/><text x="50.7660%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (13,310 samples, 1.40%)</title><rect x="50.5161%" y="356" width="1.3984%" height="15" fill="rgb(221,226,24)" fg:x="480814" fg:w="13310"/><text x="50.7661%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,722 samples, 0.18%)</title><rect x="51.9578%" y="372" width="0.1809%" height="15" fill="rgb(211,5,48)" fg:x="494536" fg:w="1722"/><text x="52.2078%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,390 samples, 0.15%)</title><rect x="52.1461%" y="452" width="0.1460%" height="15" fill="rgb(219,150,6)" fg:x="496329" fg:w="1390"/><text x="52.3961%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,296 samples, 0.14%)</title><rect x="52.1560%" y="468" width="0.1362%" height="15" fill="rgb(251,46,16)" fg:x="496423" fg:w="1296"/><text x="52.4060%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,582 samples, 0.17%)</title><rect x="52.3679%" y="500" width="0.1662%" height="15" fill="rgb(220,204,40)" fg:x="498440" fg:w="1582"/><text x="52.6179%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,425 samples, 0.25%)</title><rect x="52.3102%" y="484" width="0.2548%" height="15" fill="rgb(211,85,2)" fg:x="497891" fg:w="2425"/><text x="52.5602%" y="494.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (987 samples, 0.10%)</title><rect x="52.6868%" y="516" width="0.1037%" height="15" fill="rgb(229,17,7)" fg:x="501475" fg:w="987"/><text x="52.9368%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,420 samples, 0.15%)</title><rect x="52.6604%" y="500" width="0.1492%" height="15" fill="rgb(239,72,28)" fg:x="501224" fg:w="1420"/><text x="52.9104%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (3,979 samples, 0.42%)</title><rect x="52.5650%" y="484" width="0.4180%" height="15" fill="rgb(230,47,54)" fg:x="500316" fg:w="3979"/><text x="52.8150%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (6,623 samples, 0.70%)</title><rect x="52.2922%" y="452" width="0.6958%" height="15" fill="rgb(214,50,8)" fg:x="497719" fg:w="6623"/><text x="52.5422%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (6,593 samples, 0.69%)</title><rect x="52.2953%" y="468" width="0.6927%" height="15" fill="rgb(216,198,43)" fg:x="497749" fg:w="6593"/><text x="52.5453%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (10,066 samples, 1.06%)</title><rect x="52.1457%" y="436" width="1.0576%" height="15" fill="rgb(234,20,35)" fg:x="496325" fg:w="10066"/><text x="52.3957%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,952 samples, 0.21%)</title><rect x="52.9982%" y="452" width="0.2051%" height="15" fill="rgb(254,45,19)" fg:x="504439" fg:w="1952"/><text x="53.2482%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,269 samples, 0.13%)</title><rect x="53.0700%" y="468" width="0.1333%" height="15" fill="rgb(219,14,44)" fg:x="505122" fg:w="1269"/><text x="53.3200%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (3,993 samples, 0.42%)</title><rect x="53.4141%" y="596" width="0.4195%" height="15" fill="rgb(217,220,26)" fg:x="508398" fg:w="3993"/><text x="53.6641%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,067 samples, 0.22%)</title><rect x="53.6165%" y="612" width="0.2172%" height="15" fill="rgb(213,158,28)" fg:x="510324" fg:w="2067"/><text x="53.8665%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,251 samples, 0.45%)</title><rect x="53.3928%" y="580" width="0.4466%" height="15" fill="rgb(252,51,52)" fg:x="508195" fg:w="4251"/><text x="53.6428%" y="590.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (978 samples, 0.10%)</title><rect x="53.9841%" y="644" width="0.1028%" height="15" fill="rgb(246,89,16)" fg:x="513823" fg:w="978"/><text x="54.2341%" y="654.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,179 samples, 0.23%)</title><rect x="53.8839%" y="612" width="0.2289%" height="15" fill="rgb(216,158,49)" fg:x="512869" fg:w="2179"/><text x="54.1339%" y="622.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,280 samples, 0.13%)</title><rect x="53.9783%" y="628" width="0.1345%" height="15" fill="rgb(236,107,19)" fg:x="513768" fg:w="1280"/><text x="54.2283%" y="638.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,475 samples, 0.26%)</title><rect x="53.8681%" y="596" width="0.2600%" height="15" fill="rgb(228,185,30)" fg:x="512719" fg:w="2475"/><text x="54.1181%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (3,895 samples, 0.41%)</title><rect x="53.8446%" y="580" width="0.4092%" height="15" fill="rgb(246,134,8)" fg:x="512495" fg:w="3895"/><text x="54.0946%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,150 samples, 0.12%)</title><rect x="54.1330%" y="596" width="0.1208%" height="15" fill="rgb(214,143,50)" fg:x="515240" fg:w="1150"/><text x="54.3830%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (8,560 samples, 0.90%)</title><rect x="53.3560%" y="564" width="0.8993%" height="15" fill="rgb(228,75,8)" fg:x="507845" fg:w="8560"/><text x="53.6060%" y="574.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (9,202 samples, 0.97%)</title><rect x="53.2890%" y="532" width="0.9668%" height="15" fill="rgb(207,175,4)" fg:x="507207" fg:w="9202"/><text x="53.5390%" y="542.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (9,157 samples, 0.96%)</title><rect x="53.2937%" y="548" width="0.9621%" height="15" fill="rgb(205,108,24)" fg:x="507252" fg:w="9157"/><text x="53.5437%" y="558.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (9,645 samples, 1.01%)</title><rect x="53.2738%" y="516" width="1.0133%" height="15" fill="rgb(244,120,49)" fg:x="507062" fg:w="9645"/><text x="53.5238%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (10,395 samples, 1.09%)</title><rect x="53.2036%" y="484" width="1.0921%" height="15" fill="rgb(223,47,38)" fg:x="506394" fg:w="10395"/><text x="53.4536%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (10,303 samples, 1.08%)</title><rect x="53.2133%" y="500" width="1.0825%" height="15" fill="rgb(229,179,11)" fg:x="506486" fg:w="10303"/><text x="53.4633%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (10,400 samples, 1.09%)</title><rect x="53.2035%" y="468" width="1.0927%" height="15" fill="rgb(231,122,1)" fg:x="506393" fg:w="10400"/><text x="53.4535%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (20,523 samples, 2.16%)</title><rect x="52.1405%" y="388" width="2.1562%" height="15" fill="rgb(245,119,9)" fg:x="496275" fg:w="20523"/><text x="52.3905%" y="398.50">m..</text></g><g><title>apply (pandas/core/frame.py:9423) (20,518 samples, 2.16%)</title><rect x="52.1410%" y="404" width="2.1557%" height="15" fill="rgb(241,163,25)" fg:x="496280" fg:w="20518"/><text x="52.3910%" y="414.50">a..</text></g><g><title>apply (pandas/core/apply.py:678) (20,516 samples, 2.16%)</title><rect x="52.1412%" y="420" width="2.1555%" height="15" fill="rgb(217,214,3)" fg:x="496282" fg:w="20516"/><text x="52.3912%" y="430.50">a..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (10,407 samples, 1.09%)</title><rect x="53.2033%" y="436" width="1.0934%" height="15" fill="rgb(240,86,28)" fg:x="506391" fg:w="10407"/><text x="53.4533%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (10,406 samples, 1.09%)</title><rect x="53.2034%" y="452" width="1.0933%" height="15" fill="rgb(215,47,9)" fg:x="506392" fg:w="10406"/><text x="53.4534%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (20,548 samples, 2.16%)</title><rect x="52.1387%" y="372" width="2.1588%" height="15" fill="rgb(252,25,45)" fg:x="496258" fg:w="20548"/><text x="52.3887%" y="382.50">_..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (22,295 samples, 2.34%)</title><rect x="51.9552%" y="356" width="2.3424%" height="15" fill="rgb(251,164,9)" fg:x="494512" fg:w="22295"/><text x="52.2052%" y="366.50">d..</text></g><g><title>simulate_single (simulation.py:45) (22,774 samples, 2.39%)</title><rect x="51.9145%" y="340" width="2.3927%" height="15" fill="rgb(233,194,0)" fg:x="494124" fg:w="22774"/><text x="52.1645%" y="350.50">si..</text></g><g><title>process 30257:&quot;python simulation.py -p sim0.csv&quot; (38,901 samples, 4.09%)</title><rect x="50.4178%" y="84" width="4.0871%" height="15" fill="rgb(249,111,24)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="94.50">proc..</text></g><g><title>&lt;module&gt; (simulation.py:121) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="100" width="4.0871%" height="15" fill="rgb(250,223,3)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="110.50">&lt;mod..</text></g><g><title>simtest (simulation.py:94) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="116" width="4.0871%" height="15" fill="rgb(236,178,37)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="126.50">simt..</text></g><g><title>simulate (simulation.py:59) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="132" width="4.0871%" height="15" fill="rgb(241,158,50)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="142.50">simu..</text></g><g><title>Pool (multiprocessing/context.py:119) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="148" width="4.0871%" height="15" fill="rgb(213,121,41)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="158.50">Pool..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="164" width="4.0871%" height="15" fill="rgb(240,92,3)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="174.50">__in..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="180" width="4.0871%" height="15" fill="rgb(205,123,3)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="190.50">_rep..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="196" width="4.0871%" height="15" fill="rgb(205,97,47)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="206.50">_rep..</text></g><g><title>start (multiprocessing/process.py:121) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="212" width="4.0871%" height="15" fill="rgb(247,152,14)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="222.50">star..</text></g><g><title>_Popen (multiprocessing/context.py:277) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="228" width="4.0871%" height="15" fill="rgb(248,195,53)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="238.50">_Pop..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="244" width="4.0871%" height="15" fill="rgb(226,201,16)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="254.50">__in..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="260" width="4.0871%" height="15" fill="rgb(205,98,0)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="270.50">_lau..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="276" width="4.0871%" height="15" fill="rgb(214,191,48)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="286.50">_boo..</text></g><g><title>run (multiprocessing/process.py:108) (38,901 samples, 4.09%)</title><rect x="50.4178%" y="292" width="4.0871%" height="15" fill="rgb(237,112,39)" fg:x="479879" fg:w="38901"/><text x="50.6678%" y="302.50">run ..</text></g><g><title>worker (multiprocessing/pool.py:125) (38,898 samples, 4.09%)</title><rect x="50.4182%" y="308" width="4.0868%" height="15" fill="rgb(247,203,27)" fg:x="479882" fg:w="38898"/><text x="50.6682%" y="318.50">work..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (38,898 samples, 4.09%)</title><rect x="50.4182%" y="324" width="4.0868%" height="15" fill="rgb(235,124,28)" fg:x="479882" fg:w="38898"/><text x="50.6682%" y="334.50">maps..</text></g><g><title>simulate_single (simulation.py:52) (1,425 samples, 0.15%)</title><rect x="54.3552%" y="340" width="0.1497%" height="15" fill="rgb(208,207,46)" fg:x="517355" fg:w="1425"/><text x="54.6052%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,425 samples, 0.15%)</title><rect x="54.3552%" y="356" width="0.1497%" height="15" fill="rgb(234,176,4)" fg:x="517355" fg:w="1425"/><text x="54.6052%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,425 samples, 0.15%)</title><rect x="54.3552%" y="372" width="0.1497%" height="15" fill="rgb(230,133,28)" fg:x="517355" fg:w="1425"/><text x="54.6052%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,425 samples, 0.15%)</title><rect x="54.3552%" y="388" width="0.1497%" height="15" fill="rgb(211,137,40)" fg:x="517355" fg:w="1425"/><text x="54.6052%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,424 samples, 0.15%)</title><rect x="54.3553%" y="404" width="0.1496%" height="15" fill="rgb(254,35,13)" fg:x="517356" fg:w="1424"/><text x="54.6053%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,424 samples, 0.15%)</title><rect x="54.3553%" y="420" width="0.1496%" height="15" fill="rgb(225,49,51)" fg:x="517356" fg:w="1424"/><text x="54.6053%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,274 samples, 0.13%)</title><rect x="54.3711%" y="436" width="0.1339%" height="15" fill="rgb(251,10,15)" fg:x="517506" fg:w="1274"/><text x="54.6211%" y="446.50"></text></g><g><title>extension (tdt.py:34) (994 samples, 0.10%)</title><rect x="55.4768%" y="388" width="0.1044%" height="15" fill="rgb(228,207,15)" fg:x="528030" fg:w="994"/><text x="55.7268%" y="398.50"></text></g><g><title>extension (tdt.py:36) (2,403 samples, 0.25%)</title><rect x="55.5922%" y="388" width="0.2525%" height="15" fill="rgb(241,99,19)" fg:x="529129" fg:w="2403"/><text x="55.8422%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,248 samples, 0.13%)</title><rect x="55.7136%" y="404" width="0.1311%" height="15" fill="rgb(207,104,49)" fg:x="530284" fg:w="1248"/><text x="55.9636%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,157 samples, 0.33%)</title><rect x="55.8567%" y="388" width="0.3317%" height="15" fill="rgb(234,99,18)" fg:x="531646" fg:w="3157"/><text x="56.1067%" y="398.50"></text></g><g><title>__synthesis (tdt.py:59) (15,846 samples, 1.66%)</title><rect x="54.6179%" y="372" width="1.6648%" height="15" fill="rgb(213,191,49)" fg:x="519855" fg:w="15846"/><text x="54.8679%" y="382.50"></text></g><g><title>synthesis (tdt.py:67) (15,962 samples, 1.68%)</title><rect x="54.6058%" y="356" width="1.6770%" height="15" fill="rgb(210,226,19)" fg:x="519740" fg:w="15962"/><text x="54.8558%" y="366.50"></text></g><g><title>simulate_single (simulation.py:43) (15,964 samples, 1.68%)</title><rect x="54.6057%" y="340" width="1.6772%" height="15" fill="rgb(229,97,18)" fg:x="519739" fg:w="15964"/><text x="54.8557%" y="350.50"></text></g><g><title>__init__ (pandas/core/frame.py:790) (970 samples, 0.10%)</title><rect x="56.4323%" y="388" width="0.1019%" height="15" fill="rgb(211,167,15)" fg:x="537125" fg:w="970"/><text x="56.6823%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,915 samples, 0.20%)</title><rect x="56.3332%" y="372" width="0.2012%" height="15" fill="rgb(210,169,34)" fg:x="536182" fg:w="1915"/><text x="56.5832%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,537 samples, 0.16%)</title><rect x="56.5421%" y="452" width="0.1615%" height="15" fill="rgb(241,121,31)" fg:x="538170" fg:w="1537"/><text x="56.7921%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,435 samples, 0.15%)</title><rect x="56.5528%" y="468" width="0.1508%" height="15" fill="rgb(232,40,11)" fg:x="538272" fg:w="1435"/><text x="56.8028%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,871 samples, 0.20%)</title><rect x="56.7946%" y="500" width="0.1966%" height="15" fill="rgb(205,86,26)" fg:x="540573" fg:w="1871"/><text x="57.0446%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,836 samples, 0.30%)</title><rect x="56.7291%" y="484" width="0.2980%" height="15" fill="rgb(231,126,28)" fg:x="539950" fg:w="2836"/><text x="56.9791%" y="494.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,097 samples, 0.12%)</title><rect x="57.1643%" y="516" width="0.1153%" height="15" fill="rgb(219,221,18)" fg:x="544092" fg:w="1097"/><text x="57.4143%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,570 samples, 0.16%)</title><rect x="57.1337%" y="500" width="0.1649%" height="15" fill="rgb(211,40,0)" fg:x="543801" fg:w="1570"/><text x="57.3837%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,389 samples, 0.46%)</title><rect x="57.0271%" y="484" width="0.4611%" height="15" fill="rgb(239,85,43)" fg:x="542786" fg:w="4389"/><text x="57.2771%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,526 samples, 0.79%)</title><rect x="56.7036%" y="452" width="0.7907%" height="15" fill="rgb(231,55,21)" fg:x="539707" fg:w="7526"/><text x="56.9536%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,498 samples, 0.79%)</title><rect x="56.7065%" y="468" width="0.7878%" height="15" fill="rgb(225,184,43)" fg:x="539735" fg:w="7498"/><text x="56.9565%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,404 samples, 1.20%)</title><rect x="56.5414%" y="436" width="1.1981%" height="15" fill="rgb(251,158,41)" fg:x="538163" fg:w="11404"/><text x="56.7914%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,228 samples, 0.23%)</title><rect x="57.5054%" y="452" width="0.2341%" height="15" fill="rgb(234,159,37)" fg:x="547339" fg:w="2228"/><text x="57.7554%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,396 samples, 0.15%)</title><rect x="57.5928%" y="468" width="0.1467%" height="15" fill="rgb(216,204,22)" fg:x="548171" fg:w="1396"/><text x="57.8428%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,425 samples, 0.46%)</title><rect x="57.9753%" y="596" width="0.4649%" height="15" fill="rgb(214,17,3)" fg:x="551811" fg:w="4425"/><text x="58.2253%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,228 samples, 0.23%)</title><rect x="58.2061%" y="612" width="0.2341%" height="15" fill="rgb(212,111,17)" fg:x="554008" fg:w="2228"/><text x="58.4561%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,722 samples, 0.50%)</title><rect x="57.9502%" y="580" width="0.4961%" height="15" fill="rgb(221,157,24)" fg:x="551572" fg:w="4722"/><text x="58.2002%" y="590.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (961 samples, 0.10%)</title><rect x="58.6129%" y="660" width="0.1010%" height="15" fill="rgb(252,16,13)" fg:x="557880" fg:w="961"/><text x="58.8629%" y="670.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,064 samples, 0.11%)</title><rect x="58.6077%" y="644" width="0.1118%" height="15" fill="rgb(221,62,2)" fg:x="557830" fg:w="1064"/><text x="58.8577%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,340 samples, 0.14%)</title><rect x="58.6037%" y="628" width="0.1408%" height="15" fill="rgb(247,87,22)" fg:x="557792" fg:w="1340"/><text x="58.8537%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,367 samples, 0.25%)</title><rect x="58.4960%" y="612" width="0.2487%" height="15" fill="rgb(215,73,9)" fg:x="556767" fg:w="2367"/><text x="58.7460%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,691 samples, 0.28%)</title><rect x="58.4779%" y="596" width="0.2827%" height="15" fill="rgb(207,175,33)" fg:x="556595" fg:w="2691"/><text x="58.7279%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,323 samples, 0.45%)</title><rect x="58.4511%" y="580" width="0.4542%" height="15" fill="rgb(243,129,54)" fg:x="556340" fg:w="4323"/><text x="58.7011%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,320 samples, 0.14%)</title><rect x="58.7666%" y="596" width="0.1387%" height="15" fill="rgb(227,119,45)" fg:x="559343" fg:w="1320"/><text x="59.0166%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,507 samples, 1.00%)</title><rect x="57.9096%" y="564" width="0.9988%" height="15" fill="rgb(205,109,36)" fg:x="551186" fg:w="9507"/><text x="58.1596%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,242 samples, 1.08%)</title><rect x="57.8331%" y="548" width="1.0761%" height="15" fill="rgb(205,6,39)" fg:x="550458" fg:w="10242"/><text x="58.0831%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,301 samples, 1.08%)</title><rect x="57.8271%" y="532" width="1.0823%" height="15" fill="rgb(221,32,16)" fg:x="550401" fg:w="10301"/><text x="58.0771%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,781 samples, 1.13%)</title><rect x="57.8111%" y="516" width="1.1327%" height="15" fill="rgb(228,144,50)" fg:x="550248" fg:w="10781"/><text x="58.0611%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,540 samples, 1.21%)</title><rect x="57.7400%" y="484" width="1.2124%" height="15" fill="rgb(229,201,53)" fg:x="549572" fg:w="11540"/><text x="57.9900%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,450 samples, 1.20%)</title><rect x="57.7495%" y="500" width="1.2030%" height="15" fill="rgb(249,153,27)" fg:x="549662" fg:w="11450"/><text x="57.9995%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,542 samples, 1.21%)</title><rect x="57.7400%" y="468" width="1.2126%" height="15" fill="rgb(227,106,25)" fg:x="549572" fg:w="11542"/><text x="57.9900%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,012 samples, 2.42%)</title><rect x="56.5354%" y="388" width="2.4177%" height="15" fill="rgb(230,65,29)" fg:x="538106" fg:w="23012"/><text x="56.7854%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,009 samples, 2.42%)</title><rect x="56.5357%" y="404" width="2.4174%" height="15" fill="rgb(221,57,46)" fg:x="538109" fg:w="23009"/><text x="56.7857%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,008 samples, 2.42%)</title><rect x="56.5358%" y="420" width="2.4173%" height="15" fill="rgb(229,161,17)" fg:x="538110" fg:w="23008"/><text x="56.7858%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,551 samples, 1.21%)</title><rect x="57.7395%" y="436" width="1.2136%" height="15" fill="rgb(222,213,11)" fg:x="549567" fg:w="11551"/><text x="57.9895%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,546 samples, 1.21%)</title><rect x="57.7400%" y="452" width="1.2131%" height="15" fill="rgb(235,35,13)" fg:x="549572" fg:w="11546"/><text x="57.9900%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (24,969 samples, 2.62%)</title><rect x="56.3311%" y="356" width="2.6233%" height="15" fill="rgb(233,158,34)" fg:x="536162" fg:w="24969"/><text x="56.5811%" y="366.50">de..</text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,034 samples, 2.42%)</title><rect x="56.5344%" y="372" width="2.4200%" height="15" fill="rgb(215,151,48)" fg:x="538097" fg:w="23034"/><text x="56.7844%" y="382.50">__..</text></g><g><title>simulate_single (simulation.py:45) (25,527 samples, 2.68%)</title><rect x="56.2829%" y="340" width="2.6820%" height="15" fill="rgb(229,84,14)" fg:x="535703" fg:w="25527"/><text x="56.5329%" y="350.50">si..</text></g><g><title>process 30258:&quot;python simulation.py -p sim0.csv&quot; (44,342 samples, 4.66%)</title><rect x="54.5049%" y="84" width="4.6587%" height="15" fill="rgb(229,68,14)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="100" width="4.6587%" height="15" fill="rgb(243,106,26)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="116" width="4.6587%" height="15" fill="rgb(206,45,38)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="132" width="4.6587%" height="15" fill="rgb(226,6,15)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="148" width="4.6587%" height="15" fill="rgb(232,22,54)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="164" width="4.6587%" height="15" fill="rgb(229,222,32)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="180" width="4.6587%" height="15" fill="rgb(228,62,29)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="196" width="4.6587%" height="15" fill="rgb(251,103,34)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="212" width="4.6587%" height="15" fill="rgb(233,12,30)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="228" width="4.6587%" height="15" fill="rgb(238,52,0)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="244" width="4.6587%" height="15" fill="rgb(223,98,5)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="260" width="4.6587%" height="15" fill="rgb(228,75,37)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="276" width="4.6587%" height="15" fill="rgb(205,115,49)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="292" width="4.6587%" height="15" fill="rgb(250,154,43)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="302.50">run (..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="308" width="4.6587%" height="15" fill="rgb(226,43,29)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,342 samples, 4.66%)</title><rect x="54.5049%" y="324" width="4.6587%" height="15" fill="rgb(249,228,39)" fg:x="518780" fg:w="44342"/><text x="54.7549%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,432 samples, 0.15%)</title><rect x="59.0132%" y="340" width="0.1505%" height="15" fill="rgb(216,79,43)" fg:x="561690" fg:w="1432"/><text x="59.2632%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,432 samples, 0.15%)</title><rect x="59.0132%" y="356" width="0.1505%" height="15" fill="rgb(228,95,12)" fg:x="561690" fg:w="1432"/><text x="59.2632%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,432 samples, 0.15%)</title><rect x="59.0132%" y="372" width="0.1505%" height="15" fill="rgb(249,221,15)" fg:x="561690" fg:w="1432"/><text x="59.2632%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,432 samples, 0.15%)</title><rect x="59.0132%" y="388" width="0.1505%" height="15" fill="rgb(233,34,13)" fg:x="561690" fg:w="1432"/><text x="59.2632%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,432 samples, 0.15%)</title><rect x="59.0132%" y="404" width="0.1505%" height="15" fill="rgb(214,103,39)" fg:x="561690" fg:w="1432"/><text x="59.2632%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,429 samples, 0.15%)</title><rect x="59.0135%" y="420" width="0.1501%" height="15" fill="rgb(251,126,39)" fg:x="561693" fg:w="1429"/><text x="59.2635%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,295 samples, 0.14%)</title><rect x="59.0276%" y="436" width="0.1361%" height="15" fill="rgb(214,216,36)" fg:x="561827" fg:w="1295"/><text x="59.2776%" y="446.50"></text></g><g><title>extension (tdt.py:34) (1,039 samples, 0.11%)</title><rect x="60.1183%" y="388" width="0.1092%" height="15" fill="rgb(220,221,8)" fg:x="572208" fg:w="1039"/><text x="60.3683%" y="398.50"></text></g><g><title>extension (tdt.py:36) (2,381 samples, 0.25%)</title><rect x="60.2380%" y="388" width="0.2502%" height="15" fill="rgb(240,216,3)" fg:x="573348" fg:w="2381"/><text x="60.4880%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,300 samples, 0.14%)</title><rect x="60.3516%" y="404" width="0.1366%" height="15" fill="rgb(232,218,17)" fg:x="574429" fg:w="1300"/><text x="60.6016%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,035 samples, 0.32%)</title><rect x="60.5005%" y="388" width="0.3189%" height="15" fill="rgb(229,163,45)" fg:x="575846" fg:w="3035"/><text x="60.7505%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (15,854 samples, 1.67%)</title><rect x="59.2612%" y="340" width="1.6657%" height="15" fill="rgb(231,110,42)" fg:x="564050" fg:w="15854"/><text x="59.5112%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,854 samples, 1.67%)</title><rect x="59.2612%" y="356" width="1.6657%" height="15" fill="rgb(208,170,48)" fg:x="564050" fg:w="15854"/><text x="59.5112%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,738 samples, 1.65%)</title><rect x="59.2733%" y="372" width="1.6535%" height="15" fill="rgb(239,116,25)" fg:x="564166" fg:w="15738"/><text x="59.5233%" y="382.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (982 samples, 0.10%)</title><rect x="60.9800%" y="388" width="0.1032%" height="15" fill="rgb(219,200,50)" fg:x="580410" fg:w="982"/><text x="61.2300%" y="398.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (982 samples, 0.10%)</title><rect x="60.9800%" y="404" width="0.1032%" height="15" fill="rgb(245,200,0)" fg:x="580410" fg:w="982"/><text x="61.2300%" y="414.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:840) (955 samples, 0.10%)</title><rect x="60.9828%" y="420" width="0.1003%" height="15" fill="rgb(245,119,33)" fg:x="580437" fg:w="955"/><text x="61.2328%" y="430.50"></text></g><g><title>__init__ (pandas/core/frame.py:790) (960 samples, 0.10%)</title><rect x="61.0832%" y="388" width="0.1009%" height="15" fill="rgb(231,125,12)" fg:x="581392" fg:w="960"/><text x="61.3332%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,957 samples, 0.21%)</title><rect x="60.9786%" y="372" width="0.2056%" height="15" fill="rgb(216,96,41)" fg:x="580397" fg:w="1957"/><text x="61.2286%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,613 samples, 0.17%)</title><rect x="61.1935%" y="452" width="0.1695%" height="15" fill="rgb(248,43,45)" fg:x="582442" fg:w="1613"/><text x="61.4435%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,520 samples, 0.16%)</title><rect x="61.2033%" y="468" width="0.1597%" height="15" fill="rgb(217,222,7)" fg:x="582535" fg:w="1520"/><text x="61.4533%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,822 samples, 0.19%)</title><rect x="61.4619%" y="500" width="0.1914%" height="15" fill="rgb(233,28,6)" fg:x="584997" fg:w="1822"/><text x="61.7119%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,842 samples, 0.30%)</title><rect x="61.3902%" y="484" width="0.2986%" height="15" fill="rgb(231,218,15)" fg:x="584314" fg:w="2842"/><text x="61.6402%" y="494.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,092 samples, 0.11%)</title><rect x="61.8304%" y="516" width="0.1147%" height="15" fill="rgb(226,171,48)" fg:x="588504" fg:w="1092"/><text x="62.0804%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,587 samples, 0.17%)</title><rect x="61.8019%" y="500" width="0.1667%" height="15" fill="rgb(235,201,9)" fg:x="588233" fg:w="1587"/><text x="62.0519%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,633 samples, 0.49%)</title><rect x="61.6888%" y="484" width="0.4868%" height="15" fill="rgb(217,80,15)" fg:x="587156" fg:w="4633"/><text x="61.9388%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,799 samples, 0.82%)</title><rect x="61.3629%" y="452" width="0.8194%" height="15" fill="rgb(219,152,8)" fg:x="584055" fg:w="7799"/><text x="61.6129%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,739 samples, 0.81%)</title><rect x="61.3693%" y="468" width="0.8131%" height="15" fill="rgb(243,107,38)" fg:x="584115" fg:w="7739"/><text x="61.6193%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,709 samples, 1.23%)</title><rect x="61.1931%" y="436" width="1.2302%" height="15" fill="rgb(231,17,5)" fg:x="582438" fg:w="11709"/><text x="61.4431%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,184 samples, 0.23%)</title><rect x="62.1938%" y="452" width="0.2295%" height="15" fill="rgb(209,25,54)" fg:x="591963" fg:w="2184"/><text x="62.4438%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,376 samples, 0.14%)</title><rect x="62.2787%" y="468" width="0.1446%" height="15" fill="rgb(219,0,2)" fg:x="592771" fg:w="1376"/><text x="62.5287%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,412 samples, 0.46%)</title><rect x="62.6671%" y="596" width="0.4635%" height="15" fill="rgb(246,9,5)" fg:x="596468" fg:w="4412"/><text x="62.9171%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,237 samples, 0.24%)</title><rect x="62.8956%" y="612" width="0.2350%" height="15" fill="rgb(226,159,4)" fg:x="598643" fg:w="2237"/><text x="63.1456%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,732 samples, 0.50%)</title><rect x="62.6409%" y="580" width="0.4972%" height="15" fill="rgb(219,175,34)" fg:x="596219" fg:w="4732"/><text x="62.8909%" y="590.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (967 samples, 0.10%)</title><rect x="63.3021%" y="660" width="0.1016%" height="15" fill="rgb(236,10,46)" fg:x="602512" fg:w="967"/><text x="63.5521%" y="670.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,080 samples, 0.11%)</title><rect x="63.2958%" y="644" width="0.1135%" height="15" fill="rgb(240,211,16)" fg:x="602452" fg:w="1080"/><text x="63.5458%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,411 samples, 0.15%)</title><rect x="63.2889%" y="628" width="0.1482%" height="15" fill="rgb(205,3,43)" fg:x="602386" fg:w="1411"/><text x="63.5389%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,403 samples, 0.25%)</title><rect x="63.1848%" y="612" width="0.2525%" height="15" fill="rgb(245,7,22)" fg:x="601395" fg:w="2403"/><text x="63.4348%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,703 samples, 0.28%)</title><rect x="63.1684%" y="596" width="0.2840%" height="15" fill="rgb(239,132,32)" fg:x="601239" fg:w="2703"/><text x="63.4184%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,248 samples, 0.45%)</title><rect x="63.1430%" y="580" width="0.4463%" height="15" fill="rgb(228,202,34)" fg:x="600998" fg:w="4248"/><text x="63.3930%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,241 samples, 0.13%)</title><rect x="63.4590%" y="596" width="0.1304%" height="15" fill="rgb(254,200,22)" fg:x="604005" fg:w="1241"/><text x="63.7090%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,421 samples, 0.99%)</title><rect x="62.6023%" y="564" width="0.9898%" height="15" fill="rgb(219,10,39)" fg:x="595851" fg:w="9421"/><text x="62.8523%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,221 samples, 1.07%)</title><rect x="62.5190%" y="548" width="1.0739%" height="15" fill="rgb(226,210,39)" fg:x="595058" fg:w="10221"/><text x="62.7690%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,269 samples, 1.08%)</title><rect x="62.5142%" y="532" width="1.0789%" height="15" fill="rgb(208,219,16)" fg:x="595013" fg:w="10269"/><text x="62.7642%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,768 samples, 1.13%)</title><rect x="62.4968%" y="516" width="1.1313%" height="15" fill="rgb(216,158,51)" fg:x="594847" fg:w="10768"/><text x="62.7468%" y="526.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,549 samples, 1.21%)</title><rect x="62.4236%" y="468" width="1.2134%" height="15" fill="rgb(233,14,44)" fg:x="594150" fg:w="11549"/><text x="62.6736%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,548 samples, 1.21%)</title><rect x="62.4237%" y="484" width="1.2133%" height="15" fill="rgb(237,97,39)" fg:x="594151" fg:w="11548"/><text x="62.6737%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,456 samples, 1.20%)</title><rect x="62.4333%" y="500" width="1.2036%" height="15" fill="rgb(218,198,43)" fg:x="594243" fg:w="11456"/><text x="62.6833%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,333 samples, 2.45%)</title><rect x="61.1856%" y="388" width="2.4515%" height="15" fill="rgb(231,104,20)" fg:x="582367" fg:w="23333"/><text x="61.4356%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,331 samples, 2.45%)</title><rect x="61.1858%" y="404" width="2.4512%" height="15" fill="rgb(254,36,13)" fg:x="582369" fg:w="23331"/><text x="61.4358%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,328 samples, 2.45%)</title><rect x="61.1861%" y="420" width="2.4509%" height="15" fill="rgb(248,14,50)" fg:x="582372" fg:w="23328"/><text x="61.4361%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,553 samples, 1.21%)</title><rect x="62.4233%" y="436" width="1.2138%" height="15" fill="rgb(217,107,29)" fg:x="594147" fg:w="11553"/><text x="62.6733%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,552 samples, 1.21%)</title><rect x="62.4234%" y="452" width="1.2137%" height="15" fill="rgb(251,169,33)" fg:x="594148" fg:w="11552"/><text x="62.6734%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,355 samples, 2.45%)</title><rect x="61.1842%" y="372" width="2.4538%" height="15" fill="rgb(217,108,32)" fg:x="582354" fg:w="23355"/><text x="61.4342%" y="382.50">__..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,335 samples, 2.66%)</title><rect x="60.9763%" y="356" width="2.6618%" height="15" fill="rgb(219,66,42)" fg:x="580375" fg:w="25335"/><text x="61.2263%" y="366.50">de..</text></g><g><title>simulate_single (simulation.py:45) (25,917 samples, 2.72%)</title><rect x="60.9268%" y="340" width="2.7229%" height="15" fill="rgb(206,180,7)" fg:x="579904" fg:w="25917"/><text x="61.1768%" y="350.50">si..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,380 samples, 4.66%)</title><rect x="59.1637%" y="308" width="4.6627%" height="15" fill="rgb(208,226,31)" fg:x="563122" fg:w="44380"/><text x="59.4137%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,380 samples, 4.66%)</title><rect x="59.1637%" y="324" width="4.6627%" height="15" fill="rgb(218,26,49)" fg:x="563122" fg:w="44380"/><text x="59.4137%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,288 samples, 0.14%)</title><rect x="63.6911%" y="340" width="0.1353%" height="15" fill="rgb(233,197,48)" fg:x="606214" fg:w="1288"/><text x="63.9411%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,288 samples, 0.14%)</title><rect x="63.6911%" y="356" width="0.1353%" height="15" fill="rgb(252,181,51)" fg:x="606214" fg:w="1288"/><text x="63.9411%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,288 samples, 0.14%)</title><rect x="63.6911%" y="372" width="0.1353%" height="15" fill="rgb(253,90,19)" fg:x="606214" fg:w="1288"/><text x="63.9411%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,287 samples, 0.14%)</title><rect x="63.6912%" y="388" width="0.1352%" height="15" fill="rgb(215,171,30)" fg:x="606215" fg:w="1287"/><text x="63.9412%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,285 samples, 0.14%)</title><rect x="63.6914%" y="404" width="0.1350%" height="15" fill="rgb(214,222,9)" fg:x="606217" fg:w="1285"/><text x="63.9414%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,280 samples, 0.13%)</title><rect x="63.6919%" y="420" width="0.1345%" height="15" fill="rgb(223,3,22)" fg:x="606222" fg:w="1280"/><text x="63.9419%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,127 samples, 0.12%)</title><rect x="63.7080%" y="436" width="0.1184%" height="15" fill="rgb(225,196,46)" fg:x="606375" fg:w="1127"/><text x="63.9580%" y="446.50"></text></g><g><title>process 30259:&quot;python simulation.py -p sim0.csv&quot; (44,381 samples, 4.66%)</title><rect x="59.1637%" y="84" width="4.6628%" height="15" fill="rgb(209,110,37)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="100" width="4.6628%" height="15" fill="rgb(249,89,12)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="116" width="4.6628%" height="15" fill="rgb(226,27,33)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="132" width="4.6628%" height="15" fill="rgb(213,82,22)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="148" width="4.6628%" height="15" fill="rgb(248,140,0)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="164" width="4.6628%" height="15" fill="rgb(228,106,3)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="180" width="4.6628%" height="15" fill="rgb(209,23,37)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="196" width="4.6628%" height="15" fill="rgb(241,93,50)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="212" width="4.6628%" height="15" fill="rgb(253,46,43)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="228" width="4.6628%" height="15" fill="rgb(226,206,43)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="244" width="4.6628%" height="15" fill="rgb(217,54,7)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="260" width="4.6628%" height="15" fill="rgb(223,5,52)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="276" width="4.6628%" height="15" fill="rgb(206,52,46)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,381 samples, 4.66%)</title><rect x="59.1637%" y="292" width="4.6628%" height="15" fill="rgb(253,136,11)" fg:x="563122" fg:w="44381"/><text x="59.4137%" y="302.50">run (..</text></g><g><title>extension (tdt.py:36) (2,359 samples, 0.25%)</title><rect x="64.8781%" y="388" width="0.2478%" height="15" fill="rgb(208,106,33)" fg:x="617512" fg:w="2359"/><text x="65.1281%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,225 samples, 0.13%)</title><rect x="64.9972%" y="404" width="0.1287%" height="15" fill="rgb(206,54,4)" fg:x="618646" fg:w="1225"/><text x="65.2472%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,083 samples, 0.32%)</title><rect x="65.1386%" y="388" width="0.3239%" height="15" fill="rgb(213,3,15)" fg:x="619992" fg:w="3083"/><text x="65.3886%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (15,616 samples, 1.64%)</title><rect x="63.9136%" y="340" width="1.6407%" height="15" fill="rgb(252,211,39)" fg:x="608332" fg:w="15616"/><text x="64.1636%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,613 samples, 1.64%)</title><rect x="63.9139%" y="356" width="1.6404%" height="15" fill="rgb(223,6,36)" fg:x="608335" fg:w="15613"/><text x="64.1639%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,496 samples, 1.63%)</title><rect x="63.9262%" y="372" width="1.6281%" height="15" fill="rgb(252,169,45)" fg:x="608452" fg:w="15496"/><text x="64.1762%" y="382.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (972 samples, 0.10%)</title><rect x="65.6103%" y="404" width="0.1021%" height="15" fill="rgb(212,48,26)" fg:x="624481" fg:w="972"/><text x="65.8603%" y="414.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:840) (956 samples, 0.10%)</title><rect x="65.6119%" y="420" width="0.1004%" height="15" fill="rgb(251,102,48)" fg:x="624497" fg:w="956"/><text x="65.8619%" y="430.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (974 samples, 0.10%)</title><rect x="65.6103%" y="388" width="0.1023%" height="15" fill="rgb(243,208,16)" fg:x="624481" fg:w="974"/><text x="65.8603%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,873 samples, 0.20%)</title><rect x="65.6080%" y="372" width="0.1968%" height="15" fill="rgb(219,96,24)" fg:x="624460" fg:w="1873"/><text x="65.8580%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,494 samples, 0.16%)</title><rect x="65.8123%" y="452" width="0.1570%" height="15" fill="rgb(219,33,29)" fg:x="626404" fg:w="1494"/><text x="66.0623%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,398 samples, 0.15%)</title><rect x="65.8224%" y="468" width="0.1469%" height="15" fill="rgb(223,176,5)" fg:x="626500" fg:w="1398"/><text x="66.0724%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,893 samples, 0.20%)</title><rect x="66.0704%" y="500" width="0.1989%" height="15" fill="rgb(228,140,14)" fg:x="628861" fg:w="1893"/><text x="66.3204%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,972 samples, 0.31%)</title><rect x="65.9944%" y="484" width="0.3122%" height="15" fill="rgb(217,179,31)" fg:x="628137" fg:w="2972"/><text x="66.2444%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (981 samples, 0.10%)</title><rect x="66.4554%" y="532" width="0.1031%" height="15" fill="rgb(230,9,30)" fg:x="632525" fg:w="981"/><text x="66.7054%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,153 samples, 0.12%)</title><rect x="66.4483%" y="516" width="0.1211%" height="15" fill="rgb(230,136,20)" fg:x="632458" fg:w="1153"/><text x="66.6983%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,679 samples, 0.18%)</title><rect x="66.4167%" y="500" width="0.1764%" height="15" fill="rgb(215,210,22)" fg:x="632157" fg:w="1679"/><text x="66.6667%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,671 samples, 0.49%)</title><rect x="66.3066%" y="484" width="0.4908%" height="15" fill="rgb(218,43,5)" fg:x="631109" fg:w="4671"/><text x="66.5566%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,943 samples, 0.83%)</title><rect x="65.9693%" y="452" width="0.8345%" height="15" fill="rgb(216,11,5)" fg:x="627898" fg:w="7943"/><text x="66.2193%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,887 samples, 0.83%)</title><rect x="65.9751%" y="468" width="0.8286%" height="15" fill="rgb(209,82,29)" fg:x="627954" fg:w="7887"/><text x="66.2251%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,761 samples, 1.24%)</title><rect x="65.8120%" y="436" width="1.2357%" height="15" fill="rgb(244,115,12)" fg:x="626401" fg:w="11761"/><text x="66.0620%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,223 samples, 0.23%)</title><rect x="66.8141%" y="452" width="0.2336%" height="15" fill="rgb(222,82,18)" fg:x="635939" fg:w="2223"/><text x="67.0641%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,437 samples, 0.15%)</title><rect x="66.8967%" y="468" width="0.1510%" height="15" fill="rgb(249,227,8)" fg:x="636725" fg:w="1437"/><text x="67.1467%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,529 samples, 0.48%)</title><rect x="67.2932%" y="596" width="0.4758%" height="15" fill="rgb(253,141,45)" fg:x="640499" fg:w="4529"/><text x="67.5432%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,301 samples, 0.24%)</title><rect x="67.5272%" y="612" width="0.2418%" height="15" fill="rgb(234,184,4)" fg:x="642727" fg:w="2301"/><text x="67.7772%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,823 samples, 0.51%)</title><rect x="67.2694%" y="580" width="0.5067%" height="15" fill="rgb(218,194,23)" fg:x="640273" fg:w="4823"/><text x="67.5194%" y="590.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,053 samples, 0.11%)</title><rect x="67.9386%" y="644" width="0.1106%" height="15" fill="rgb(235,66,41)" fg:x="646642" fg:w="1053"/><text x="68.1886%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,402 samples, 0.15%)</title><rect x="67.9324%" y="628" width="0.1473%" height="15" fill="rgb(245,217,1)" fg:x="646583" fg:w="1402"/><text x="68.1824%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,429 samples, 0.26%)</title><rect x="67.8248%" y="612" width="0.2552%" height="15" fill="rgb(229,91,1)" fg:x="645559" fg:w="2429"/><text x="68.0748%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,745 samples, 0.29%)</title><rect x="67.8074%" y="596" width="0.2884%" height="15" fill="rgb(207,101,30)" fg:x="645394" fg:w="2745"/><text x="68.0574%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,300 samples, 0.45%)</title><rect x="67.7804%" y="580" width="0.4518%" height="15" fill="rgb(223,82,49)" fg:x="645137" fg:w="4300"/><text x="68.0304%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,237 samples, 0.13%)</title><rect x="68.1023%" y="596" width="0.1300%" height="15" fill="rgb(218,167,17)" fg:x="648200" fg:w="1237"/><text x="68.3523%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,573 samples, 1.01%)</title><rect x="67.2293%" y="564" width="1.0058%" height="15" fill="rgb(208,103,14)" fg:x="639891" fg:w="9573"/><text x="67.4793%" y="574.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,413 samples, 1.09%)</title><rect x="67.1416%" y="532" width="1.0940%" height="15" fill="rgb(238,20,8)" fg:x="639056" fg:w="10413"/><text x="67.3916%" y="542.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,356 samples, 1.09%)</title><rect x="67.1475%" y="548" width="1.0880%" height="15" fill="rgb(218,80,54)" fg:x="639113" fg:w="10356"/><text x="67.3975%" y="558.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,918 samples, 1.15%)</title><rect x="67.1254%" y="516" width="1.1471%" height="15" fill="rgb(240,144,17)" fg:x="638902" fg:w="10918"/><text x="67.3754%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,740 samples, 1.23%)</title><rect x="67.0486%" y="484" width="1.2334%" height="15" fill="rgb(245,27,50)" fg:x="638171" fg:w="11740"/><text x="67.2986%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,641 samples, 1.22%)</title><rect x="67.0590%" y="500" width="1.2230%" height="15" fill="rgb(251,51,7)" fg:x="638270" fg:w="11641"/><text x="67.3090%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,742 samples, 1.23%)</title><rect x="67.0485%" y="468" width="1.2337%" height="15" fill="rgb(245,217,29)" fg:x="638170" fg:w="11742"/><text x="67.2985%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,569 samples, 2.48%)</title><rect x="65.8061%" y="388" width="2.4762%" height="15" fill="rgb(221,176,29)" fg:x="626345" fg:w="23569"/><text x="66.0561%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,568 samples, 2.48%)</title><rect x="65.8062%" y="404" width="2.4761%" height="15" fill="rgb(212,180,24)" fg:x="626346" fg:w="23568"/><text x="66.0562%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,565 samples, 2.48%)</title><rect x="65.8065%" y="420" width="2.4758%" height="15" fill="rgb(254,24,2)" fg:x="626349" fg:w="23565"/><text x="66.0565%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,752 samples, 1.23%)</title><rect x="67.0476%" y="436" width="1.2347%" height="15" fill="rgb(230,100,2)" fg:x="638162" fg:w="11752"/><text x="67.2976%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,745 samples, 1.23%)</title><rect x="67.0484%" y="452" width="1.2340%" height="15" fill="rgb(219,142,25)" fg:x="638169" fg:w="11745"/><text x="67.2984%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,590 samples, 2.48%)</title><rect x="65.8048%" y="372" width="2.4785%" height="15" fill="rgb(240,73,43)" fg:x="626333" fg:w="23590"/><text x="66.0548%" y="382.50">__..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,484 samples, 2.68%)</title><rect x="65.6060%" y="356" width="2.6774%" height="15" fill="rgb(214,114,15)" fg:x="624441" fg:w="25484"/><text x="65.8560%" y="366.50">de..</text></g><g><title>simulate_single (simulation.py:45) (26,110 samples, 2.74%)</title><rect x="65.5543%" y="340" width="2.7432%" height="15" fill="rgb(207,130,4)" fg:x="623948" fg:w="26110"/><text x="65.8043%" y="350.50">si..</text></g><g><title>process 30260:&quot;python simulation.py -p sim0.csv&quot; (44,108 samples, 4.63%)</title><rect x="63.8265%" y="84" width="4.6341%" height="15" fill="rgb(221,25,40)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="100" width="4.6341%" height="15" fill="rgb(241,184,7)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="116" width="4.6341%" height="15" fill="rgb(235,159,4)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="132" width="4.6341%" height="15" fill="rgb(214,87,48)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="148" width="4.6341%" height="15" fill="rgb(246,198,24)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="164" width="4.6341%" height="15" fill="rgb(209,66,40)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="180" width="4.6341%" height="15" fill="rgb(233,147,39)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="196" width="4.6341%" height="15" fill="rgb(231,145,52)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="212" width="4.6341%" height="15" fill="rgb(206,20,26)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="228" width="4.6341%" height="15" fill="rgb(238,220,4)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="244" width="4.6341%" height="15" fill="rgb(252,195,42)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="260" width="4.6341%" height="15" fill="rgb(209,10,6)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="276" width="4.6341%" height="15" fill="rgb(229,3,52)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="292" width="4.6341%" height="15" fill="rgb(253,49,37)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="302.50">run (..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="308" width="4.6341%" height="15" fill="rgb(240,103,49)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,108 samples, 4.63%)</title><rect x="63.8265%" y="324" width="4.6341%" height="15" fill="rgb(250,182,30)" fg:x="607503" fg:w="44108"/><text x="64.0765%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,174 samples, 0.12%)</title><rect x="68.3373%" y="340" width="0.1233%" height="15" fill="rgb(248,8,30)" fg:x="650437" fg:w="1174"/><text x="68.5873%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,174 samples, 0.12%)</title><rect x="68.3373%" y="356" width="0.1233%" height="15" fill="rgb(237,120,30)" fg:x="650437" fg:w="1174"/><text x="68.5873%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,174 samples, 0.12%)</title><rect x="68.3373%" y="372" width="0.1233%" height="15" fill="rgb(221,146,34)" fg:x="650437" fg:w="1174"/><text x="68.5873%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,173 samples, 0.12%)</title><rect x="68.3374%" y="388" width="0.1232%" height="15" fill="rgb(242,55,13)" fg:x="650438" fg:w="1173"/><text x="68.5874%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,173 samples, 0.12%)</title><rect x="68.3374%" y="404" width="0.1232%" height="15" fill="rgb(242,112,31)" fg:x="650438" fg:w="1173"/><text x="68.5874%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,170 samples, 0.12%)</title><rect x="68.3377%" y="420" width="0.1229%" height="15" fill="rgb(249,192,27)" fg:x="650441" fg:w="1170"/><text x="68.5877%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,052 samples, 0.11%)</title><rect x="68.3501%" y="436" width="0.1105%" height="15" fill="rgb(208,204,44)" fg:x="650559" fg:w="1052"/><text x="68.6001%" y="446.50"></text></g><g><title>extension (tdt.py:34) (1,003 samples, 0.11%)</title><rect x="69.4354%" y="388" width="0.1054%" height="15" fill="rgb(208,93,54)" fg:x="660889" fg:w="1003"/><text x="69.6854%" y="398.50"></text></g><g><title>extension (tdt.py:36) (2,388 samples, 0.25%)</title><rect x="69.5511%" y="388" width="0.2509%" height="15" fill="rgb(242,1,31)" fg:x="661990" fg:w="2388"/><text x="69.8011%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,241 samples, 0.13%)</title><rect x="69.6716%" y="404" width="0.1304%" height="15" fill="rgb(241,83,25)" fg:x="663137" fg:w="1241"/><text x="69.9216%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,081 samples, 0.32%)</title><rect x="69.8132%" y="388" width="0.3237%" height="15" fill="rgb(205,169,50)" fg:x="664485" fg:w="3081"/><text x="70.0632%" y="398.50"></text></g><g><title>__synthesis (tdt.py:59) (15,783 samples, 1.66%)</title><rect x="68.5763%" y="372" width="1.6582%" height="15" fill="rgb(239,186,37)" fg:x="652712" fg:w="15783"/><text x="68.8263%" y="382.50"></text></g><g><title>simulate_single (simulation.py:43) (15,889 samples, 1.67%)</title><rect x="68.5653%" y="340" width="1.6694%" height="15" fill="rgb(205,221,10)" fg:x="652607" fg:w="15889"/><text x="68.8153%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,889 samples, 1.67%)</title><rect x="68.5653%" y="356" width="1.6694%" height="15" fill="rgb(218,196,15)" fg:x="652607" fg:w="15889"/><text x="68.8153%" y="366.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,831 samples, 0.19%)</title><rect x="70.2850%" y="372" width="0.1924%" height="15" fill="rgb(218,196,35)" fg:x="668975" fg:w="1831"/><text x="70.5350%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,454 samples, 0.15%)</title><rect x="70.4877%" y="452" width="0.1528%" height="15" fill="rgb(233,63,24)" fg:x="670905" fg:w="1454"/><text x="70.7377%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,360 samples, 0.14%)</title><rect x="70.4976%" y="468" width="0.1429%" height="15" fill="rgb(225,8,4)" fg:x="670999" fg:w="1360"/><text x="70.7476%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,895 samples, 0.20%)</title><rect x="70.7377%" y="500" width="0.1991%" height="15" fill="rgb(234,105,35)" fg:x="673284" fg:w="1895"/><text x="70.9877%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,858 samples, 0.30%)</title><rect x="70.6683%" y="484" width="0.3003%" height="15" fill="rgb(236,21,32)" fg:x="672624" fg:w="2858"/><text x="70.9183%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (957 samples, 0.10%)</title><rect x="71.1108%" y="532" width="0.1005%" height="15" fill="rgb(228,109,6)" fg:x="676835" fg:w="957"/><text x="71.3608%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,105 samples, 0.12%)</title><rect x="71.1051%" y="516" width="0.1161%" height="15" fill="rgb(229,215,31)" fg:x="676781" fg:w="1105"/><text x="71.3551%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,593 samples, 0.17%)</title><rect x="71.0763%" y="500" width="0.1674%" height="15" fill="rgb(221,52,54)" fg:x="676507" fg:w="1593"/><text x="71.3263%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,440 samples, 0.47%)</title><rect x="70.9686%" y="484" width="0.4665%" height="15" fill="rgb(252,129,43)" fg:x="675482" fg:w="4440"/><text x="71.2186%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,638 samples, 0.80%)</title><rect x="70.6405%" y="452" width="0.8025%" height="15" fill="rgb(248,183,27)" fg:x="672359" fg:w="7638"/><text x="70.8905%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,586 samples, 0.80%)</title><rect x="70.6460%" y="468" width="0.7970%" height="15" fill="rgb(250,0,22)" fg:x="672411" fg:w="7586"/><text x="70.8960%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,398 samples, 1.20%)</title><rect x="70.4871%" y="436" width="1.1975%" height="15" fill="rgb(213,166,10)" fg:x="670899" fg:w="11398"/><text x="70.7371%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,224 samples, 0.23%)</title><rect x="71.4509%" y="452" width="0.2337%" height="15" fill="rgb(207,163,36)" fg:x="680073" fg:w="2224"/><text x="71.7009%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,441 samples, 0.15%)</title><rect x="71.5332%" y="468" width="0.1514%" height="15" fill="rgb(208,122,22)" fg:x="680856" fg:w="1441"/><text x="71.7832%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,340 samples, 0.46%)</title><rect x="71.9306%" y="596" width="0.4560%" height="15" fill="rgb(207,104,49)" fg:x="684638" fg:w="4340"/><text x="72.1806%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,195 samples, 0.23%)</title><rect x="72.1559%" y="612" width="0.2306%" height="15" fill="rgb(248,211,50)" fg:x="686783" fg:w="2195"/><text x="72.4059%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,609 samples, 0.48%)</title><rect x="71.9086%" y="580" width="0.4842%" height="15" fill="rgb(217,13,45)" fg:x="684429" fg:w="4609"/><text x="72.1586%" y="590.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,011 samples, 0.11%)</title><rect x="72.5585%" y="644" width="0.1062%" height="15" fill="rgb(211,216,49)" fg:x="690615" fg:w="1011"/><text x="72.8085%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,367 samples, 0.14%)</title><rect x="72.5517%" y="628" width="0.1436%" height="15" fill="rgb(221,58,53)" fg:x="690550" fg:w="1367"/><text x="72.8017%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,358 samples, 0.25%)</title><rect x="72.4478%" y="612" width="0.2477%" height="15" fill="rgb(220,112,41)" fg:x="689561" fg:w="2358"/><text x="72.6978%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,748 samples, 0.29%)</title><rect x="72.4265%" y="596" width="0.2887%" height="15" fill="rgb(236,38,28)" fg:x="689358" fg:w="2748"/><text x="72.6765%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,318 samples, 0.45%)</title><rect x="72.4000%" y="580" width="0.4537%" height="15" fill="rgb(227,195,22)" fg:x="689106" fg:w="4318"/><text x="72.6500%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,253 samples, 0.13%)</title><rect x="72.7220%" y="596" width="0.1316%" height="15" fill="rgb(214,55,33)" fg:x="692171" fg:w="1253"/><text x="72.9720%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,426 samples, 0.99%)</title><rect x="71.8661%" y="564" width="0.9903%" height="15" fill="rgb(248,80,13)" fg:x="684024" fg:w="9426"/><text x="72.1161%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,230 samples, 1.07%)</title><rect x="71.7820%" y="548" width="1.0748%" height="15" fill="rgb(238,52,6)" fg:x="683224" fg:w="10230"/><text x="72.0320%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,288 samples, 1.08%)</title><rect x="71.7760%" y="532" width="1.0809%" height="15" fill="rgb(224,198,47)" fg:x="683167" fg:w="10288"/><text x="72.0260%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,770 samples, 1.13%)</title><rect x="71.7616%" y="516" width="1.1315%" height="15" fill="rgb(233,171,20)" fg:x="683030" fg:w="10770"/><text x="72.0116%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,573 samples, 1.22%)</title><rect x="71.6856%" y="484" width="1.2159%" height="15" fill="rgb(241,30,25)" fg:x="682306" fg:w="11573"/><text x="71.9356%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,476 samples, 1.21%)</title><rect x="71.6957%" y="500" width="1.2057%" height="15" fill="rgb(207,171,38)" fg:x="682403" fg:w="11476"/><text x="71.9457%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,576 samples, 1.22%)</title><rect x="71.6853%" y="468" width="1.2162%" height="15" fill="rgb(234,70,1)" fg:x="682304" fg:w="11576"/><text x="71.9353%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,064 samples, 2.42%)</title><rect x="70.4787%" y="388" width="2.4232%" height="15" fill="rgb(232,178,18)" fg:x="670819" fg:w="23064"/><text x="70.7287%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,064 samples, 2.42%)</title><rect x="70.4787%" y="404" width="2.4232%" height="15" fill="rgb(241,78,40)" fg:x="670819" fg:w="23064"/><text x="70.7287%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,061 samples, 2.42%)</title><rect x="70.4790%" y="420" width="2.4229%" height="15" fill="rgb(222,35,25)" fg:x="670822" fg:w="23061"/><text x="70.7290%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,586 samples, 1.22%)</title><rect x="71.6846%" y="436" width="1.2173%" height="15" fill="rgb(207,92,16)" fg:x="682297" fg:w="11586"/><text x="71.9346%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,579 samples, 1.22%)</title><rect x="71.6853%" y="452" width="1.2165%" height="15" fill="rgb(216,59,51)" fg:x="682304" fg:w="11579"/><text x="71.9353%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (24,943 samples, 2.62%)</title><rect x="70.2824%" y="356" width="2.6206%" height="15" fill="rgb(213,80,28)" fg:x="668951" fg:w="24943"/><text x="70.5324%" y="366.50">de..</text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,088 samples, 2.43%)</title><rect x="70.4773%" y="372" width="2.4257%" height="15" fill="rgb(220,93,7)" fg:x="670806" fg:w="23088"/><text x="70.7273%" y="382.50">__..</text></g><g><title>simulate_single (simulation.py:45) (25,515 samples, 2.68%)</title><rect x="70.2346%" y="340" width="2.6807%" height="15" fill="rgb(225,24,44)" fg:x="668496" fg:w="25515"/><text x="70.4846%" y="350.50">si..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,306 samples, 4.65%)</title><rect x="68.4606%" y="308" width="4.6549%" height="15" fill="rgb(243,74,40)" fg:x="651611" fg:w="44306"/><text x="68.7106%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,306 samples, 4.65%)</title><rect x="68.4606%" y="324" width="4.6549%" height="15" fill="rgb(228,39,7)" fg:x="651611" fg:w="44306"/><text x="68.7106%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,452 samples, 0.15%)</title><rect x="72.9630%" y="340" width="0.1526%" height="15" fill="rgb(227,79,8)" fg:x="694465" fg:w="1452"/><text x="73.2130%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,452 samples, 0.15%)</title><rect x="72.9630%" y="356" width="0.1526%" height="15" fill="rgb(236,58,11)" fg:x="694465" fg:w="1452"/><text x="73.2130%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,452 samples, 0.15%)</title><rect x="72.9630%" y="372" width="0.1526%" height="15" fill="rgb(249,63,35)" fg:x="694465" fg:w="1452"/><text x="73.2130%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,452 samples, 0.15%)</title><rect x="72.9630%" y="388" width="0.1526%" height="15" fill="rgb(252,114,16)" fg:x="694465" fg:w="1452"/><text x="73.2130%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,452 samples, 0.15%)</title><rect x="72.9630%" y="404" width="0.1526%" height="15" fill="rgb(254,151,24)" fg:x="694465" fg:w="1452"/><text x="73.2130%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,450 samples, 0.15%)</title><rect x="72.9632%" y="420" width="0.1523%" height="15" fill="rgb(253,54,39)" fg:x="694467" fg:w="1450"/><text x="73.2132%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,291 samples, 0.14%)</title><rect x="72.9799%" y="436" width="0.1356%" height="15" fill="rgb(243,25,45)" fg:x="694626" fg:w="1291"/><text x="73.2299%" y="446.50"></text></g><g><title>process 30261:&quot;python simulation.py -p sim0.csv&quot; (44,308 samples, 4.66%)</title><rect x="68.4606%" y="84" width="4.6552%" height="15" fill="rgb(234,134,9)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="100" width="4.6552%" height="15" fill="rgb(227,166,31)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="116" width="4.6552%" height="15" fill="rgb(245,143,41)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="132" width="4.6552%" height="15" fill="rgb(238,181,32)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="148" width="4.6552%" height="15" fill="rgb(224,113,18)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="164" width="4.6552%" height="15" fill="rgb(240,229,28)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="180" width="4.6552%" height="15" fill="rgb(250,185,3)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="196" width="4.6552%" height="15" fill="rgb(212,59,25)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="212" width="4.6552%" height="15" fill="rgb(221,87,20)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="228" width="4.6552%" height="15" fill="rgb(213,74,28)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="244" width="4.6552%" height="15" fill="rgb(224,132,34)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="260" width="4.6552%" height="15" fill="rgb(222,101,24)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="276" width="4.6552%" height="15" fill="rgb(254,142,4)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,308 samples, 4.66%)</title><rect x="68.4606%" y="292" width="4.6552%" height="15" fill="rgb(230,229,49)" fg:x="651611" fg:w="44308"/><text x="68.7106%" y="302.50">run (..</text></g><g><title>extension (tdt.py:36) (2,441 samples, 0.26%)</title><rect x="74.1849%" y="388" width="0.2565%" height="15" fill="rgb(238,70,47)" fg:x="706095" fg:w="2441"/><text x="74.4349%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,307 samples, 0.14%)</title><rect x="74.3041%" y="404" width="0.1373%" height="15" fill="rgb(231,160,17)" fg:x="707229" fg:w="1307"/><text x="74.5541%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,106 samples, 0.33%)</title><rect x="74.4535%" y="388" width="0.3263%" height="15" fill="rgb(218,68,53)" fg:x="708651" fg:w="3106"/><text x="74.7035%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (15,855 samples, 1.67%)</title><rect x="73.2141%" y="340" width="1.6658%" height="15" fill="rgb(236,111,10)" fg:x="696855" fg:w="15855"/><text x="73.4641%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,855 samples, 1.67%)</title><rect x="73.2141%" y="356" width="1.6658%" height="15" fill="rgb(224,34,41)" fg:x="696855" fg:w="15855"/><text x="73.4641%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,768 samples, 1.66%)</title><rect x="73.2233%" y="372" width="1.6566%" height="15" fill="rgb(241,118,19)" fg:x="696942" fg:w="15768"/><text x="73.4733%" y="382.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (1,001 samples, 0.11%)</title><rect x="74.9337%" y="404" width="0.1052%" height="15" fill="rgb(238,129,25)" fg:x="713222" fg:w="1001"/><text x="75.1837%" y="414.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:840) (978 samples, 0.10%)</title><rect x="74.9361%" y="420" width="0.1028%" height="15" fill="rgb(238,22,31)" fg:x="713245" fg:w="978"/><text x="75.1861%" y="430.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:940) (961 samples, 0.10%)</title><rect x="74.9379%" y="436" width="0.1010%" height="15" fill="rgb(222,174,48)" fg:x="713262" fg:w="961"/><text x="75.1879%" y="446.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1067) (958 samples, 0.10%)</title><rect x="74.9382%" y="452" width="0.1007%" height="15" fill="rgb(206,152,40)" fg:x="713265" fg:w="958"/><text x="75.1882%" y="462.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/construction.py:1067) (958 samples, 0.10%)</title><rect x="74.9382%" y="468" width="0.1007%" height="15" fill="rgb(218,99,54)" fg:x="713265" fg:w="958"/><text x="75.1882%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (1,006 samples, 0.11%)</title><rect x="74.9337%" y="388" width="0.1057%" height="15" fill="rgb(220,174,26)" fg:x="713222" fg:w="1006"/><text x="75.1837%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,924 samples, 0.20%)</title><rect x="74.9321%" y="372" width="0.2021%" height="15" fill="rgb(245,116,9)" fg:x="713207" fg:w="1924"/><text x="75.1821%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,492 samples, 0.16%)</title><rect x="75.1425%" y="452" width="0.1568%" height="15" fill="rgb(209,72,35)" fg:x="715209" fg:w="1492"/><text x="75.3925%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,389 samples, 0.15%)</title><rect x="75.1533%" y="468" width="0.1459%" height="15" fill="rgb(226,126,21)" fg:x="715312" fg:w="1389"/><text x="75.4033%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,925 samples, 0.20%)</title><rect x="75.3955%" y="500" width="0.2022%" height="15" fill="rgb(227,192,1)" fg:x="717617" fg:w="1925"/><text x="75.6455%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,961 samples, 0.31%)</title><rect x="75.3212%" y="484" width="0.3111%" height="15" fill="rgb(237,180,29)" fg:x="716910" fg:w="2961"/><text x="75.5712%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (953 samples, 0.10%)</title><rect x="75.7768%" y="532" width="0.1001%" height="15" fill="rgb(230,197,35)" fg:x="721247" fg:w="953"/><text x="76.0268%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,101 samples, 0.12%)</title><rect x="75.7712%" y="516" width="0.1157%" height="15" fill="rgb(246,193,31)" fg:x="721193" fg:w="1101"/><text x="76.0212%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,583 samples, 0.17%)</title><rect x="75.7403%" y="500" width="0.1663%" height="15" fill="rgb(241,36,4)" fg:x="720899" fg:w="1583"/><text x="75.9903%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,480 samples, 0.47%)</title><rect x="75.6323%" y="484" width="0.4707%" height="15" fill="rgb(241,130,17)" fg:x="719871" fg:w="4480"/><text x="75.8823%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,706 samples, 0.81%)</title><rect x="75.2992%" y="452" width="0.8096%" height="15" fill="rgb(206,137,32)" fg:x="716701" fg:w="7706"/><text x="75.5492%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,666 samples, 0.81%)</title><rect x="75.3034%" y="468" width="0.8054%" height="15" fill="rgb(237,228,51)" fg:x="716741" fg:w="7666"/><text x="75.5534%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,440 samples, 1.20%)</title><rect x="75.1419%" y="436" width="1.2019%" height="15" fill="rgb(243,6,42)" fg:x="715204" fg:w="11440"/><text x="75.3919%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,158 samples, 0.23%)</title><rect x="76.1171%" y="452" width="0.2267%" height="15" fill="rgb(251,74,28)" fg:x="724486" fg:w="2158"/><text x="76.3671%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,372 samples, 0.14%)</title><rect x="76.1997%" y="468" width="0.1441%" height="15" fill="rgb(218,20,49)" fg:x="725272" fg:w="1372"/><text x="76.4497%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,336 samples, 0.46%)</title><rect x="76.5910%" y="596" width="0.4556%" height="15" fill="rgb(238,28,14)" fg:x="728996" fg:w="4336"/><text x="76.8410%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,231 samples, 0.23%)</title><rect x="76.8121%" y="612" width="0.2344%" height="15" fill="rgb(229,40,46)" fg:x="731101" fg:w="2231"/><text x="77.0621%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,604 samples, 0.48%)</title><rect x="76.5687%" y="580" width="0.4837%" height="15" fill="rgb(244,195,20)" fg:x="728784" fg:w="4604"/><text x="76.8187%" y="590.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,031 samples, 0.11%)</title><rect x="77.2152%" y="644" width="0.1083%" height="15" fill="rgb(253,56,35)" fg:x="734937" fg:w="1031"/><text x="77.4652%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,352 samples, 0.14%)</title><rect x="77.2094%" y="628" width="0.1420%" height="15" fill="rgb(210,149,44)" fg:x="734882" fg:w="1352"/><text x="77.4594%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,360 samples, 0.25%)</title><rect x="77.1037%" y="612" width="0.2480%" height="15" fill="rgb(240,135,12)" fg:x="733876" fg:w="2360"/><text x="77.3537%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,721 samples, 0.29%)</title><rect x="77.0838%" y="596" width="0.2859%" height="15" fill="rgb(251,24,50)" fg:x="733687" fg:w="2721"/><text x="77.3338%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,353 samples, 0.46%)</title><rect x="77.0583%" y="580" width="0.4573%" height="15" fill="rgb(243,200,47)" fg:x="733444" fg:w="4353"/><text x="77.3083%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,332 samples, 0.14%)</title><rect x="77.3757%" y="596" width="0.1399%" height="15" fill="rgb(224,166,26)" fg:x="736465" fg:w="1332"/><text x="77.6257%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,442 samples, 0.99%)</title><rect x="76.5269%" y="564" width="0.9920%" height="15" fill="rgb(233,0,47)" fg:x="728386" fg:w="9442"/><text x="76.7769%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,208 samples, 1.07%)</title><rect x="76.4470%" y="548" width="1.0725%" height="15" fill="rgb(253,80,5)" fg:x="727626" fg:w="10208"/><text x="76.6970%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,265 samples, 1.08%)</title><rect x="76.4413%" y="532" width="1.0785%" height="15" fill="rgb(214,133,25)" fg:x="727571" fg:w="10265"/><text x="76.6913%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,792 samples, 1.13%)</title><rect x="76.4215%" y="516" width="1.1338%" height="15" fill="rgb(209,27,14)" fg:x="727383" fg:w="10792"/><text x="76.6715%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,609 samples, 1.22%)</title><rect x="76.3443%" y="484" width="1.2197%" height="15" fill="rgb(219,102,51)" fg:x="726648" fg:w="11609"/><text x="76.5943%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,533 samples, 1.21%)</title><rect x="76.3523%" y="500" width="1.2117%" height="15" fill="rgb(237,18,16)" fg:x="726724" fg:w="11533"/><text x="76.6023%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,612 samples, 1.22%)</title><rect x="76.3442%" y="468" width="1.2200%" height="15" fill="rgb(241,85,17)" fg:x="726647" fg:w="11612"/><text x="76.5942%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,127 samples, 2.43%)</title><rect x="75.1353%" y="388" width="2.4298%" height="15" fill="rgb(236,90,42)" fg:x="715141" fg:w="23127"/><text x="75.3853%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,125 samples, 2.43%)</title><rect x="75.1355%" y="404" width="2.4296%" height="15" fill="rgb(249,57,21)" fg:x="715143" fg:w="23125"/><text x="75.3855%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,122 samples, 2.43%)</title><rect x="75.1358%" y="420" width="2.4293%" height="15" fill="rgb(243,12,36)" fg:x="715146" fg:w="23122"/><text x="75.3858%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,624 samples, 1.22%)</title><rect x="76.3439%" y="436" width="1.2213%" height="15" fill="rgb(253,128,47)" fg:x="726644" fg:w="11624"/><text x="76.5939%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,621 samples, 1.22%)</title><rect x="76.3442%" y="452" width="1.2209%" height="15" fill="rgb(207,33,20)" fg:x="726647" fg:w="11621"/><text x="76.5942%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,152 samples, 2.43%)</title><rect x="75.1343%" y="372" width="2.4324%" height="15" fill="rgb(233,215,35)" fg:x="715131" fg:w="23152"/><text x="75.3843%" y="382.50">__..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,100 samples, 2.64%)</title><rect x="74.9299%" y="356" width="2.6371%" height="15" fill="rgb(249,188,52)" fg:x="713186" fg:w="25100"/><text x="75.1799%" y="366.50">de..</text></g><g><title>simulate_single (simulation.py:45) (25,696 samples, 2.70%)</title><rect x="74.8799%" y="340" width="2.6997%" height="15" fill="rgb(225,12,32)" fg:x="712710" fg:w="25696"/><text x="75.1299%" y="350.50">si..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,252 samples, 4.65%)</title><rect x="73.1158%" y="308" width="4.6493%" height="15" fill="rgb(247,98,14)" fg:x="695919" fg:w="44252"/><text x="73.3658%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,252 samples, 4.65%)</title><rect x="73.1158%" y="324" width="4.6493%" height="15" fill="rgb(247,219,48)" fg:x="695919" fg:w="44252"/><text x="73.3658%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,363 samples, 0.14%)</title><rect x="77.6219%" y="340" width="0.1432%" height="15" fill="rgb(253,60,48)" fg:x="738808" fg:w="1363"/><text x="77.8719%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,363 samples, 0.14%)</title><rect x="77.6219%" y="356" width="0.1432%" height="15" fill="rgb(245,15,52)" fg:x="738808" fg:w="1363"/><text x="77.8719%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,363 samples, 0.14%)</title><rect x="77.6219%" y="372" width="0.1432%" height="15" fill="rgb(220,133,28)" fg:x="738808" fg:w="1363"/><text x="77.8719%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,362 samples, 0.14%)</title><rect x="77.6220%" y="388" width="0.1431%" height="15" fill="rgb(217,180,4)" fg:x="738809" fg:w="1362"/><text x="77.8720%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,362 samples, 0.14%)</title><rect x="77.6220%" y="404" width="0.1431%" height="15" fill="rgb(251,24,1)" fg:x="738809" fg:w="1362"/><text x="77.8720%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,357 samples, 0.14%)</title><rect x="77.6225%" y="420" width="0.1426%" height="15" fill="rgb(212,185,49)" fg:x="738814" fg:w="1357"/><text x="77.8725%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,212 samples, 0.13%)</title><rect x="77.6377%" y="436" width="0.1273%" height="15" fill="rgb(215,175,22)" fg:x="738959" fg:w="1212"/><text x="77.8877%" y="446.50"></text></g><g><title>process 30262:&quot;python simulation.py -p sim0.csv&quot; (44,254 samples, 4.65%)</title><rect x="73.1158%" y="84" width="4.6495%" height="15" fill="rgb(250,205,14)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="100" width="4.6495%" height="15" fill="rgb(225,211,22)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="116" width="4.6495%" height="15" fill="rgb(251,179,42)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="132" width="4.6495%" height="15" fill="rgb(208,216,51)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="148" width="4.6495%" height="15" fill="rgb(235,36,11)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="164" width="4.6495%" height="15" fill="rgb(213,189,28)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="180" width="4.6495%" height="15" fill="rgb(227,203,42)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="196" width="4.6495%" height="15" fill="rgb(244,72,36)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="212" width="4.6495%" height="15" fill="rgb(213,53,17)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="228" width="4.6495%" height="15" fill="rgb(207,167,3)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="244" width="4.6495%" height="15" fill="rgb(216,98,30)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="260" width="4.6495%" height="15" fill="rgb(236,123,15)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="276" width="4.6495%" height="15" fill="rgb(248,81,50)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,254 samples, 4.65%)</title><rect x="73.1158%" y="292" width="4.6495%" height="15" fill="rgb(214,120,4)" fg:x="695919" fg:w="44254"/><text x="73.3658%" y="302.50">run (..</text></g><g><title>extension (tdt.py:36) (2,436 samples, 0.26%)</title><rect x="78.8418%" y="388" width="0.2559%" height="15" fill="rgb(208,179,34)" fg:x="750419" fg:w="2436"/><text x="79.0918%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,299 samples, 0.14%)</title><rect x="78.9612%" y="404" width="0.1365%" height="15" fill="rgb(227,140,7)" fg:x="751556" fg:w="1299"/><text x="79.2112%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,084 samples, 0.32%)</title><rect x="79.1083%" y="388" width="0.3240%" height="15" fill="rgb(214,22,6)" fg:x="752956" fg:w="3084"/><text x="79.3583%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (15,705 samples, 1.65%)</title><rect x="77.8786%" y="340" width="1.6500%" height="15" fill="rgb(207,137,27)" fg:x="741252" fg:w="15705"/><text x="78.1286%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,704 samples, 1.65%)</title><rect x="77.8787%" y="356" width="1.6499%" height="15" fill="rgb(210,8,46)" fg:x="741253" fg:w="15704"/><text x="78.1287%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,607 samples, 1.64%)</title><rect x="77.8889%" y="372" width="1.6397%" height="15" fill="rgb(240,16,54)" fg:x="741350" fg:w="15607"/><text x="78.1389%" y="382.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (1,015 samples, 0.11%)</title><rect x="79.5861%" y="404" width="0.1066%" height="15" fill="rgb(211,209,29)" fg:x="757504" fg:w="1015"/><text x="79.8361%" y="414.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:840) (997 samples, 0.10%)</title><rect x="79.5880%" y="420" width="0.1047%" height="15" fill="rgb(226,228,24)" fg:x="757522" fg:w="997"/><text x="79.8380%" y="430.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:940) (984 samples, 0.10%)</title><rect x="79.5894%" y="436" width="0.1034%" height="15" fill="rgb(222,84,9)" fg:x="757535" fg:w="984"/><text x="79.8394%" y="446.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1067) (983 samples, 0.10%)</title><rect x="79.5895%" y="452" width="0.1033%" height="15" fill="rgb(234,203,30)" fg:x="757536" fg:w="983"/><text x="79.8395%" y="462.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/construction.py:1067) (983 samples, 0.10%)</title><rect x="79.5895%" y="468" width="0.1033%" height="15" fill="rgb(238,109,14)" fg:x="757536" fg:w="983"/><text x="79.8395%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (1,016 samples, 0.11%)</title><rect x="79.5861%" y="388" width="0.1067%" height="15" fill="rgb(233,206,34)" fg:x="757504" fg:w="1016"/><text x="79.8361%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,894 samples, 0.20%)</title><rect x="79.5847%" y="372" width="0.1990%" height="15" fill="rgb(220,167,47)" fg:x="757490" fg:w="1894"/><text x="79.8347%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,541 samples, 0.16%)</title><rect x="79.7928%" y="452" width="0.1619%" height="15" fill="rgb(238,105,10)" fg:x="759471" fg:w="1541"/><text x="80.0428%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,431 samples, 0.15%)</title><rect x="79.8044%" y="468" width="0.1503%" height="15" fill="rgb(213,227,17)" fg:x="759581" fg:w="1431"/><text x="80.0544%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,896 samples, 0.20%)</title><rect x="80.0482%" y="500" width="0.1992%" height="15" fill="rgb(217,132,38)" fg:x="761902" fg:w="1896"/><text x="80.2982%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,851 samples, 0.30%)</title><rect x="79.9837%" y="484" width="0.2995%" height="15" fill="rgb(242,146,4)" fg:x="761288" fg:w="2851"/><text x="80.2337%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (973 samples, 0.10%)</title><rect x="80.4263%" y="532" width="0.1022%" height="15" fill="rgb(212,61,9)" fg:x="765501" fg:w="973"/><text x="80.6763%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,135 samples, 0.12%)</title><rect x="80.4200%" y="516" width="0.1192%" height="15" fill="rgb(247,126,22)" fg:x="765441" fg:w="1135"/><text x="80.6700%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,607 samples, 0.17%)</title><rect x="80.3907%" y="500" width="0.1688%" height="15" fill="rgb(220,196,2)" fg:x="765162" fg:w="1607"/><text x="80.6407%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,576 samples, 0.48%)</title><rect x="80.2832%" y="484" width="0.4808%" height="15" fill="rgb(208,46,4)" fg:x="764139" fg:w="4576"/><text x="80.5332%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,768 samples, 0.82%)</title><rect x="79.9547%" y="452" width="0.8161%" height="15" fill="rgb(252,104,46)" fg:x="761012" fg:w="7768"/><text x="80.2047%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,705 samples, 0.81%)</title><rect x="79.9613%" y="468" width="0.8095%" height="15" fill="rgb(237,152,48)" fg:x="761075" fg:w="7705"/><text x="80.2113%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,595 samples, 1.22%)</title><rect x="79.7925%" y="436" width="1.2182%" height="15" fill="rgb(221,59,37)" fg:x="759468" fg:w="11595"/><text x="80.0425%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,178 samples, 0.23%)</title><rect x="80.7819%" y="452" width="0.2288%" height="15" fill="rgb(209,202,51)" fg:x="768885" fg:w="2178"/><text x="81.0319%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,352 samples, 0.14%)</title><rect x="80.8686%" y="468" width="0.1420%" height="15" fill="rgb(228,81,30)" fg:x="769711" fg:w="1352"/><text x="81.1186%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,446 samples, 0.47%)</title><rect x="81.2501%" y="596" width="0.4671%" height="15" fill="rgb(227,42,39)" fg:x="773342" fg:w="4446"/><text x="81.5001%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,238 samples, 0.24%)</title><rect x="81.4821%" y="612" width="0.2351%" height="15" fill="rgb(221,26,2)" fg:x="775550" fg:w="2238"/><text x="81.7321%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,690 samples, 0.49%)</title><rect x="81.2305%" y="580" width="0.4927%" height="15" fill="rgb(254,61,31)" fg:x="773155" fg:w="4690"/><text x="81.4805%" y="590.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (995 samples, 0.10%)</title><rect x="81.8926%" y="660" width="0.1045%" height="15" fill="rgb(222,173,38)" fg:x="779457" fg:w="995"/><text x="82.1426%" y="670.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,105 samples, 0.12%)</title><rect x="81.8865%" y="644" width="0.1161%" height="15" fill="rgb(218,50,12)" fg:x="779399" fg:w="1105"/><text x="82.1365%" y="654.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,470 samples, 0.26%)</title><rect x="81.7754%" y="612" width="0.2595%" height="15" fill="rgb(223,88,40)" fg:x="778342" fg:w="2470"/><text x="82.0254%" y="622.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,481 samples, 0.16%)</title><rect x="81.8794%" y="628" width="0.1556%" height="15" fill="rgb(237,54,19)" fg:x="779331" fg:w="1481"/><text x="82.1294%" y="638.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,827 samples, 0.30%)</title><rect x="81.7561%" y="596" width="0.2970%" height="15" fill="rgb(251,129,25)" fg:x="778158" fg:w="2827"/><text x="82.0061%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,454 samples, 0.47%)</title><rect x="81.7281%" y="580" width="0.4680%" height="15" fill="rgb(238,97,19)" fg:x="777891" fg:w="4454"/><text x="81.9781%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,306 samples, 0.14%)</title><rect x="82.0588%" y="596" width="0.1372%" height="15" fill="rgb(240,169,18)" fg:x="781039" fg:w="1306"/><text x="82.3088%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,611 samples, 1.01%)</title><rect x="81.1895%" y="564" width="1.0098%" height="15" fill="rgb(230,187,49)" fg:x="772765" fg:w="9611"/><text x="81.4395%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,341 samples, 1.09%)</title><rect x="81.1135%" y="548" width="1.0865%" height="15" fill="rgb(209,44,26)" fg:x="772042" fg:w="10341"/><text x="81.3635%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,386 samples, 1.09%)</title><rect x="81.1091%" y="532" width="1.0912%" height="15" fill="rgb(244,0,6)" fg:x="772000" fg:w="10386"/><text x="81.3591%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,837 samples, 1.14%)</title><rect x="81.0927%" y="516" width="1.1386%" height="15" fill="rgb(248,18,21)" fg:x="771844" fg:w="10837"/><text x="81.3427%" y="526.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,694 samples, 1.23%)</title><rect x="81.0108%" y="468" width="1.2286%" height="15" fill="rgb(245,180,19)" fg:x="771064" fg:w="11694"/><text x="81.2608%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,691 samples, 1.23%)</title><rect x="81.0111%" y="484" width="1.2283%" height="15" fill="rgb(252,118,36)" fg:x="771067" fg:w="11691"/><text x="81.2611%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,581 samples, 1.22%)</title><rect x="81.0227%" y="500" width="1.2167%" height="15" fill="rgb(210,224,19)" fg:x="771177" fg:w="11581"/><text x="81.2727%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,360 samples, 2.45%)</title><rect x="79.7852%" y="388" width="2.4543%" height="15" fill="rgb(218,30,24)" fg:x="759399" fg:w="23360"/><text x="80.0352%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,358 samples, 2.45%)</title><rect x="79.7854%" y="404" width="2.4541%" height="15" fill="rgb(219,75,50)" fg:x="759401" fg:w="23358"/><text x="80.0354%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,355 samples, 2.45%)</title><rect x="79.7858%" y="420" width="2.4538%" height="15" fill="rgb(234,72,50)" fg:x="759404" fg:w="23355"/><text x="80.0358%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,696 samples, 1.23%)</title><rect x="81.0107%" y="436" width="1.2288%" height="15" fill="rgb(219,100,48)" fg:x="771063" fg:w="11696"/><text x="81.2607%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,695 samples, 1.23%)</title><rect x="81.0108%" y="452" width="1.2287%" height="15" fill="rgb(253,5,41)" fg:x="771064" fg:w="11695"/><text x="81.2608%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,387 samples, 2.46%)</title><rect x="79.7837%" y="372" width="2.4571%" height="15" fill="rgb(247,181,11)" fg:x="759384" fg:w="23387"/><text x="80.0337%" y="382.50">__..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,301 samples, 2.66%)</title><rect x="79.5827%" y="356" width="2.6582%" height="15" fill="rgb(222,223,25)" fg:x="757471" fg:w="25301"/><text x="79.8327%" y="366.50">de..</text></g><g><title>simulate_single (simulation.py:45) (25,952 samples, 2.73%)</title><rect x="79.5287%" y="340" width="2.7266%" height="15" fill="rgb(214,198,28)" fg:x="756957" fg:w="25952"/><text x="79.7787%" y="350.50">si..</text></g><g><title>process 30263:&quot;python simulation.py -p sim0.csv&quot; (44,795 samples, 4.71%)</title><rect x="77.7653%" y="84" width="4.7063%" height="15" fill="rgb(230,46,43)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="100" width="4.7063%" height="15" fill="rgb(233,65,53)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="116" width="4.7063%" height="15" fill="rgb(221,121,27)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="132" width="4.7063%" height="15" fill="rgb(247,70,47)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="148" width="4.7063%" height="15" fill="rgb(228,85,35)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="164" width="4.7063%" height="15" fill="rgb(209,50,18)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="180" width="4.7063%" height="15" fill="rgb(250,19,35)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="196" width="4.7063%" height="15" fill="rgb(253,107,29)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="212" width="4.7063%" height="15" fill="rgb(252,179,29)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="228" width="4.7063%" height="15" fill="rgb(238,194,6)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="244" width="4.7063%" height="15" fill="rgb(238,164,29)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="260" width="4.7063%" height="15" fill="rgb(224,25,9)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="276" width="4.7063%" height="15" fill="rgb(244,153,23)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="292" width="4.7063%" height="15" fill="rgb(212,203,14)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="302.50">run (..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,795 samples, 4.71%)</title><rect x="77.7653%" y="308" width="4.7063%" height="15" fill="rgb(220,164,20)" fg:x="740173" fg:w="44795"/><text x="78.0153%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,794 samples, 4.71%)</title><rect x="77.7654%" y="324" width="4.7062%" height="15" fill="rgb(222,203,48)" fg:x="740174" fg:w="44794"/><text x="78.0154%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,593 samples, 0.17%)</title><rect x="82.3042%" y="340" width="0.1674%" height="15" fill="rgb(215,159,22)" fg:x="783375" fg:w="1593"/><text x="82.5542%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,593 samples, 0.17%)</title><rect x="82.3042%" y="356" width="0.1674%" height="15" fill="rgb(216,183,47)" fg:x="783375" fg:w="1593"/><text x="82.5542%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,593 samples, 0.17%)</title><rect x="82.3042%" y="372" width="0.1674%" height="15" fill="rgb(229,195,25)" fg:x="783375" fg:w="1593"/><text x="82.5542%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,593 samples, 0.17%)</title><rect x="82.3042%" y="388" width="0.1674%" height="15" fill="rgb(224,132,51)" fg:x="783375" fg:w="1593"/><text x="82.5542%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,592 samples, 0.17%)</title><rect x="82.3043%" y="404" width="0.1673%" height="15" fill="rgb(240,63,7)" fg:x="783376" fg:w="1592"/><text x="82.5543%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,585 samples, 0.17%)</title><rect x="82.3051%" y="420" width="0.1665%" height="15" fill="rgb(249,182,41)" fg:x="783383" fg:w="1585"/><text x="82.5551%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,389 samples, 0.15%)</title><rect x="82.3257%" y="436" width="0.1459%" height="15" fill="rgb(243,47,26)" fg:x="783579" fg:w="1389"/><text x="82.5757%" y="446.50"></text></g><g><title>extension (tdt.py:34) (976 samples, 0.10%)</title><rect x="83.4406%" y="388" width="0.1025%" height="15" fill="rgb(233,48,2)" fg:x="794191" fg:w="976"/><text x="83.6906%" y="398.50"></text></g><g><title>extension (tdt.py:36) (2,366 samples, 0.25%)</title><rect x="83.5525%" y="388" width="0.2486%" height="15" fill="rgb(244,165,34)" fg:x="795256" fg:w="2366"/><text x="83.8025%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,266 samples, 0.13%)</title><rect x="83.6681%" y="404" width="0.1330%" height="15" fill="rgb(207,89,7)" fg:x="796356" fg:w="1266"/><text x="83.9181%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,094 samples, 0.33%)</title><rect x="83.8127%" y="388" width="0.3251%" height="15" fill="rgb(244,117,36)" fg:x="797733" fg:w="3094"/><text x="84.0627%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (15,779 samples, 1.66%)</title><rect x="82.5745%" y="340" width="1.6578%" height="15" fill="rgb(226,144,34)" fg:x="785947" fg:w="15779"/><text x="82.8245%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,779 samples, 1.66%)</title><rect x="82.5745%" y="356" width="1.6578%" height="15" fill="rgb(213,23,19)" fg:x="785947" fg:w="15779"/><text x="82.8245%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,672 samples, 1.65%)</title><rect x="82.5857%" y="372" width="1.6466%" height="15" fill="rgb(217,75,12)" fg:x="786054" fg:w="15672"/><text x="82.8357%" y="382.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (971 samples, 0.10%)</title><rect x="84.2820%" y="404" width="0.1020%" height="15" fill="rgb(224,159,17)" fg:x="802199" fg:w="971"/><text x="84.5320%" y="414.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (974 samples, 0.10%)</title><rect x="84.2820%" y="388" width="0.1023%" height="15" fill="rgb(217,118,1)" fg:x="802199" fg:w="974"/><text x="84.5320%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,881 samples, 0.20%)</title><rect x="84.2800%" y="372" width="0.1976%" height="15" fill="rgb(232,180,48)" fg:x="802180" fg:w="1881"/><text x="84.5300%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,560 samples, 0.16%)</title><rect x="84.4861%" y="452" width="0.1639%" height="15" fill="rgb(230,27,33)" fg:x="804142" fg:w="1560"/><text x="84.7361%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,450 samples, 0.15%)</title><rect x="84.4976%" y="468" width="0.1523%" height="15" fill="rgb(205,31,21)" fg:x="804252" fg:w="1450"/><text x="84.7476%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,925 samples, 0.20%)</title><rect x="84.7444%" y="500" width="0.2022%" height="15" fill="rgb(253,59,4)" fg:x="806601" fg:w="1925"/><text x="84.9944%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,935 samples, 0.31%)</title><rect x="84.6736%" y="484" width="0.3084%" height="15" fill="rgb(224,201,9)" fg:x="805927" fg:w="2935"/><text x="84.9236%" y="494.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,071 samples, 0.11%)</title><rect x="85.1235%" y="516" width="0.1125%" height="15" fill="rgb(229,206,30)" fg:x="810209" fg:w="1071"/><text x="85.3735%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,559 samples, 0.16%)</title><rect x="85.0945%" y="500" width="0.1638%" height="15" fill="rgb(212,67,47)" fg:x="809933" fg:w="1559"/><text x="85.3445%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,473 samples, 0.47%)</title><rect x="84.9820%" y="484" width="0.4699%" height="15" fill="rgb(211,96,50)" fg:x="808862" fg:w="4473"/><text x="85.2320%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,690 samples, 0.81%)</title><rect x="84.6500%" y="452" width="0.8079%" height="15" fill="rgb(252,114,18)" fg:x="805702" fg:w="7690"/><text x="84.9000%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,650 samples, 0.80%)</title><rect x="84.6542%" y="468" width="0.8037%" height="15" fill="rgb(223,58,37)" fg:x="805742" fg:w="7650"/><text x="84.9042%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,642 samples, 1.22%)</title><rect x="84.4853%" y="436" width="1.2232%" height="15" fill="rgb(237,70,4)" fg:x="804134" fg:w="11642"/><text x="84.7353%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,280 samples, 0.24%)</title><rect x="85.4689%" y="452" width="0.2395%" height="15" fill="rgb(244,85,46)" fg:x="813496" fg:w="2280"/><text x="85.7189%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,456 samples, 0.15%)</title><rect x="85.5554%" y="468" width="0.1530%" height="15" fill="rgb(223,39,52)" fg:x="814320" fg:w="1456"/><text x="85.8054%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,369 samples, 0.46%)</title><rect x="85.9455%" y="596" width="0.4590%" height="15" fill="rgb(218,200,14)" fg:x="818033" fg:w="4369"/><text x="86.1955%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,228 samples, 0.23%)</title><rect x="86.1705%" y="612" width="0.2341%" height="15" fill="rgb(208,171,16)" fg:x="820174" fg:w="2228"/><text x="86.4205%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,634 samples, 0.49%)</title><rect x="85.9244%" y="580" width="0.4869%" height="15" fill="rgb(234,200,18)" fg:x="817832" fg:w="4634"/><text x="86.1744%" y="590.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (953 samples, 0.10%)</title><rect x="86.5751%" y="660" width="0.1001%" height="15" fill="rgb(228,45,11)" fg:x="824025" fg:w="953"/><text x="86.8251%" y="670.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,052 samples, 0.11%)</title><rect x="86.5700%" y="644" width="0.1105%" height="15" fill="rgb(237,182,11)" fg:x="823977" fg:w="1052"/><text x="86.8200%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,425 samples, 0.15%)</title><rect x="86.5637%" y="628" width="0.1497%" height="15" fill="rgb(241,175,49)" fg:x="823917" fg:w="1425"/><text x="86.8137%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,432 samples, 0.26%)</title><rect x="86.4580%" y="612" width="0.2555%" height="15" fill="rgb(247,38,35)" fg:x="822911" fg:w="2432"/><text x="86.7080%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,748 samples, 0.29%)</title><rect x="86.4427%" y="596" width="0.2887%" height="15" fill="rgb(228,39,49)" fg:x="822765" fg:w="2748"/><text x="86.6927%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,323 samples, 0.45%)</title><rect x="86.4160%" y="580" width="0.4542%" height="15" fill="rgb(226,101,26)" fg:x="822511" fg:w="4323"/><text x="86.6660%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,275 samples, 0.13%)</title><rect x="86.7362%" y="596" width="0.1340%" height="15" fill="rgb(206,141,19)" fg:x="825559" fg:w="1275"/><text x="86.9862%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,398 samples, 0.99%)</title><rect x="85.8856%" y="564" width="0.9874%" height="15" fill="rgb(211,200,13)" fg:x="817463" fg:w="9398"/><text x="86.1356%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,134 samples, 1.06%)</title><rect x="85.8092%" y="548" width="1.0647%" height="15" fill="rgb(241,121,6)" fg:x="816735" fg:w="10134"/><text x="86.0592%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,207 samples, 1.07%)</title><rect x="85.8017%" y="532" width="1.0724%" height="15" fill="rgb(234,221,29)" fg:x="816664" fg:w="10207"/><text x="86.0517%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,676 samples, 1.12%)</title><rect x="85.7873%" y="516" width="1.1217%" height="15" fill="rgb(229,136,5)" fg:x="816527" fg:w="10676"/><text x="86.0373%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,497 samples, 1.21%)</title><rect x="85.7087%" y="484" width="1.2079%" height="15" fill="rgb(238,36,11)" fg:x="815779" fg:w="11497"/><text x="85.9587%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,385 samples, 1.20%)</title><rect x="85.7205%" y="500" width="1.1961%" height="15" fill="rgb(251,55,41)" fg:x="815891" fg:w="11385"/><text x="85.9705%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,498 samples, 1.21%)</title><rect x="85.7087%" y="468" width="1.2080%" height="15" fill="rgb(242,34,40)" fg:x="815779" fg:w="11498"/><text x="85.9587%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,215 samples, 2.44%)</title><rect x="84.4784%" y="388" width="2.4391%" height="15" fill="rgb(215,42,17)" fg:x="804069" fg:w="23215"/><text x="84.7284%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,213 samples, 2.44%)</title><rect x="84.4786%" y="404" width="2.4388%" height="15" fill="rgb(207,44,46)" fg:x="804071" fg:w="23213"/><text x="84.7286%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,208 samples, 2.44%)</title><rect x="84.4792%" y="420" width="2.4383%" height="15" fill="rgb(211,206,28)" fg:x="804076" fg:w="23208"/><text x="84.7292%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,508 samples, 1.21%)</title><rect x="85.7084%" y="436" width="1.2091%" height="15" fill="rgb(237,167,16)" fg:x="815776" fg:w="11508"/><text x="85.9584%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,506 samples, 1.21%)</title><rect x="85.7086%" y="452" width="1.2089%" height="15" fill="rgb(233,66,6)" fg:x="815778" fg:w="11506"/><text x="85.9586%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,230 samples, 2.44%)</title><rect x="84.4776%" y="372" width="2.4406%" height="15" fill="rgb(246,123,29)" fg:x="804061" fg:w="23230"/><text x="84.7276%" y="382.50">__..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,130 samples, 2.64%)</title><rect x="84.2782%" y="356" width="2.6402%" height="15" fill="rgb(209,62,40)" fg:x="802163" fg:w="25130"/><text x="84.5282%" y="366.50">de..</text></g><g><title>simulate_single (simulation.py:45) (25,690 samples, 2.70%)</title><rect x="84.2323%" y="340" width="2.6991%" height="15" fill="rgb(218,4,25)" fg:x="801726" fg:w="25690"/><text x="84.4823%" y="350.50">si..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,244 samples, 4.65%)</title><rect x="82.4716%" y="308" width="4.6484%" height="15" fill="rgb(253,91,49)" fg:x="784968" fg:w="44244"/><text x="82.7216%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,244 samples, 4.65%)</title><rect x="82.4716%" y="324" width="4.6484%" height="15" fill="rgb(228,155,29)" fg:x="784968" fg:w="44244"/><text x="82.7216%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,394 samples, 0.15%)</title><rect x="86.9736%" y="340" width="0.1465%" height="15" fill="rgb(243,57,37)" fg:x="827818" fg:w="1394"/><text x="87.2236%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,394 samples, 0.15%)</title><rect x="86.9736%" y="356" width="0.1465%" height="15" fill="rgb(244,167,17)" fg:x="827818" fg:w="1394"/><text x="87.2236%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,394 samples, 0.15%)</title><rect x="86.9736%" y="372" width="0.1465%" height="15" fill="rgb(207,181,38)" fg:x="827818" fg:w="1394"/><text x="87.2236%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,394 samples, 0.15%)</title><rect x="86.9736%" y="388" width="0.1465%" height="15" fill="rgb(211,8,23)" fg:x="827818" fg:w="1394"/><text x="87.2236%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,393 samples, 0.15%)</title><rect x="86.9737%" y="404" width="0.1464%" height="15" fill="rgb(235,11,44)" fg:x="827819" fg:w="1393"/><text x="87.2237%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,390 samples, 0.15%)</title><rect x="86.9740%" y="420" width="0.1460%" height="15" fill="rgb(248,18,52)" fg:x="827822" fg:w="1390"/><text x="87.2240%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,215 samples, 0.13%)</title><rect x="86.9924%" y="436" width="0.1277%" height="15" fill="rgb(208,4,7)" fg:x="827997" fg:w="1215"/><text x="87.2424%" y="446.50"></text></g><g><title>process 30264:&quot;python simulation.py -p sim0.csv&quot; (44,245 samples, 4.65%)</title><rect x="82.4716%" y="84" width="4.6485%" height="15" fill="rgb(240,17,39)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="100" width="4.6485%" height="15" fill="rgb(207,170,3)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="116" width="4.6485%" height="15" fill="rgb(236,100,52)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="132" width="4.6485%" height="15" fill="rgb(246,78,51)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="148" width="4.6485%" height="15" fill="rgb(211,17,15)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="164" width="4.6485%" height="15" fill="rgb(209,59,46)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="180" width="4.6485%" height="15" fill="rgb(210,92,25)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="196" width="4.6485%" height="15" fill="rgb(238,174,52)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="212" width="4.6485%" height="15" fill="rgb(230,73,7)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="228" width="4.6485%" height="15" fill="rgb(243,124,40)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="244" width="4.6485%" height="15" fill="rgb(244,170,11)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="260" width="4.6485%" height="15" fill="rgb(207,114,54)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="276" width="4.6485%" height="15" fill="rgb(205,42,20)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,245 samples, 4.65%)</title><rect x="82.4716%" y="292" width="4.6485%" height="15" fill="rgb(230,30,28)" fg:x="784968" fg:w="44245"/><text x="82.7216%" y="302.50">run (..</text></g><g><title>extension (tdt.py:34) (988 samples, 0.10%)</title><rect x="88.0875%" y="388" width="0.1038%" height="15" fill="rgb(205,73,54)" fg:x="838420" fg:w="988"/><text x="88.3375%" y="398.50"></text></g><g><title>extension (tdt.py:36) (2,392 samples, 0.25%)</title><rect x="88.2008%" y="388" width="0.2513%" height="15" fill="rgb(254,227,23)" fg:x="839499" fg:w="2392"/><text x="88.4508%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,240 samples, 0.13%)</title><rect x="88.3219%" y="404" width="0.1303%" height="15" fill="rgb(228,202,34)" fg:x="840651" fg:w="1240"/><text x="88.5719%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,134 samples, 0.33%)</title><rect x="88.4645%" y="388" width="0.3293%" height="15" fill="rgb(222,225,37)" fg:x="842009" fg:w="3134"/><text x="88.7145%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (15,893 samples, 1.67%)</title><rect x="87.2180%" y="340" width="1.6698%" height="15" fill="rgb(221,14,54)" fg:x="830144" fg:w="15893"/><text x="87.4680%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,892 samples, 1.67%)</title><rect x="87.2181%" y="356" width="1.6697%" height="15" fill="rgb(254,102,2)" fg:x="830145" fg:w="15892"/><text x="87.4681%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (15,777 samples, 1.66%)</title><rect x="87.2301%" y="372" width="1.6576%" height="15" fill="rgb(232,104,17)" fg:x="830260" fg:w="15777"/><text x="87.4801%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,904 samples, 0.20%)</title><rect x="88.9413%" y="372" width="0.2000%" height="15" fill="rgb(250,220,14)" fg:x="846547" fg:w="1904"/><text x="89.1913%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,598 samples, 0.17%)</title><rect x="89.1504%" y="452" width="0.1679%" height="15" fill="rgb(241,158,9)" fg:x="848537" fg:w="1598"/><text x="89.4004%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,504 samples, 0.16%)</title><rect x="89.1603%" y="468" width="0.1580%" height="15" fill="rgb(246,9,43)" fg:x="848631" fg:w="1504"/><text x="89.4103%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,945 samples, 0.20%)</title><rect x="89.4118%" y="500" width="0.2043%" height="15" fill="rgb(206,73,33)" fg:x="851025" fg:w="1945"/><text x="89.6618%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,938 samples, 0.31%)</title><rect x="89.3448%" y="484" width="0.3087%" height="15" fill="rgb(222,79,8)" fg:x="850387" fg:w="2938"/><text x="89.5948%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (988 samples, 0.10%)</title><rect x="89.7982%" y="532" width="0.1038%" height="15" fill="rgb(234,8,54)" fg:x="854703" fg:w="988"/><text x="90.0482%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,153 samples, 0.12%)</title><rect x="89.7920%" y="516" width="0.1211%" height="15" fill="rgb(209,134,38)" fg:x="854644" fg:w="1153"/><text x="90.0420%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,658 samples, 0.17%)</title><rect x="89.7649%" y="500" width="0.1742%" height="15" fill="rgb(230,127,29)" fg:x="854386" fg:w="1658"/><text x="90.0149%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,598 samples, 0.48%)</title><rect x="89.6534%" y="484" width="0.4831%" height="15" fill="rgb(242,44,41)" fg:x="853325" fg:w="4598"/><text x="89.9034%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,854 samples, 0.83%)</title><rect x="89.3183%" y="452" width="0.8252%" height="15" fill="rgb(222,56,43)" fg:x="850135" fg:w="7854"/><text x="89.5683%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,808 samples, 0.82%)</title><rect x="89.3231%" y="468" width="0.8203%" height="15" fill="rgb(238,39,47)" fg:x="850181" fg:w="7808"/><text x="89.5731%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,773 samples, 1.24%)</title><rect x="89.1497%" y="436" width="1.2369%" height="15" fill="rgb(226,79,43)" fg:x="848530" fg:w="11773"/><text x="89.3997%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,216 samples, 0.23%)</title><rect x="90.1538%" y="452" width="0.2328%" height="15" fill="rgb(242,105,53)" fg:x="858087" fg:w="2216"/><text x="90.4038%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,424 samples, 0.15%)</title><rect x="90.2370%" y="468" width="0.1496%" height="15" fill="rgb(251,132,46)" fg:x="858879" fg:w="1424"/><text x="90.4870%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,542 samples, 0.48%)</title><rect x="90.6375%" y="596" width="0.4772%" height="15" fill="rgb(231,77,14)" fg:x="862691" fg:w="4542"/><text x="90.8875%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,267 samples, 0.24%)</title><rect x="90.8765%" y="612" width="0.2382%" height="15" fill="rgb(240,135,9)" fg:x="864966" fg:w="2267"/><text x="91.1265%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,845 samples, 0.51%)</title><rect x="90.6142%" y="580" width="0.5090%" height="15" fill="rgb(248,109,14)" fg:x="862470" fg:w="4845"/><text x="90.8642%" y="590.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,037 samples, 0.11%)</title><rect x="91.2745%" y="644" width="0.1090%" height="15" fill="rgb(227,146,52)" fg:x="868754" fg:w="1037"/><text x="91.5245%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,372 samples, 0.14%)</title><rect x="91.2678%" y="628" width="0.1441%" height="15" fill="rgb(232,54,3)" fg:x="868691" fg:w="1372"/><text x="91.5178%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,304 samples, 0.24%)</title><rect x="91.1700%" y="612" width="0.2421%" height="15" fill="rgb(229,201,43)" fg:x="867760" fg:w="2304"/><text x="91.4200%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,611 samples, 0.27%)</title><rect x="91.1533%" y="596" width="0.2743%" height="15" fill="rgb(252,161,33)" fg:x="867601" fg:w="2611"/><text x="91.4033%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,217 samples, 0.44%)</title><rect x="91.1292%" y="580" width="0.4431%" height="15" fill="rgb(226,146,40)" fg:x="867371" fg:w="4217"/><text x="91.3792%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,313 samples, 0.14%)</title><rect x="91.4343%" y="596" width="0.1379%" height="15" fill="rgb(219,47,25)" fg:x="870275" fg:w="1313"/><text x="91.6843%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,566 samples, 1.01%)</title><rect x="90.5696%" y="564" width="1.0050%" height="15" fill="rgb(250,135,13)" fg:x="862045" fg:w="9566"/><text x="90.8196%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,356 samples, 1.09%)</title><rect x="90.4868%" y="548" width="1.0880%" height="15" fill="rgb(219,229,18)" fg:x="861257" fg:w="10356"/><text x="90.7368%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,414 samples, 1.09%)</title><rect x="90.4809%" y="532" width="1.0941%" height="15" fill="rgb(217,152,27)" fg:x="861201" fg:w="10414"/><text x="90.7309%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (10,899 samples, 1.15%)</title><rect x="90.4636%" y="516" width="1.1451%" height="15" fill="rgb(225,71,47)" fg:x="861036" fg:w="10899"/><text x="90.7136%" y="526.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,726 samples, 1.23%)</title><rect x="90.3869%" y="484" width="1.2320%" height="15" fill="rgb(220,139,14)" fg:x="860306" fg:w="11726"/><text x="90.6369%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,623 samples, 1.22%)</title><rect x="90.3977%" y="500" width="1.2212%" height="15" fill="rgb(247,54,32)" fg:x="860409" fg:w="11623"/><text x="90.6477%" y="510.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,729 samples, 1.23%)</title><rect x="90.3868%" y="468" width="1.2323%" height="15" fill="rgb(252,131,39)" fg:x="860305" fg:w="11729"/><text x="90.6368%" y="478.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,571 samples, 2.48%)</title><rect x="89.1428%" y="388" width="2.4765%" height="15" fill="rgb(210,108,39)" fg:x="848465" fg:w="23571"/><text x="89.3928%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,569 samples, 2.48%)</title><rect x="89.1430%" y="404" width="2.4762%" height="15" fill="rgb(205,23,29)" fg:x="848467" fg:w="23569"/><text x="89.3930%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,561 samples, 2.48%)</title><rect x="89.1439%" y="420" width="2.4754%" height="15" fill="rgb(246,139,46)" fg:x="848475" fg:w="23561"/><text x="89.3939%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,733 samples, 1.23%)</title><rect x="90.3866%" y="436" width="1.2327%" height="15" fill="rgb(250,81,26)" fg:x="860303" fg:w="11733"/><text x="90.6366%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,731 samples, 1.23%)</title><rect x="90.3868%" y="452" width="1.2325%" height="15" fill="rgb(214,104,7)" fg:x="860305" fg:w="11731"/><text x="90.6368%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,589 samples, 2.48%)</title><rect x="89.1414%" y="372" width="2.4783%" height="15" fill="rgb(233,189,8)" fg:x="848451" fg:w="23589"/><text x="89.3914%" y="382.50">__..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,505 samples, 2.68%)</title><rect x="88.9403%" y="356" width="2.6796%" height="15" fill="rgb(228,141,17)" fg:x="846537" fg:w="25505"/><text x="89.1903%" y="366.50">de..</text></g><g><title>simulate_single (simulation.py:45) (26,113 samples, 2.74%)</title><rect x="88.8877%" y="340" width="2.7435%" height="15" fill="rgb(247,157,1)" fg:x="846037" fg:w="26113"/><text x="89.1377%" y="350.50">si..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,778 samples, 4.70%)</title><rect x="87.1201%" y="308" width="4.7045%" height="15" fill="rgb(249,225,5)" fg:x="829213" fg:w="44778"/><text x="87.3701%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,778 samples, 4.70%)</title><rect x="87.1201%" y="324" width="4.7045%" height="15" fill="rgb(242,55,13)" fg:x="829213" fg:w="44778"/><text x="87.3701%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,417 samples, 0.15%)</title><rect x="91.6758%" y="340" width="0.1489%" height="15" fill="rgb(230,49,50)" fg:x="872574" fg:w="1417"/><text x="91.9258%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,417 samples, 0.15%)</title><rect x="91.6758%" y="356" width="0.1489%" height="15" fill="rgb(241,111,38)" fg:x="872574" fg:w="1417"/><text x="91.9258%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,417 samples, 0.15%)</title><rect x="91.6758%" y="372" width="0.1489%" height="15" fill="rgb(252,155,4)" fg:x="872574" fg:w="1417"/><text x="91.9258%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,416 samples, 0.15%)</title><rect x="91.6759%" y="388" width="0.1488%" height="15" fill="rgb(212,69,32)" fg:x="872575" fg:w="1416"/><text x="91.9259%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,416 samples, 0.15%)</title><rect x="91.6759%" y="404" width="0.1488%" height="15" fill="rgb(243,107,47)" fg:x="872575" fg:w="1416"/><text x="91.9259%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,415 samples, 0.15%)</title><rect x="91.6760%" y="420" width="0.1487%" height="15" fill="rgb(247,130,12)" fg:x="872576" fg:w="1415"/><text x="91.9260%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,262 samples, 0.13%)</title><rect x="91.6921%" y="436" width="0.1326%" height="15" fill="rgb(233,74,16)" fg:x="872729" fg:w="1262"/><text x="91.9421%" y="446.50"></text></g><g><title>process 30265:&quot;python simulation.py -p sim0.csv&quot; (44,779 samples, 4.70%)</title><rect x="87.1201%" y="84" width="4.7046%" height="15" fill="rgb(208,58,18)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="100" width="4.7046%" height="15" fill="rgb(242,225,1)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="116" width="4.7046%" height="15" fill="rgb(249,39,40)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="132" width="4.7046%" height="15" fill="rgb(207,72,44)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="148" width="4.7046%" height="15" fill="rgb(215,193,12)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="164" width="4.7046%" height="15" fill="rgb(248,41,39)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="180" width="4.7046%" height="15" fill="rgb(253,85,4)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="196" width="4.7046%" height="15" fill="rgb(243,70,31)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="212" width="4.7046%" height="15" fill="rgb(253,195,26)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="228" width="4.7046%" height="15" fill="rgb(243,42,11)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="244" width="4.7046%" height="15" fill="rgb(239,66,17)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="260" width="4.7046%" height="15" fill="rgb(217,132,21)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="276" width="4.7046%" height="15" fill="rgb(252,202,21)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,779 samples, 4.70%)</title><rect x="87.1201%" y="292" width="4.7046%" height="15" fill="rgb(233,98,36)" fg:x="829213" fg:w="44779"/><text x="87.3701%" y="302.50">run (..</text></g><g><title>extension (tdt.py:34) (997 samples, 0.10%)</title><rect x="92.7993%" y="388" width="0.1047%" height="15" fill="rgb(216,153,54)" fg:x="883267" fg:w="997"/><text x="93.0493%" y="398.50"></text></g><g><title>extension (tdt.py:36) (2,419 samples, 0.25%)</title><rect x="92.9125%" y="388" width="0.2541%" height="15" fill="rgb(250,99,7)" fg:x="884345" fg:w="2419"/><text x="93.1625%" y="398.50"></text></g><g><title>weighted_random (tdt.py:29) (1,263 samples, 0.13%)</title><rect x="93.0340%" y="404" width="0.1327%" height="15" fill="rgb(207,56,50)" fg:x="885501" fg:w="1263"/><text x="93.2840%" y="414.50"></text></g><g><title>extension (tdt.py:41) (3,031 samples, 0.32%)</title><rect x="93.1784%" y="388" width="0.3184%" height="15" fill="rgb(244,61,34)" fg:x="886876" fg:w="3031"/><text x="93.4284%" y="398.50"></text></g><g><title>__synthesis (tdt.py:59) (15,750 samples, 1.65%)</title><rect x="91.9434%" y="372" width="1.6548%" height="15" fill="rgb(241,50,38)" fg:x="875121" fg:w="15750"/><text x="92.1934%" y="382.50"></text></g><g><title>simulate_single (simulation.py:43) (15,837 samples, 1.66%)</title><rect x="91.9344%" y="340" width="1.6639%" height="15" fill="rgb(212,166,30)" fg:x="875035" fg:w="15837"/><text x="92.1844%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (15,836 samples, 1.66%)</title><rect x="91.9345%" y="356" width="1.6638%" height="15" fill="rgb(249,127,32)" fg:x="875036" fg:w="15836"/><text x="92.1845%" y="366.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:498) (965 samples, 0.10%)</title><rect x="93.6485%" y="404" width="0.1014%" height="15" fill="rgb(209,103,0)" fg:x="891350" fg:w="965"/><text x="93.8985%" y="414.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (966 samples, 0.10%)</title><rect x="93.6485%" y="388" width="0.1015%" height="15" fill="rgb(238,209,51)" fg:x="891350" fg:w="966"/><text x="93.8985%" y="398.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,852 samples, 0.19%)</title><rect x="93.6463%" y="372" width="0.1946%" height="15" fill="rgb(237,56,23)" fg:x="891329" fg:w="1852"/><text x="93.8963%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,573 samples, 0.17%)</title><rect x="93.8510%" y="452" width="0.1653%" height="15" fill="rgb(215,153,46)" fg:x="893278" fg:w="1573"/><text x="94.1010%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,479 samples, 0.16%)</title><rect x="93.8609%" y="468" width="0.1554%" height="15" fill="rgb(224,49,31)" fg:x="893372" fg:w="1479"/><text x="94.1109%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,859 samples, 0.20%)</title><rect x="94.1099%" y="500" width="0.1953%" height="15" fill="rgb(250,18,42)" fg:x="895742" fg:w="1859"/><text x="94.3599%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,829 samples, 0.30%)</title><rect x="94.0408%" y="484" width="0.2972%" height="15" fill="rgb(215,176,39)" fg:x="895084" fg:w="2829"/><text x="94.2908%" y="494.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1204) (959 samples, 0.10%)</title><rect x="94.4882%" y="532" width="0.1008%" height="15" fill="rgb(223,77,29)" fg:x="899342" fg:w="959"/><text x="94.7382%" y="542.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:569) (1,111 samples, 0.12%)</title><rect x="94.4828%" y="516" width="0.1167%" height="15" fill="rgb(234,94,52)" fg:x="899291" fg:w="1111"/><text x="94.7328%" y="526.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,593 samples, 0.17%)</title><rect x="94.4545%" y="500" width="0.1674%" height="15" fill="rgb(220,154,50)" fg:x="899022" fg:w="1593"/><text x="94.7045%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (4,609 samples, 0.48%)</title><rect x="94.3380%" y="484" width="0.4842%" height="15" fill="rgb(212,11,10)" fg:x="897913" fg:w="4609"/><text x="94.5880%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (7,729 samples, 0.81%)</title><rect x="94.0163%" y="452" width="0.8120%" height="15" fill="rgb(205,166,19)" fg:x="894851" fg:w="7729"/><text x="94.2663%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (7,690 samples, 0.81%)</title><rect x="94.0204%" y="468" width="0.8079%" height="15" fill="rgb(244,198,16)" fg:x="894890" fg:w="7690"/><text x="94.2704%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (11,514 samples, 1.21%)</title><rect x="93.8506%" y="436" width="1.2097%" height="15" fill="rgb(219,69,12)" fg:x="893274" fg:w="11514"/><text x="94.1006%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (2,124 samples, 0.22%)</title><rect x="94.8372%" y="452" width="0.2232%" height="15" fill="rgb(245,30,7)" fg:x="902664" fg:w="2124"/><text x="95.0872%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,379 samples, 0.14%)</title><rect x="94.9154%" y="468" width="0.1449%" height="15" fill="rgb(218,221,48)" fg:x="903409" fg:w="1379"/><text x="95.1654%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (4,536 samples, 0.48%)</title><rect x="95.3068%" y="596" width="0.4766%" height="15" fill="rgb(216,66,15)" fg:x="907134" fg:w="4536"/><text x="95.5568%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (2,325 samples, 0.24%)</title><rect x="95.5391%" y="612" width="0.2443%" height="15" fill="rgb(226,122,50)" fg:x="909345" fg:w="2325"/><text x="95.7891%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (4,860 samples, 0.51%)</title><rect x="95.2802%" y="580" width="0.5106%" height="15" fill="rgb(239,156,16)" fg:x="906881" fg:w="4860"/><text x="95.5302%" y="590.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:945) (1,019 samples, 0.11%)</title><rect x="95.9573%" y="644" width="0.1071%" height="15" fill="rgb(224,27,38)" fg:x="913325" fg:w="1019"/><text x="96.2073%" y="654.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,398 samples, 0.15%)</title><rect x="95.9513%" y="628" width="0.1469%" height="15" fill="rgb(224,39,27)" fg:x="913268" fg:w="1398"/><text x="96.2013%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (2,451 samples, 0.26%)</title><rect x="95.8407%" y="612" width="0.2575%" height="15" fill="rgb(215,92,29)" fg:x="912216" fg:w="2451"/><text x="96.0907%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,799 samples, 0.29%)</title><rect x="95.8226%" y="596" width="0.2941%" height="15" fill="rgb(207,159,16)" fg:x="912043" fg:w="2799"/><text x="96.0726%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (4,375 samples, 0.46%)</title><rect x="95.7961%" y="580" width="0.4597%" height="15" fill="rgb(238,163,47)" fg:x="911791" fg:w="4375"/><text x="96.0461%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (1,261 samples, 0.13%)</title><rect x="96.1233%" y="596" width="0.1325%" height="15" fill="rgb(219,91,49)" fg:x="914905" fg:w="1261"/><text x="96.3733%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (9,715 samples, 1.02%)</title><rect x="95.2382%" y="564" width="1.0207%" height="15" fill="rgb(227,167,31)" fg:x="906481" fg:w="9715"/><text x="95.4882%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (10,449 samples, 1.10%)</title><rect x="95.1619%" y="548" width="1.0978%" height="15" fill="rgb(234,80,54)" fg:x="905755" fg:w="10449"/><text x="95.4119%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (10,507 samples, 1.10%)</title><rect x="95.1563%" y="532" width="1.1039%" height="15" fill="rgb(212,114,2)" fg:x="905701" fg:w="10507"/><text x="95.4063%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (11,019 samples, 1.16%)</title><rect x="95.1379%" y="516" width="1.1577%" height="15" fill="rgb(234,50,24)" fg:x="905526" fg:w="11019"/><text x="95.3879%" y="526.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (11,844 samples, 1.24%)</title><rect x="95.0607%" y="468" width="1.2444%" height="15" fill="rgb(221,68,8)" fg:x="904792" fg:w="11844"/><text x="95.3107%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (11,842 samples, 1.24%)</title><rect x="95.0610%" y="484" width="1.2442%" height="15" fill="rgb(254,180,31)" fg:x="904794" fg:w="11842"/><text x="95.3110%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (11,733 samples, 1.23%)</title><rect x="95.0724%" y="500" width="1.2327%" height="15" fill="rgb(247,130,50)" fg:x="904903" fg:w="11733"/><text x="95.3224%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (23,436 samples, 2.46%)</title><rect x="93.8430%" y="388" width="2.4623%" height="15" fill="rgb(211,109,4)" fg:x="893201" fg:w="23436"/><text x="94.0930%" y="398.50">mo..</text></g><g><title>apply (pandas/core/frame.py:9423) (23,435 samples, 2.46%)</title><rect x="93.8431%" y="404" width="2.4622%" height="15" fill="rgb(238,50,21)" fg:x="893202" fg:w="23435"/><text x="94.0931%" y="414.50">ap..</text></g><g><title>apply (pandas/core/apply.py:678) (23,430 samples, 2.46%)</title><rect x="93.8436%" y="420" width="2.4616%" height="15" fill="rgb(225,57,45)" fg:x="893207" fg:w="23430"/><text x="94.0936%" y="430.50">ap..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (11,849 samples, 1.24%)</title><rect x="95.0603%" y="436" width="1.2449%" height="15" fill="rgb(209,196,50)" fg:x="904788" fg:w="11849"/><text x="95.3103%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (11,847 samples, 1.24%)</title><rect x="95.0605%" y="452" width="1.2447%" height="15" fill="rgb(242,140,13)" fg:x="904790" fg:w="11847"/><text x="95.3105%" y="462.50"></text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (25,344 samples, 2.66%)</title><rect x="93.6433%" y="356" width="2.6627%" height="15" fill="rgb(217,111,7)" fg:x="891301" fg:w="25344"/><text x="93.8933%" y="366.50">de..</text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (23,464 samples, 2.47%)</title><rect x="93.8409%" y="372" width="2.4652%" height="15" fill="rgb(253,193,51)" fg:x="893181" fg:w="23464"/><text x="94.0909%" y="382.50">__..</text></g><g><title>simulate_single (simulation.py:45) (25,887 samples, 2.72%)</title><rect x="93.5983%" y="340" width="2.7198%" height="15" fill="rgb(252,70,29)" fg:x="890872" fg:w="25887"/><text x="93.8483%" y="350.50">si..</text></g><g><title>worker (multiprocessing/pool.py:125) (44,710 samples, 4.70%)</title><rect x="91.8248%" y="308" width="4.6974%" height="15" fill="rgb(232,127,12)" fg:x="873992" fg:w="44710"/><text x="92.0748%" y="318.50">worke..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (44,710 samples, 4.70%)</title><rect x="91.8248%" y="324" width="4.6974%" height="15" fill="rgb(211,180,21)" fg:x="873992" fg:w="44710"/><text x="92.0748%" y="334.50">mapst..</text></g><g><title>simulate_single (simulation.py:52) (1,489 samples, 0.16%)</title><rect x="96.3657%" y="340" width="0.1564%" height="15" fill="rgb(229,72,13)" fg:x="917213" fg:w="1489"/><text x="96.6157%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,489 samples, 0.16%)</title><rect x="96.3657%" y="356" width="0.1564%" height="15" fill="rgb(240,211,49)" fg:x="917213" fg:w="1489"/><text x="96.6157%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,489 samples, 0.16%)</title><rect x="96.3657%" y="372" width="0.1564%" height="15" fill="rgb(219,149,40)" fg:x="917213" fg:w="1489"/><text x="96.6157%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,489 samples, 0.16%)</title><rect x="96.3657%" y="388" width="0.1564%" height="15" fill="rgb(210,127,46)" fg:x="917213" fg:w="1489"/><text x="96.6157%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,488 samples, 0.16%)</title><rect x="96.3658%" y="404" width="0.1563%" height="15" fill="rgb(220,106,7)" fg:x="917214" fg:w="1488"/><text x="96.6158%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,482 samples, 0.16%)</title><rect x="96.3665%" y="420" width="0.1557%" height="15" fill="rgb(249,31,22)" fg:x="917220" fg:w="1482"/><text x="96.6165%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,303 samples, 0.14%)</title><rect x="96.3853%" y="436" width="0.1369%" height="15" fill="rgb(253,1,49)" fg:x="917399" fg:w="1303"/><text x="96.6353%" y="446.50"></text></g><g><title>process 30266:&quot;python simulation.py -p sim0.csv&quot; (44,713 samples, 4.70%)</title><rect x="91.8248%" y="84" width="4.6977%" height="15" fill="rgb(227,144,33)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="94.50">proce..</text></g><g><title>&lt;module&gt; (simulation.py:121) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="100" width="4.6977%" height="15" fill="rgb(249,163,44)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="110.50">&lt;modu..</text></g><g><title>simtest (simulation.py:94) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="116" width="4.6977%" height="15" fill="rgb(234,15,39)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="126.50">simte..</text></g><g><title>simulate (simulation.py:59) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="132" width="4.6977%" height="15" fill="rgb(207,66,16)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="142.50">simul..</text></g><g><title>Pool (multiprocessing/context.py:119) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="148" width="4.6977%" height="15" fill="rgb(233,112,24)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="158.50">Pool ..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="164" width="4.6977%" height="15" fill="rgb(230,90,22)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="174.50">__ini..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="180" width="4.6977%" height="15" fill="rgb(229,61,13)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="190.50">_repo..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="196" width="4.6977%" height="15" fill="rgb(225,57,24)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="206.50">_repo..</text></g><g><title>start (multiprocessing/process.py:121) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="212" width="4.6977%" height="15" fill="rgb(208,169,48)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="222.50">start..</text></g><g><title>_Popen (multiprocessing/context.py:277) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="228" width="4.6977%" height="15" fill="rgb(244,218,51)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="238.50">_Pope..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="244" width="4.6977%" height="15" fill="rgb(214,148,10)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="254.50">__ini..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="260" width="4.6977%" height="15" fill="rgb(225,174,27)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="270.50">_laun..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="276" width="4.6977%" height="15" fill="rgb(230,96,26)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="286.50">_boot..</text></g><g><title>run (multiprocessing/process.py:108) (44,713 samples, 4.70%)</title><rect x="91.8248%" y="292" width="4.6977%" height="15" fill="rgb(232,10,30)" fg:x="873992" fg:w="44713"/><text x="92.0748%" y="302.50">run (..</text></g><g><title>extension (tdt.py:36) (1,705 samples, 0.18%)</title><rect x="97.3036%" y="388" width="0.1791%" height="15" fill="rgb(222,8,50)" fg:x="926140" fg:w="1705"/><text x="97.5536%" y="398.50"></text></g><g><title>extension (tdt.py:41) (2,161 samples, 0.23%)</title><rect x="97.4894%" y="388" width="0.2270%" height="15" fill="rgb(213,81,27)" fg:x="927908" fg:w="2161"/><text x="97.7394%" y="398.50"></text></g><g><title>simulate_single (simulation.py:43) (11,182 samples, 1.17%)</title><rect x="96.6108%" y="340" width="1.1748%" height="15" fill="rgb(245,50,10)" fg:x="919545" fg:w="11182"/><text x="96.8608%" y="350.50"></text></g><g><title>synthesis (tdt.py:67) (11,182 samples, 1.17%)</title><rect x="96.6108%" y="356" width="1.1748%" height="15" fill="rgb(216,100,18)" fg:x="919545" fg:w="11182"/><text x="96.8608%" y="366.50"></text></g><g><title>__synthesis (tdt.py:59) (11,098 samples, 1.17%)</title><rect x="96.6196%" y="372" width="1.1660%" height="15" fill="rgb(236,147,54)" fg:x="919629" fg:w="11098"/><text x="96.8696%" y="382.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:64) (1,407 samples, 0.15%)</title><rect x="97.8264%" y="372" width="0.1478%" height="15" fill="rgb(205,143,26)" fg:x="931116" fg:w="1407"/><text x="98.0764%" y="382.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:812) (1,107 samples, 0.12%)</title><rect x="97.9800%" y="452" width="0.1163%" height="15" fill="rgb(236,26,9)" fg:x="932578" fg:w="1107"/><text x="98.2300%" y="462.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/apply.py:859) (1,041 samples, 0.11%)</title><rect x="97.9870%" y="468" width="0.1094%" height="15" fill="rgb(221,165,53)" fg:x="932644" fg:w="1041"/><text x="98.2370%" y="478.50"></text></g><g><title>mode (pandas/core/algorithms.py:996) (1,374 samples, 0.14%)</title><rect x="98.1644%" y="500" width="0.1444%" height="15" fill="rgb(214,110,17)" fg:x="934333" fg:w="1374"/><text x="98.4144%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2122) (2,101 samples, 0.22%)</title><rect x="98.1135%" y="484" width="0.2207%" height="15" fill="rgb(237,197,12)" fg:x="933848" fg:w="2101"/><text x="98.3635%" y="494.50"></text></g><g><title>__init__ (pandas/core/series.py:509) (1,244 samples, 0.13%)</title><rect x="98.4213%" y="500" width="0.1307%" height="15" fill="rgb(205,84,17)" fg:x="936778" fg:w="1244"/><text x="98.6713%" y="510.50"></text></g><g><title>mode (pandas/core/series.py:2127) (3,546 samples, 0.37%)</title><rect x="98.3342%" y="484" width="0.3726%" height="15" fill="rgb(237,18,45)" fg:x="935949" fg:w="3546"/><text x="98.5842%" y="494.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:814) (5,866 samples, 0.62%)</title><rect x="98.0964%" y="452" width="0.6163%" height="15" fill="rgb(221,87,14)" fg:x="933685" fg:w="5866"/><text x="98.3464%" y="462.50"></text></g><g><title>f (pandas/core/frame.py:10744) (5,835 samples, 0.61%)</title><rect x="98.0996%" y="468" width="0.6130%" height="15" fill="rgb(238,186,15)" fg:x="933716" fg:w="5835"/><text x="98.3496%" y="478.50"></text></g><g><title>apply_standard (pandas/core/apply.py:798) (8,725 samples, 0.92%)</title><rect x="97.9798%" y="436" width="0.9167%" height="15" fill="rgb(208,115,11)" fg:x="932576" fg:w="8725"/><text x="98.2298%" y="446.50"></text></g><g><title>apply_series_generator (pandas/core/apply.py:818) (1,672 samples, 0.18%)</title><rect x="98.7209%" y="452" width="0.1757%" height="15" fill="rgb(254,175,0)" fg:x="939629" fg:w="1672"/><text x="98.9709%" y="462.50"></text></g><g><title>copy (pandas/core/generic.py:6454) (1,024 samples, 0.11%)</title><rect x="98.7889%" y="468" width="0.1076%" height="15" fill="rgb(227,24,42)" fg:x="940277" fg:w="1024"/><text x="99.0389%" y="478.50"></text></g><g><title>reindex (pandas/core/indexes/base.py:4268) (3,316 samples, 0.35%)</title><rect x="99.0678%" y="596" width="0.3484%" height="15" fill="rgb(223,211,37)" fg:x="942931" fg:w="3316"/><text x="99.3178%" y="606.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3802) (1,697 samples, 0.18%)</title><rect x="99.2379%" y="612" width="0.1783%" height="15" fill="rgb(235,49,27)" fg:x="944550" fg:w="1697"/><text x="99.4879%" y="622.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5375) (3,561 samples, 0.37%)</title><rect x="99.0475%" y="580" width="0.3741%" height="15" fill="rgb(254,97,51)" fg:x="942738" fg:w="3561"/><text x="99.2975%" y="590.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:828) (1,063 samples, 0.11%)</title><rect x="99.5422%" y="628" width="0.1117%" height="15" fill="rgb(249,51,40)" fg:x="947447" fg:w="1063"/><text x="99.7922%" y="638.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:740) (1,810 samples, 0.19%)</title><rect x="99.4640%" y="612" width="0.1902%" height="15" fill="rgb(210,128,45)" fg:x="946702" fg:w="1810"/><text x="99.7140%" y="622.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5431) (2,061 samples, 0.22%)</title><rect x="99.4504%" y="596" width="0.2165%" height="15" fill="rgb(224,137,50)" fg:x="946573" fg:w="2061"/><text x="99.7004%" y="606.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5380) (3,308 samples, 0.35%)</title><rect x="99.4261%" y="580" width="0.3476%" height="15" fill="rgb(242,15,9)" fg:x="946342" fg:w="3308"/><text x="99.6761%" y="590.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5451) (968 samples, 0.10%)</title><rect x="99.6720%" y="596" width="0.1017%" height="15" fill="rgb(233,187,41)" fg:x="948682" fg:w="968"/><text x="99.9220%" y="606.50"></text></g><g><title>reindex (pandas/core/generic.py:5360) (7,217 samples, 0.76%)</title><rect x="99.0168%" y="564" width="0.7582%" height="15" fill="rgb(227,2,29)" fg:x="942446" fg:w="7217"/><text x="99.2668%" y="574.50"></text></g><g><title>reindex (pandas/core/series.py:4918) (7,701 samples, 0.81%)</title><rect x="98.9666%" y="548" width="0.8091%" height="15" fill="rgb(222,70,3)" fg:x="941968" fg:w="7701"/><text x="99.2166%" y="558.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:589) (7,749 samples, 0.81%)</title><rect x="98.9618%" y="532" width="0.8141%" height="15" fill="rgb(213,11,42)" fg:x="941922" fg:w="7749"/><text x="99.2118%" y="542.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:120) (8,112 samples, 0.85%)</title><rect x="98.9503%" y="516" width="0.8523%" height="15" fill="rgb(225,150,9)" fg:x="941813" fg:w="8112"/><text x="99.2003%" y="526.50"></text></g><g><title>wrap_results_for_axis (pandas/core/apply.py:890) (8,708 samples, 0.91%)</title><rect x="98.8971%" y="468" width="0.9149%" height="15" fill="rgb(230,162,45)" fg:x="941307" fg:w="8708"/><text x="99.1471%" y="478.50"></text></g><g><title>__init__ (pandas/core/frame.py:709) (8,708 samples, 0.91%)</title><rect x="98.8971%" y="484" width="0.9149%" height="15" fill="rgb(222,14,52)" fg:x="941307" fg:w="8708"/><text x="99.1471%" y="494.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (8,651 samples, 0.91%)</title><rect x="98.9031%" y="500" width="0.9089%" height="15" fill="rgb(254,198,14)" fg:x="941364" fg:w="8651"/><text x="99.1531%" y="510.50"></text></g><g><title>mode (pandas/core/frame.py:10746) (17,486 samples, 1.84%)</title><rect x="97.9754%" y="388" width="1.8371%" height="15" fill="rgb(220,217,30)" fg:x="932534" fg:w="17486"/><text x="98.2254%" y="398.50">m..</text></g><g><title>apply (pandas/core/frame.py:9423) (17,486 samples, 1.84%)</title><rect x="97.9754%" y="404" width="1.8371%" height="15" fill="rgb(215,146,41)" fg:x="932534" fg:w="17486"/><text x="98.2254%" y="414.50">a..</text></g><g><title>apply (pandas/core/apply.py:678) (17,484 samples, 1.84%)</title><rect x="97.9756%" y="420" width="1.8369%" height="15" fill="rgb(217,27,36)" fg:x="932536" fg:w="17484"/><text x="98.2256%" y="430.50">a..</text></g><g><title>apply_standard (pandas/core/apply.py:801) (8,719 samples, 0.92%)</title><rect x="98.8965%" y="436" width="0.9160%" height="15" fill="rgb(219,218,39)" fg:x="941301" fg:w="8719"/><text x="99.1465%" y="446.50"></text></g><g><title>wrap_results (pandas/core/apply.py:827) (8,713 samples, 0.92%)</title><rect x="98.8971%" y="452" width="0.9154%" height="15" fill="rgb(219,4,42)" fg:x="941307" fg:w="8713"/><text x="99.1471%" y="462.50"></text></g><g><title>__build_consensus_base (dna_transcoder.py:65) (17,508 samples, 1.84%)</title><rect x="97.9743%" y="372" width="1.8395%" height="15" fill="rgb(249,119,36)" fg:x="932523" fg:w="17508"/><text x="98.2243%" y="382.50">_..</text></g><g><title>decode_with_consensus_base (dna_transcoder.py:83) (18,931 samples, 1.99%)</title><rect x="97.8251%" y="356" width="1.9890%" height="15" fill="rgb(209,23,33)" fg:x="931103" fg:w="18931"/><text x="98.0751%" y="366.50">d..</text></g><g><title>simulate_single (simulation.py:45) (19,388 samples, 2.04%)</title><rect x="97.7856%" y="340" width="2.0370%" height="15" fill="rgb(211,10,0)" fg:x="930727" fg:w="19388"/><text x="98.0356%" y="350.50">s..</text></g><g><title>_launch (multiprocessing/popen_fork.py:71) (33,098 samples, 3.48%)</title><rect x="96.5225%" y="260" width="3.4774%" height="15" fill="rgb(208,99,37)" fg:x="918705" fg:w="33098"/><text x="96.7725%" y="270.50">_la..</text></g><g><title>_bootstrap (multiprocessing/process.py:315) (33,098 samples, 3.48%)</title><rect x="96.5225%" y="276" width="3.4774%" height="15" fill="rgb(213,132,31)" fg:x="918705" fg:w="33098"/><text x="96.7725%" y="286.50">_bo..</text></g><g><title>run (multiprocessing/process.py:108) (33,098 samples, 3.48%)</title><rect x="96.5225%" y="292" width="3.4774%" height="15" fill="rgb(243,129,40)" fg:x="918705" fg:w="33098"/><text x="96.7725%" y="302.50">run..</text></g><g><title>worker (multiprocessing/pool.py:125) (33,090 samples, 3.48%)</title><rect x="96.5233%" y="308" width="3.4766%" height="15" fill="rgb(210,66,33)" fg:x="918713" fg:w="33090"/><text x="96.7733%" y="318.50">wor..</text></g><g><title>mapstar (multiprocessing/pool.py:48) (33,090 samples, 3.48%)</title><rect x="96.5233%" y="324" width="3.4766%" height="15" fill="rgb(209,189,4)" fg:x="918713" fg:w="33090"/><text x="96.7733%" y="334.50">map..</text></g><g><title>simulate_single (simulation.py:52) (1,291 samples, 0.14%)</title><rect x="99.8643%" y="340" width="0.1356%" height="15" fill="rgb(214,107,37)" fg:x="950512" fg:w="1291"/><text x="100.1143%" y="350.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,291 samples, 0.14%)</title><rect x="99.8643%" y="356" width="0.1356%" height="15" fill="rgb(245,88,54)" fg:x="950512" fg:w="1291"/><text x="100.1143%" y="366.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,291 samples, 0.14%)</title><rect x="99.8643%" y="372" width="0.1356%" height="15" fill="rgb(205,146,20)" fg:x="950512" fg:w="1291"/><text x="100.1143%" y="382.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,291 samples, 0.14%)</title><rect x="99.8643%" y="388" width="0.1356%" height="15" fill="rgb(220,161,25)" fg:x="950512" fg:w="1291"/><text x="100.1143%" y="398.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,289 samples, 0.14%)</title><rect x="99.8645%" y="404" width="0.1354%" height="15" fill="rgb(215,152,15)" fg:x="950514" fg:w="1289"/><text x="100.1145%" y="414.50"></text></g><g><title>sum_of_elements (simulation.py:20) (1,285 samples, 0.14%)</title><rect x="99.8649%" y="420" width="0.1350%" height="15" fill="rgb(233,192,44)" fg:x="950518" fg:w="1285"/><text x="100.1149%" y="430.50"></text></g><g><title>&lt;genexpr&gt; (simulation.py:20) (1,170 samples, 0.12%)</title><rect x="99.8770%" y="436" width="0.1229%" height="15" fill="rgb(240,170,46)" fg:x="950633" fg:w="1170"/><text x="100.1270%" y="446.50"></text></g><g><title>all (951,804 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(207,104,33)" fg:x="0" fg:w="951804"/><text x="0.2500%" y="62.50"></text></g><g><title>process 29654:&quot;python simulation.py -p sim0.csv&quot; (951,804 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(219,21,39)" fg:x="0" fg:w="951804"/><text x="0.2500%" y="78.50">process 29654:&quot;python simulation.py -p sim0.csv&quot;</text></g><g><title>process 30267:&quot;python simulation.py -p sim0.csv&quot; (33,099 samples, 3.48%)</title><rect x="96.5225%" y="84" width="3.4775%" height="15" fill="rgb(214,133,29)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="94.50">pro..</text></g><g><title>&lt;module&gt; (simulation.py:121) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="100" width="3.4775%" height="15" fill="rgb(226,93,6)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="110.50">&lt;mo..</text></g><g><title>simtest (simulation.py:94) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="116" width="3.4775%" height="15" fill="rgb(252,222,34)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="126.50">sim..</text></g><g><title>simulate (simulation.py:59) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="132" width="3.4775%" height="15" fill="rgb(252,92,48)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="142.50">sim..</text></g><g><title>Pool (multiprocessing/context.py:119) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="148" width="3.4775%" height="15" fill="rgb(245,223,24)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="158.50">Poo..</text></g><g><title>__init__ (multiprocessing/pool.py:212) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="164" width="3.4775%" height="15" fill="rgb(205,176,3)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="174.50">__i..</text></g><g><title>_repopulate_pool (multiprocessing/pool.py:303) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="180" width="3.4775%" height="15" fill="rgb(235,151,15)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="190.50">_re..</text></g><g><title>_repopulate_pool_static (multiprocessing/pool.py:326) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="196" width="3.4775%" height="15" fill="rgb(237,209,11)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="206.50">_re..</text></g><g><title>start (multiprocessing/process.py:121) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="212" width="3.4775%" height="15" fill="rgb(243,227,24)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="222.50">sta..</text></g><g><title>_Popen (multiprocessing/context.py:277) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="228" width="3.4775%" height="15" fill="rgb(239,193,16)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="238.50">_Po..</text></g><g><title>__init__ (multiprocessing/popen_fork.py:19) (33,099 samples, 3.48%)</title><rect x="96.5225%" y="244" width="3.4775%" height="15" fill="rgb(231,27,9)" fg:x="918705" fg:w="33099"/><text x="96.7725%" y="254.50">__i..</text></g></svg></svg>